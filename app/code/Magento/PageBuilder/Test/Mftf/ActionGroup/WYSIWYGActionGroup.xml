<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="AddTextToTinyMCEActionGroup">
        <arguments>
            <argument name="property" defaultValue=""/>
            <argument name="section" defaultValue="TextOnConfiguration"/>
        </arguments>
        <comment userInput="Adding Text To Tiny MCE" stepKey="commentAddTextToTinyMCE"/>
        <waitForElementVisible selector="#{{section.tinyMCEIFrame}}" stepKey="waitForIFrame"/>
        <executeJS function="tinymce.activeEditor.setContent(tinymce.activeEditor.getContent() + '{{property.value}}')" stepKey="addTextToWYSIWYG"/>
        <!-- Must click Tiny MCE or form will not recognize that text has been added -->
        <click selector="#{{section.tinyMCEIFrame}}" stepKey="clickIFrame"/>
        <switchToIFrame selector="{{section.tinyMCEIFrame}}" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{section.textInIFrame(property.value)}}" stepKey="waitForTextVisible"/>
        <switchToIFrame stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="AddTextToTinyMCEInlineActionGroup">
        <arguments>
            <argument name="section"/>
            <argument name="text" defaultValue="{{PageBuilderTextProperty.value}}" type="string"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="pageBuilderArea" defaultValue="" type="string"/>
        </arguments>
        <comment userInput="addTextToTinyMCEInline" stepKey="comment"/>
        <waitForElementVisible selector="{{section.tinymceInFocus(index)}}" stepKey="waitForEditorFocused"/>
        <pressKey selector="{{section.tinymce(index)}}" userInput="{{text}}" stepKey="enterText"/>
        <waitForPageLoad stepKey="waitForTextEdit"/>
        <click selector="{{pageBuilderArea}}{{PageBuilderPanel.searchPanel}}" stepKey="loseFocusFromEditor"/>
        <waitForPageLoad stepKey="waitForUnFocus"/>
    </actionGroup>
    <actionGroup name="AddTextToTinyMCEInlineWYSIWYGDisabledActionGroup" extends="AddTextToTinyMCEInlineActionGroup">
        <comment userInput="addTextToTinyMCEInlineWYSIWYGDisabled" stepKey="comment"/>
        <waitForElementVisible selector="{{section.textArea(index)}}" stepKey="waitForEditorFocused"/>
        <pressKey selector="{{section.textArea(index)}}" userInput="{{text}}" stepKey="enterText"/>
        <waitForPageLoad stepKey="waitForTextEdit"/>
        <click selector="{{pageBuilderArea}}{{PageBuilderPanel.searchPanel}}" stepKey="loseFocusFromEditor"/>
        <waitForPageLoad stepKey="waitForUnFocus"/>
    </actionGroup>
    <actionGroup name="ReplaceTextToTinyMCEActionGroup" extends="AddTextToTinyMCEActionGroup">
        <executeJS function="tinymce.activeEditor.setContent('{{property.value}}')" stepKey="addTextToWYSIWYG"/>
    </actionGroup>
    <actionGroup name="AddVariableToTinyMCEActionGroup">
        <arguments>
            <argument name="variable" defaultValue=""/>
        </arguments>
        <comment userInput="Adding Variable To Tiny MCE" stepKey="commentAddVariableToTinyMCE"/>
        <waitForElementVisible selector="{{WYSIWYGOnPageBuilderInline.notCss}} {{TinyMCESection.InsertVariableIcon}}" stepKey="waitForInsertVariable1"/>
        <click selector="{{WYSIWYGOnPageBuilderInline.notCss}} {{TinyMCESection.InsertVariableIcon}}" stepKey="clickInsertVariable1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
        <waitForElementVisible selector="{{VariableSection.Radio(variable.variableName)}}" stepKey="waitForVariable1"/>
        <checkOption selector="{{VariableSection.Radio(variable.variableName)}}" stepKey="selectVariable"/>
        <waitForElementVisible selector="{{VariableSection.InsertWidget}}" stepKey="waitForInsertVariable2"/>
        <click selector="{{VariableSection.InsertWidget}}" stepKey="clickInsertVariable2"/>
        <waitForElementNotVisible selector="{{VariableSection.InsertWidget}}" stepKey="waitForVariableModalToClose"/>
    </actionGroup>
    <actionGroup name="AddVariableToTinyMCEInlineActionGroup" extends="AddVariableToTinyMCEActionGroup">
        <waitForElementVisible selector="{{TinyMCESection.InsertVariableIcon}}" stepKey="waitForInsertVariable1"/>
        <click selector="{{TinyMCESection.InsertVariableIcon}}" stepKey="clickInsertVariable1"/>
    </actionGroup>
    <actionGroup name="SeeVariableTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="labelValue" defaultValue=""/>
        </arguments>
        <waitForElementVisible selector="{{section.text(index, labelValue)}}" stepKey="waitForVariable"/>
        <seeElement selector="{{section.text(index, labelValue)}}" stepKey="seeVariable"/>
    </actionGroup>
    <actionGroup name="AddVariableToTinyMCE3ActionGroup" extends="AddVariableToTinyMCEActionGroup">
        <arguments>
            <argument name="variable" defaultValue=""/>
        </arguments>
        <comment userInput="Adding Variable To TinyMCE3" stepKey="commentAddVariableToTinyMCE"/>
        <waitForElementVisible selector="{{TextOnConfiguration.tinyMCE3VariableBtn}}" stepKey="waitForInsertVariable1"/>
        <click selector="{{TextOnConfiguration.tinyMCE3VariableBtn}}" stepKey="clickInsertVariable1"/>
        <waitForElementVisible selector="{{TextOnConfiguration.tinyMCE3VariableBtn}}" stepKey="waitForVariableModalToClose"/>
    </actionGroup>
    <actionGroup name="AddPageLinkVariableWYSIWYGDisabledActionGroup">
        <arguments>
            <argument name="variable" defaultValue=""/>
        </arguments>
        <waitForElementVisible selector="{{TextOnConfiguration.insertVariableButton}}" stepKey="waitForInsertVariable1"/>
        <click selector="{{TextOnConfiguration.insertVariableButton}}" stepKey="clickInsertVariable1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
        <waitForElementVisible selector="{{VariableSection.Radio(variable.variableName)}}" stepKey="waitForVariable1"/>
        <checkOption selector="{{VariableSection.Radio(variable.variableName)}}" stepKey="selectVariable"/>
        <waitForElementVisible selector="{{VariableSection.InsertWidget}}" stepKey="waitForInsertVariable2"/>
        <click selector="{{VariableSection.InsertWidget}}" stepKey="clickInsertVariable2"/>
        <waitForElementNotVisible selector="{{VariableSection.InsertWidget}}" stepKey="waitForVariableModalToClose"/>
        <waitForElementVisible selector="{{TextOnConfiguration.textArea}}" stepKey="waitForTextArea"/>
        <executeJS function="return document.getElementById('{{TextOnConfiguration.textAreaId}}').value;" stepKey="getText"/>
        <assertContains stepKey="assertValue">
            <expectedResult type="string">{{variable.editPanelValue}}</expectedResult>
            <actualResult type="variable">getText</actualResult>
        </assertContains>
    </actionGroup>
    <actionGroup name="AddPageLinkWidgetToTinyMCEActionGroup">
        <arguments>
            <argument name="widget" defaultValue=""/>
            <argument name="page" defaultValue="" type="string"/>
        </arguments>
        <comment userInput="Adding Widget To Tiny MCE" stepKey="commentAddWidget"/>
        <waitForElementVisible selector="{{WYSIWYGOnPageBuilderInline.notCss}} {{TinyMCESection.InsertWidgetIcon}}" stepKey="waitForInsertWidget1"/>
        <click selector="{{WYSIWYGOnPageBuilderInline.notCss}} {{TinyMCESection.InsertWidgetIcon}}" stepKey="clickAddWidgetBtn"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
        <waitForElementVisible selector="{{WidgetSection.WidgetType}}" stepKey="waitForWidgetType"/>
        <selectOption selector="{{WidgetSection.WidgetType}}" userInput="{{TinyMCEWidgetCMSPageLink.widgetType}}" stepKey="selectCMSPageLinkWidget"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear2"/>
        <waitForElementVisible selector="{{WidgetSection.SelectPageButton}}" stepKey="waitForSelectPage"/>
        <click selector="{{WidgetSection.SelectPageButton}}" stepKey="clickSelectPage"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSelectPageModal"/>
        <waitForElementVisible selector="{{WidgetSection.SelectPageFilterInput('chooser_title')}}" stepKey="waitForGrid"/>
        <fillField selector="{{WidgetSection.SelectPageFilterInput('chooser_identifier')}}" userInput="{{page}}" stepKey="enterPageName"/>
        <click selector="{{AdminProductGridFilterSection.applyFilters}}" stepKey="clickSearch"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear3"/>
        <waitForElementVisible selector="//td[contains(@class,'col-url')][contains(text(),'{{page}}')]" stepKey="waitForSearchResult"/>
        <click selector="//td[contains(@class,'col-url')][contains(text(),'{{page}}')]" stepKey="clickCmsPageLinkRow"/>
        <waitForElementNotVisible selector="//td[contains(@class,'col-url')][contains(text(),'{{page}}')]" stepKey="waitForPageSelectionModalToClose"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear4"/>
        <waitForPageLoad stepKey="waitForPanelSlideOut"/>
        <waitForElementVisible selector="{{WidgetSection.InsertWidget}}" stepKey="waitForInsertWidget2"/>
        <click selector="{{WidgetSection.InsertWidget}}" stepKey="clickInsertWidget2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear5"/>
        <waitForElementNotVisible selector="{{WidgetSection.InsertWidget}}" stepKey="waitForInsertWidgetModalToClose"/>
    </actionGroup>
    <actionGroup name="AddPageLinkWidgetToTinyMCEInlineActionGroup" extends="AddPageLinkWidgetToTinyMCEActionGroup">
        <waitForElementVisible selector="{{TinyMCESection.InsertWidgetIcon}}" stepKey="waitForInsertWidget1"/>
        <click selector="{{TinyMCESection.InsertWidgetIcon}}" stepKey="clickAddWidgetBtn"/>
    </actionGroup>
    <actionGroup name="AddPageLinkWidgetToTinyMCE3ActionGroup" extends="AddPageLinkWidgetToTinyMCEActionGroup">
        <arguments>
            <argument name="widget" defaultValue=""/>
            <argument name="page" defaultValue="" type="string"/>
        </arguments>
        <comment userInput="Adding Widget To TinyMCE3" stepKey="commentAddWidget"/>
        <waitForElementVisible selector="{{TextOnConfiguration.tinyMCE3WidgetBtn}}" stepKey="waitForInsertWidget1"/>
        <click selector="{{TextOnConfiguration.tinyMCE3WidgetBtn}}" stepKey="clickAddWidgetBtn"/>
        <waitForElementVisible selector="{{TextOnConfiguration.tinyMCE3WidgetBtn}}" stepKey="waitForInsertWidgetModalToClose"/>
    </actionGroup>
    <actionGroup name="AddPageLinkWidgetWYSIWYGDisabledActionGroup" extends="AddPageLinkWidgetToTinyMCEActionGroup">
        <arguments>
            <argument name="widget" defaultValue=""/>
            <argument name="page" defaultValue="" type="string"/>
        </arguments>
        <comment userInput="Adding Widget To Textarea" stepKey="commentAddWidget"/>
        <waitForElementVisible selector="{{TextOnConfiguration.insertWidgetButton}}" stepKey="waitForInsertWidget1"/>
        <click selector="{{TextOnConfiguration.insertWidgetButton}}" stepKey="clickAddWidgetBtn"/>
        <waitForElementVisible selector="{{TextOnConfiguration.textArea}}" stepKey="waitForInsertWidgetModalToClose"/>
        <executeJS function="return document.getElementById('{{TextOnConfiguration.textAreaId}}').value;" stepKey="getText"/>
        <assertContains stepKey="assertValue">
            <expectedResult type="string">{{widget.editPanelValue}}</expectedResult>
            <actualResult type="variable">getText</actualResult>
        </assertContains>
    </actionGroup>
    <actionGroup name="ValidateTextInTinyMCEActionGroup">
        <arguments>
            <argument name="property" defaultValue=""/>
            <argument name="section" defaultValue="TextOnConfiguration"/>
        </arguments>
        <comment userInput="Validating Text In Tiny MCE" stepKey="commentValidateTextTinyMCE"/>
        <waitForElementVisible selector="#{{section.tinyMCEIFrame}}" stepKey="waitForIFrame"/>
        <switchToIFrame selector="{{section.tinyMCEIFrame}}" stepKey="switchToIFrame"/>
        <see selector="body" userInput="{{property.value}}" stepKey="seeText"/>
        <switchToIFrame stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="InsertLinkInWYSIWYGActionGroup">
        <arguments>
            <argument name="section" defaultValue="TinyMCESection"/>
            <argument name="url" type="string"/>
            <argument name="textToDisplay" type="string"/>
            <argument name="title" type="string" defaultValue=""/>
            <argument name="wysiwygArea" defaultValue="{{WYSIWYGOnPageBuilderInline.notCss}}" type="string"/>
        </arguments>
        <comment userInput="insertLinkInWYSIWYG" stepKey="comment"/>
        <waitForElementVisible selector="{{wysiwygArea}} {{section.InsertLink}}" stepKey="waitForInsertLinkButton"/>
        <click selector="{{wysiwygArea}} {{section.InsertLink}}" stepKey="clickInsertLinkButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{WYSIWYGInsertLinkModal.modal}}" stepKey="waitForInsertLinkModal"/>
        <fillField selector="{{WYSIWYGInsertLinkModal.urlInput}}" userInput="{{url}}" stepKey="insertUrl"/>
        <fillField selector="{{WYSIWYGInsertLinkModal.textToDisplayInput}}" userInput="{{textToDisplay}}" stepKey="insertTextToDisplay"/>
        <fillField selector="{{WYSIWYGInsertLinkModal.titleInput}}" userInput="{{title}}" stepKey="insertTitle"/>
        <click selector="{{WYSIWYGInsertLinkModal.okButton}}" stepKey="clickOkButton"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForElementNotVisible selector="{{WYSIWYGInsertLinkModal.modal}}" stepKey="waitForInsertLinkModalGone"/>
    </actionGroup>
    <actionGroup name="InsertLinkInWYSIWYGExistingTextActionGroup">
        <arguments>
            <argument name="section" defaultValue="TinyMCESection"/>
            <argument name="url" type="string"/>
            <argument name="title" type="string" defaultValue=""/>
            <argument name="wysiwygArea" defaultValue="{{WYSIWYGOnPageBuilderInline.notCss}}" type="string"/>
        </arguments>
        <comment userInput="insertLinkInWYSIWYGExistingText" stepKey="comment"/>
        <waitForElementVisible selector="{{wysiwygArea}} {{section.InsertLink}}" stepKey="waitForInsertLinkButton"/>
        <click selector="{{wysiwygArea}} {{section.InsertLink}}" stepKey="clickInsertLinkButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{WYSIWYGInsertLinkModal.modal}}" stepKey="waitForInsertLinkModal"/>
        <fillField selector="{{WYSIWYGInsertLinkModal.urlInput}}" userInput="{{url}}" stepKey="insertUrl"/>
        <fillField selector="{{WYSIWYGInsertLinkModal.titleInput}}" userInput="{{title}}" stepKey="insertTitle"/>
        <click selector="{{WYSIWYGInsertLinkModal.okButton}}" stepKey="clickOkButton"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForElementNotVisible selector="{{WYSIWYGInsertLinkModal.modal}}" stepKey="waitForInsertLinkModalGone"/>
    </actionGroup>
    <actionGroup name="AssertTextareaContainsValueActionGroup">
        <arguments>
            <argument name="selector" type="string"/>
            <argument name="value" type="string"/>
        </arguments>
        <executeJS function="return document.evaluate(&quot;{{selector}}&quot;, document.body).iterateNext().value" stepKey="textareaValue"/>
        <assertContains stepKey="assertTextareaContainsValue">
            <expectedResult type="string">{{value}}</expectedResult>
            <actualResult type="variable">textareaValue</actualResult>
        </assertContains>
    </actionGroup>
    <actionGroup name="ClickInsertImageInTinyMCEActionGroup">
        <!-- This goes in CE repo -->
        <comment userInput="clickInsertImageInTinyMCE" stepKey="comment"/>
        <waitForElementVisible selector="{{TinyMCESection.InsertImageIcon}}" stepKey="waitForInsertImageIcon"/>
        <click selector="{{TinyMCESection.InsertImageIcon}}" stepKey="clickInsertImageIcon"/>
        <waitForPageLoad stepKey="waitForPageLoad" />
        <waitForElementVisible selector="{{MediaGallerySection.Browse}}" stepKey="waitForBrowseImagesButton"/>
    </actionGroup>
    <actionGroup name="ClickMediaGalleryStorageRootArrowActionGroup">
        <!-- This goes in CE repo -->
        <click selector="{{MediaGallerySection.StorageRootArrow}}" stepKey="clickStorageRootArrow"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <waitForElement selector="{{MediaGallerySection.StorageRootArrowClicked}}" stepKey="waitForStorageRootArrowClicked"/>
    </actionGroup>
    <actionGroup name="InlineEditWYSIWYGFromStageActionGroup">
        <arguments>
            <argument name="contentType"/>
            <argument name="content" type="string"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <click selector="{{PageBuilderStage.inlineWYSIWYGEditor(contentType.role, index)}}" stepKey="focusOnEditorArea"/>
        <waitForElementVisible selector="{{PageBuilderStage.inlineWYSIWYGEditorPanel(contentType.role, index)}}" stepKey="waitForEditorPanel"/>
        <pressKey selector="{{PageBuilderStage.inlineWYSIWYGEditor(contentType.role, index)}}" userInput="{{content}}" stepKey="enterContentIntoEditor"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="loseFocusFromEditor"/>
    </actionGroup>
    <actionGroup name="InlineEditTextAreaFromStageActionGroup">
        <arguments>
            <argument name="contentType"/>
            <argument name="content" type="string"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <click selector="{{PageBuilderStage.inlineTextAreaEditor(contentType.role, index)}}" stepKey="focusOnEditorArea"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <fillField selector="{{PageBuilderStage.inlineTextAreaEditor(contentType.role, index)}}" userInput="{{content}}" stepKey="enterContentIntoEditor"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="loseFocusFromEditor"/>
    </actionGroup>
    <actionGroup name="FormatTextTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="WYSIWYGOnPageBuilderInline"/>
            <!-- Receives pagebuilder_tinymce_format -->
            <argument name="format" defaultValue="TinyMCEFormatHeading1"/>
        </arguments>
        <waitForElementVisible selector="{{section.formatSelector}}" stepKey="waitForFormatList"/>
        <click selector="{{section.formatSelector}}" stepKey="expandFormatList"/>
        <waitForElementVisible selector="{{section.formatOption(format.label)}}" stepKey="waitForFormatOptionVisible"/>
        <click selector="{{section.formatOption(format.label)}}" stepKey="clickFormatOption"/>
        <waitForElementNotVisible selector="{{section.formatOption(format.label)}}" stepKey="waitForFormatInvisible"/>
    </actionGroup>
    <actionGroup name="WaitForTinyMCEInFocusActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{section.tinymceInFocus(index)}}" stepKey="waitForTinyMCEInFocus"/>
    </actionGroup>
    <actionGroup name="ClickDirectiveTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="labelValue" defaultValue=""/>
        </arguments>
        <waitForElementVisible selector="{{section.directive(index, labelValue)}}" stepKey="waitForDirective"/>
        <click selector="{{section.directive(index, labelValue)}}" stepKey="clickDirective"/>
    </actionGroup>
    <actionGroup name="SeeDirectiveFocusedTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="labelValue" defaultValue=""/>
        </arguments>
        <waitForElementVisible selector="{{section.directiveFocused(index, labelValue)}}" stepKey="waitForDirectiveFocused"/>
        <seeElement selector="{{section.directiveFocused(index, labelValue)}}" stepKey="verifyDirectiveIsFocused"/>
    </actionGroup>
    <actionGroup name="ScrollToTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <scrollTo selector="{{section.tinymce(index)}}" stepKey="scrollToTinyMCE"/>
        <waitForElementVisible selector="{{section.tinymce(index)}}" stepKey="waitForTinyMCEVisible"/>
    </actionGroup>
    <actionGroup name="AssertSelectedTextActionGroup">
        <arguments>
            <argument name="expectedSelectedText"/>
        </arguments>
        <executeJS function="return window.getSelection().toString()" stepKey="selectionString"/>
        <assertEquals stepKey="assertSelectionText">
            <expectedResult type="string">{{expectedSelectedText.selection}}</expectedResult>
            <actualResult type="variable">selectionString</actualResult>
        </assertEquals>
    </actionGroup>
    <actionGroup name="DoubleClickVariableTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="variable"/>
        </arguments>
        <waitForElementVisible selector="{{section.directive(index, variable.editPanelValue)}}" stepKey="waitForVariableVisible"/>
        <doubleClick selector="{{section.directive(index, variable.editPanelValue)}}" stepKey="doubleClickOnVariablePlaceholder"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{VariableSection.CancelBtnEnabled}}" stepKey="waitForCancelButton"/>
        <waitForElementVisible selector="{{VariableSection.Radio(variable.variableName)}}" stepKey="waitForVariableAfterDoubleClick"/>
    </actionGroup>
    <actionGroup name="CloseVariablePanelTinyMCEActionGroup">
        <waitForElementVisible selector="{{VariableSection.CancelBtnEnabled}}" stepKey="waitForCancelButton"/>
        <click selector="{{VariableSection.CancelBtnEnabled}}" stepKey="clickCancelButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementNotVisible selector="{{VariableSection.CancelBtnEnabled}}" stepKey="waitForVariableCancelNotVisible"/>
    </actionGroup>
    <actionGroup name="DoubleClickWidgetTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="widget"/>
        </arguments>
        <waitForElementVisible selector="{{section.directive('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="waitForWidgetVisible"/>
        <doubleClick selector="{{section.directive('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="doubleClickOnWidgetPlaceholder"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="waitForCancelButtonVisible"/>
    </actionGroup>
    <actionGroup name="CloseWidgetPanelTinyMCEActionGroup">
        <waitForElementVisible selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="waitForCancelButton"/>
        <click selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="clickCancelButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementNotVisible selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="waitForCancelButtonNotVisible"/>
    </actionGroup>
    <actionGroup name="FocusTinyMCEActionGroup">
        <arguments>
            <argument name="section" defaultValue="TextOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{section.tinymce(index)}}" stepKey="waitForTinyMCE"/>
        <click selector="{{section.tinymce(index)}}" stepKey="focusOnTextEditorArea"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{section.tinymceInFocus(index)}}" stepKey="waitForTinyMCEInFocus"/>
    </actionGroup>
</actionGroups>
