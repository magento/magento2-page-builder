<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderWorksForEachCatalogProductAttributeTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Catalog Products"/>
            <title value="PageBuilder Works For Each Product Attribute"/>
            <description value="This test is to ensure that the PageBuilder works for Catalog Product Description, Short Description, and Custom Attributes."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-3329"/>
            <testCaseId value="MC-13680"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-fullScreen"/>
            <group value="pagebuilder-productAttribute"/>
            <group value="pagebuilder-catalog-product"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="productAttributeWysiwyg" stepKey="createProductAttribute"/>
            <createData entity="AddToDefaultSetTopOfContentSection" stepKey="addAttributeToDefaultAttributeSet">
                <requiredEntity createDataKey="createProductAttribute"/>
            </createData>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createProductAttribute"/>
                <requiredEntity createDataKey="createPreReqCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToCreatedProductAttribute">
                <argument name="ProductAttribute" value="$$createProductAttribute$$"/>
            </actionGroup>
            <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Page Builder" stepKey="selectPageBuilder1"/>
            <actionGroup ref="SaveProductAttributeActionGroup" stepKey="saveCustomAttribute"/>
            <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToShortDescriptionProductAttribute">
                <argument name="ProductAttribute" value="ProductShortDescription"/>
            </actionGroup>
            <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Page Builder" stepKey="selectPageBuilder2"/>
            <actionGroup ref="SaveProductAttributeActionGroup" stepKey="saveShortDescriptionAttribute"/>
            <actionGroup ref="NavigateToCreatedProductEditPageActionGroup" stepKey="navigateToCreatedProductEditPage">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>
            <actionGroup ref="SetLayoutActionGroup" stepKey="setFullWidthLayout">
                <argument name="designSection" value="ProductDesignSection"/>
                <argument name="layoutOption" value="PageBuilderFullWidthLayout.product"/>
            </actionGroup>
            <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
        </before>
        <after>
            <deleteData createDataKey="createProduct" stepKey="deleteCreatedProduct"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="deleteCreatedCategory"/>
            <deleteData createDataKey="createProductAttribute" stepKey="deleteProductAttribute"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="NavigateToAndResetProductGridToDefaultViewActionGroup" stepKey="NavigateToAndResetProductGridToDefaultView"/>
            <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToShortDescriptionProductAttribute">
                <argument name="ProductAttribute" value="ProductShortDescription"/>
            </actionGroup>
            <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Text Editor" stepKey="selectPageBuilder"/>
            <actionGroup ref="ConfirmChangeInputTypeModalActionGroup" stepKey="confirmChangeInputTypeModal"/>
            <actionGroup ref="SaveProductAttributeActionGroup" stepKey="saveShortDescriptionAttribute"/>
            <actionGroup ref="NavigateToAndResetProductAttributeGridToDefaultViewActionGroup" stepKey="NavigateToAndResetProductAttributeGridToDefaultView"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Edit Product Custom Attribute -->
        <comment userInput="Edit Product Custom Attribute" stepKey="commentEditProductCustomAttribute"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForCustomAttribute">
            <argument name="attributeCode" value="$$createProductAttribute.attribute_code$$"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelMenuSectionHeading">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeadingIntoRow">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStage"/>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading">
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuForHeading">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterHeadingTypePropertyH1">
            <argument name="property" value="PageBuilderHeadingTypeProperty_H1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditFormForHeading"/>
        <!-- Validate Product Custom Attribute Stage -->
        <comment userInput="Validate Product Custom Attribute Stage" stepKey="commentValidateCustomAttributeStage"/>
        <seeElement selector="{{HeadingOnStage.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleStage"/>
        <seeElement selector="{{HeadingOnStage.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextStage"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenCustomAttribute"/>
        <!-- Edit Product Description -->
        <comment userInput="Edit Product Description" stepKey="commentEditProductDescription"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription">
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragRowToRootContainerDescription">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="3"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <!-- Add Buttons -->
        <comment userInput="Add Buttons" stepKey="commentAddButtons"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelMenuSectionButtons">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragButtonsToRow">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <!-- Edit Button Item -->
        <comment userInput="Edit Button Item" stepKey="commentEditButtonItem"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuForButtonItem">
            <argument name="section" value="ButtonItemOnStage"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="fillButtonTextField">
            <argument name="property" value="PageBuilderButtonItemText_First"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditFormForButtonItem"/>
        <!-- Add 2nd Button -->
        <comment userInput="Add 2nd Button" stepKey="commentAddSecondButton"/>
        <actionGroup ref="addChildContentTypeFromOptionMenu" stepKey="addChildContentType">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButton2">
            <argument name="text" value="PageBuilderButtonItemText_Second"/>
            <argument name="index" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <!-- Validate Product Description Stage -->
        <comment userInput="Validate Product Description Stage" stepKey="commentValidateProductDescriptionStage"/>
        <seeNumberOfElements selector="{{ButtonItemOnStage.all}}" userInput="2" stepKey="see2ButtonItemsStage"/>
        <seeElement selector="{{ButtonItemOnStage.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="seeButton1TextStage"/>
        <seeElement selector="{{ButtonItemOnStage.buttonItemText('2', PageBuilderButtonItemText_Second.value)}}" stepKey="seeButton2TextStage"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenDescription"/>
        <!-- Edit Product Short Description -->
        <comment userInput="Edit Product Short Description" stepKey="commentEditProductShortDescription"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForShortDescription">
            <argument name="attributeCode" value="short_description"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('short_description')}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragRowToRootContainerShortDescription">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('short_description')}}"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelMenuSectionDivider">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('short_description')}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragDividerIntoRow">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('short_description')}}"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuForDivider">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterDividerLineColor">
            <argument name="property" value="PageBuilderDividerLineColor_FF5733"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditFormForDivider"/>
        <!-- Validate Product Short Description Stage -->
        <comment userInput="Validate Product Short Description Stage" stepKey="commentValidateShortProductDescriptionStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeDividerColorStage">
            <argument name="selector" value="{{DividerOnStage.lineElement('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderDividerLineColor_FF5733.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenShortDescription"/>
        <!-- Save Product -->
        <comment userInput="Save Product" stepKey="commentSaveProduct"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForPageLoadSaveProduct"/>
        <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
        <!-- Validate Product Custom Attribute Stage After Save -->
        <comment userInput="Validate Product Custom Attribute Stage After Save" stepKey="commentValidateProductCustomAttributeStageAfterSave"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForCustomAttributeAfterSave">
            <argument name="attributeCode" value="$$createProductAttribute.attribute_code$$"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createProductAttribute.attribute_code$$)}}"/>
        </actionGroup>
        <seeElement selector="{{HeadingOnStage.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleStageAfterSave"/>
        <seeElement selector="{{HeadingOnStage.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenCustomAttributeAfterSave"/>
        <!-- Validate Product Description Stage After Save -->
        <comment userInput="Validate Product Description Stage After Save" stepKey="commentValidateProductDescriptionStageAfterSave"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescriptionAfterSave">
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <seeNumberOfElements selector="{{ButtonItemOnStage.all}}" userInput="2" stepKey="see2ButtonItemsStageAfterSave"/>
        <seeElement selector="{{ButtonItemOnStage.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="seeButton1TextStageAfterSave"/>
        <seeElement selector="{{ButtonItemOnStage.buttonItemText('2', PageBuilderButtonItemText_Second.value)}}" stepKey="seeButton2TextStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenDescriptionAfterSave"/>
        <!-- Validate Product Short Description Stage After Save -->
        <comment userInput="Validate Product Short Description Stage After Save" stepKey="commentValidateProductShortDescriptionStageAfterSave"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForShortDescriptionAfterSave">
            <argument name="attributeCode" value="short_description"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('short_description')}}"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeDividerColorStageAfterSave">
            <argument name="selector" value="{{DividerOnStage.lineElement('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderDividerLineColor_FF5733.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenShortDescriptionAfterSave"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStoreFront">
            <argument name="page" value="$$createProduct.name$$.html"/>
        </actionGroup>
        <!-- Validate Storefront: Product Description -->
        <comment userInput="Validate Storefront: Product Description" stepKey="commentValidateStorefrontProductDescription"/>
        <scrollTo selector="{{StorefrontProductInfoMainSection.productDescription}}" stepKey="scrollToProductDescription"/>
        <seeNumberOfElements selector="{{ButtonItemOnStorefront.all}}" userInput="2" stepKey="see2ButtonItemsStorefront"/>
        <seeElement selector="{{ButtonItemOnStorefrontEmptyLink.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="seeButton1TextStorefront"/>
        <seeElement selector="{{ButtonItemOnStorefrontEmptyLink.buttonItemText('2', PageBuilderButtonItemText_Second.value)}}" stepKey="seeButton2TextStorefront"/>
        <!-- Validate Storefront: Product Short Description -->
        <comment userInput="Validate Storefront: Product Short Description" stepKey="commentValidateStorefrontProductShortDescription"/>
        <scrollTo selector="{{StorefrontProductInfoMainSection.productShortDescription}}" stepKey="scrollToProductShortDescription"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeDividerColorStorefront">
            <argument name="selector" value="{{DividerOnStorefront.lineElement('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderDividerLineColor_FF5733.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <!-- Validate Storefront: Product Custom Attribute -->
        <comment userInput="Validate Storefront: Product Custom Attribute" stepKey="commentValidateStorefrontProductCustomAttribute"/>
        <scrollTo selector="{{PageBuilderProductStorefront.attributeSectionHeading('1', $$createProductAttribute.attribute[frontend_labels][0][label]$$)}}" stepKey="scrollToProductCustomAttribute"/>
        <seeElement selector="{{HeadingOnStorefront.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleStorefront"/>
        <seeElement selector="{{HeadingOnStorefront.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextStorefront"/>
    </test>
</tests>
