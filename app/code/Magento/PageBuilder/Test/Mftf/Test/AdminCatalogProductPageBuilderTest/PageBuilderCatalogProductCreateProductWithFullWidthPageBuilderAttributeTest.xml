<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCatalogProductCreateProductWithFullWidthPageBuilderAttributeTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Catalog Products"/>
            <title value="Create product with custom Page Builder attribute with full width layout"/>
            <description value="Verify page builder contents in a custom Page Builder product attribute render correctly in the full width layout"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-3103"/>
            <testCaseId value="MC-3278"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-layout"/>
            <group value="pagebuilder-fullwidth"/>
            <group value="pagebuilder-catalog-product"/>
        </annotations>
        <before>
            <createData stepKey="createWysiwygAttribute" entity="productAttributeWysiwyg"/>
            <createData stepKey="createWysiwygAttributeAttributeGroup" entity="AddToDefaultSet">
                <requiredEntity createDataKey="createWysiwygAttribute"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <deleteData createDataKey="createWysiwygAttribute" stepKey="deletePreReqProductAttribute"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Update created attribute to enable Page Builder -->
        <comment userInput="Update created attribute to enable Page Builder" stepKey="commentUpdateAttribute"/>
        <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToCreatedProductAttribute">
            <argument name="ProductAttribute" value="$$createWysiwygAttribute$$"/>
        </actionGroup>
        <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Page Builder" stepKey="selectPageBuilder"/>
        <click selector="{{AttributePropertiesSection.Save}}" stepKey="saveAttribute"/>
        <waitForPageLoad stepKey="waitForAttributeSave"/>
        <!-- Create a new product -->
        <comment userInput="Create a new product" stepKey="commentCreateNewProduct"/>
        <amOnPage url="{{AdminProductCreatePage.url(AddToDefaultSet.attributeSetId, 'simple')}}" stepKey="navigateToNewProduct"/>
        <waitForPageLoad stepKey="waitForProductPage"/>
        <!-- Fill the remaining product fields accordingly -->
        <comment userInput="Fill the remaining product fields accordingly" stepKey="commentFillProductFields"/>
        <actionGroup ref="FillMainProductFormActionGroup" stepKey="fillMainProductForm">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <!-- Set background colour of row for custom attribute -->
        <comment userInput="Set background colour of row for custom attribute" stepKey="commentSetBackgroundColor"/>
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForAttribute">
            <argument name="attributeCode" value="$$createWysiwygAttribute.attribute_code$$"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitPageBuilderFullScreen"/>
        <waitForPageLoad stepKey="waitForPageLoadExitFullScreen"/>
        <!-- Save product, before editing row -->
        <comment userInput="Save product, before editing row" stepKey="commentSaveProductAfterAttribute"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProductAfterAttribute"/>
        <waitForPageLoad stepKey="waitForProductSaveAfterAttribute"/>
        <waitForElementVisible selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccessAfterAttribute"/>
        <!-- Set background colour of row for description -->
        <comment userInput="Set background colour of row for description" stepKey="commentSetDescriptionRowBackgroundColor"/>
        <click selector="{{AdminProductContentSection.sectionHeader}}" stepKey="openContentSection"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription">
            <argument name="attributeCode" value="description"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragRowToRootContainerDescription">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea('description')}}"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openDescriptionEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterDescriptionRowBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_HSV_Orange"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveDescriptionEditPanelSettings"/>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitDescriptionPageBuilderFullScreen"/>
        <waitForPageLoad stepKey="waitForDescriptionPageLoadExitFullScreen"/>
        <!-- Save product -->
        <comment userInput="Save product" stepKey="commentSaveProduct"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForPageLoadSaveProduct"/>
        <waitForElementVisible selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>
        <amOnPage url="{{SimpleProduct.urlKey}}.html" stepKey="navigateToProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoadProductPage"/>
        <!-- Verify custom product attribute has it's own heading  -->
        <comment userInput="Verify custom product attribute has it's own heading" stepKey="commentValidateAttributeHasHeading"/>
        <waitForElementVisible selector="{{PageBuilderProductStorefront.attributeSectionHeading('1', $$createWysiwygAttribute.default_frontend_label$$)}}" stepKey="attributeHeadingVisible"/>
        <!-- Check that custom attribute and description are full  -->
        <comment userInput="Check that custom attribute and description are full width" stepKey="commentSeeFullWidthFrontend"/>
        <actionGroup ref="verifyFullWidthLayout" stepKey="verifyDescriptionFullWidthLayout">
            <argument name="index" value="0"/>
        </actionGroup>
        <actionGroup ref="verifyFullWidthLayout" stepKey="verifyAttributeFullWidthLayout">
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
</tests>
