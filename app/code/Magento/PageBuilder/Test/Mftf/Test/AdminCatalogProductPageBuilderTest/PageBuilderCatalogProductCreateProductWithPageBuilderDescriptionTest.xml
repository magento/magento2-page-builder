<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCatalogProductCreateProductWithPageBuilderDescriptionTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Catalog Products"/>
            <title value="Product description should display in full width"/>
            <description value="Verify page builder contents in the Product description render correctly in the full width layout"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-936"/>
            <testCaseId value="MC-3090"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-layout"/>
            <group value="pagebuilder-fullwidth"/>
            <group value="pagebuilder-catalog-product"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="FillAdminSimpleProductFormActionGroup" stepKey="fillProductFieldsInAdmin">
                <argument name="category" value="$$createPreReqCategory$$"/>
                <argument name="simpleProduct" value="_defaultProduct"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteProduct">
                <argument name="sku" value="{{_defaultProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilter"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>
        </after>
        <!-- Add PageBuilder description -->
        <comment userInput="Add PageBuilder description" stepKey="commentAddDescription"/>
        <click selector="{{AdminProductContentSection.sectionHeader}}" stepKey="openContentSection"/>
        <waitForPageLoad stepKey="waitForPageLoadContentSection"/>
        <waitForElementVisible selector="{{PageBuilderCategoryAttribute.PageBuilderArea('description')}}" stepKey="waitForPageBuilderBtn"/>
        <see userInput="{{EditWithPageBuilderButton.value}}" stepKey="seePageBuilderBtn"/>
        <click selector="{{PageBuilderCategoryAttribute.PageBuilderArea('description')}}" stepKey="clickOnPageBuilderBtn"/>
        <waitForPageLoad stepKey="waitForPageLoadPageBuilder"/>
        <waitForElementVisible selector="{{PageBuilderPanel.layoutMenuSection}}" stepKey="waitForPageBuilderVisible"/>
        <waitForElementVisible selector="{{PageBuilderStage.stageWrapperFullScreen}}" stepKey="seePageBuilderFullSizeScreen"/>
        <!-- Set background color of row -->
        <comment userInput="Set background color of row" stepKey="commentSetRowBackgroundColor"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_HSV_Orange"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragHeadingOntoStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <!-- Add heading to stage -->
        <comment userInput="Add heading to stage" stepKey="commentAddHeadingToStage"/>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStage"/>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitPageBuilderFullScreen"/>
        <waitForPageLoad stepKey="waitForPageLoadExitFullScreen"/>
        <!-- Use Full Width layout -->
        <comment userInput="Set Layout to Product - Full Width" stepKey="commentSetLayout"/>
        <actionGroup ref="SetLayoutActionGroup" stepKey="setFullWidthLayout">
            <argument name="designSection" value="ProductDesignSection"/>
            <argument name="layoutOption" value="PageBuilderFullWidthLayout.product"/>
        </actionGroup>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForPageLoadSaveProduct"/>
        <waitForElementVisible selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>
        <!-- Check that description is full width -->
        <comment userInput="Check that description is full width" stepKey="commentSeeDescriptionFullWidth"/>
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="navigateToProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoadProductPage"/>
        <actionGroup ref="verifyFullWidthLayout" stepKey="verifyFullWidthLayout"/>
    </test>
</tests>
