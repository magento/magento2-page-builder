<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCatalogProductProductFullWidthValidateAttributeOrderTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Catalog Products"/>
            <title value="Attributes should be displayed in the order they are sorted in the attribute set"/>
            <description value="Attributes should be displayed in the order they are sorted in the attribute set"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-3103"/>
            <testCaseId value="MC-3295"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-layout"/>
            <group value="pagebuilder-fullwidth"/>
            <group value="pagebuilder-catalog-product"/>
        </annotations>
        <before>
            <createData stepKey="createPageBuilderAttribute1" entity="productAttributeWysiwyg"/>
            <createData stepKey="addToDefaultSetSortOrder1" entity="AddToDefaultSetSortOrder1">
                <requiredEntity createDataKey="createPageBuilderAttribute1"/>
            </createData>
            <createData stepKey="createPageBuilderAttribute2" entity="productAttributeWysiwyg"/>
            <createData stepKey="addToDefaultSetSortOrder2" entity="AddToDefaultSetSortOrder2">
                <requiredEntity createDataKey="createPageBuilderAttribute2"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <deleteData createDataKey="createPageBuilderAttribute1" stepKey="deleteAttribute1"/>
            <deleteData createDataKey="createPageBuilderAttribute2" stepKey="deleteAttribute2"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeTab"/>
        </after>
        <!-- Update created attributes to enable Page Builder -->
        <comment userInput="Update created attributes to enable Page Builder" stepKey="commentUpdateAttributes"/>
        <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToCreatedProductAttribute">
            <argument name="ProductAttribute" value="$$createPageBuilderAttribute1$$"/>
        </actionGroup>
        <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Page Builder" stepKey="selectPageBuilder"/>
        <click selector="{{AttributePropertiesSection.Save}}" stepKey="saveAttribute"/>
        <waitForPageLoad stepKey="waitForAttributeSave"/>
        <actionGroup ref="NavigateToCreatedProductAttributeActionGroup" stepKey="navigateToCreatedProductAttribute1">
            <argument name="ProductAttribute" value="$$createPageBuilderAttribute2$$"/>
        </actionGroup>
        <selectOption selector="{{AttributePropertiesSection.InputType}}" userInput="Page Builder" stepKey="selectPageBuilder1"/>
        <click selector="{{AttributePropertiesSection.Save}}" stepKey="saveAttribute1"/>
        <waitForPageLoad stepKey="waitForAttributeSave1"/>
        <!-- Create a new product -->
        <comment userInput="Create a new product" stepKey="commentCreateNewProduct"/>
        <amOnPage url="{{AdminProductCreatePage.url(AddToDefaultSet.attributeSetId, 'simple')}}" stepKey="navigateToNewProduct"/>
        <waitForPageLoad stepKey="waitForProductPage"/>
        <!-- Fill the remaining product fields accordingly -->
        <comment userInput="Fill the remaining product fields accordingly" stepKey="commentFillProductFields"/>
        <actionGroup ref="FillMainProductFormActionGroup" stepKey="fillMainProductForm">
            <argument name="product" value="SimpleProduct"/>
        </actionGroup>
        <!-- Set background colour of row for our first custom attribute -->
        <comment userInput="Set background colour of row for our first custom attribute" stepKey="commentSetBackgroundColor"/>
        <scrollToTopOfPage stepKey="scrollToTopOfPage"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForAttribute1">
            <argument name="attributeCode" value="$$createPageBuilderAttribute1.attribute_code$$"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_HSV_Orange"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitPageBuilderFullScreen"/>
        <waitForPageLoad stepKey="waitForPageLoadExitFullScreen"/>
        <!-- Save product, after first attribute -->
        <comment userInput="Save product, after first attribute" stepKey="commentSaveProductAfterAttribute"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProductAfterAttribute"/>
        <waitForPageLoad stepKey="waitForPageLoadSaveProductAfterAttribute"/>
        <waitForElementVisible selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccessAfterAttribute"/>
        <!-- Set background colour of row for our second custom attribute -->
        <comment userInput="Set background colour of row for our second custom attribute" stepKey="commentSetBackgroundColor1"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForAttribute2">
            <argument name="attributeCode" value="$$createPageBuilderAttribute2.attribute_code$$"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createPageBuilderAttribute2.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragRowToRootContainerDescription">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="pageBuilderArea" value="{{PageBuilderProductAttribute.PageBuilderArea($$createPageBuilderAttribute2.attribute_code$$)}}"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor1">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings1"/>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitPageBuilderFullScreen1"/>
        <waitForPageLoad stepKey="waitForPageLoadExitFullScreen1"/>
        <!-- Save product -->
        <comment userInput="Save product" stepKey="commentSaveProduct"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForPageLoadSaveProduct"/>
        <waitForElementVisible selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>
        <!-- Validate attributes are displayed in the correct order -->
        <comment userInput="Validate attributes are displayed in the correct order" stepKey="commentValidateAttributeOrder"/>
        <openNewTab stepKey="openNewTab"/>
        <amOnPage url="{{SimpleProduct.urlKey}}.html" stepKey="navigateToProductPage"/>
        <waitForElementVisible selector="{{PageBuilderProductStorefront.attributeSectionHeading('1', $$createPageBuilderAttribute1.default_frontend_label$$)}}" stepKey="validateAttribute1DisplayedFirst"/>
        <waitForElementVisible selector="{{PageBuilderProductStorefront.attributeSectionHeading('2', $$createPageBuilderAttribute2.default_frontend_label$$)}}" stepKey="validateAttribute2DisplayedSecond"/>
        <!-- Swap the sort order of the attributes -->
        <comment userInput="Swap the sort order of the attributes" stepKey="commentSwapTheSortOrderOfAttributes"/>
        <switchToNextTab stepKey="switchToAdmin"/>
        <amOnPage url="{{AdminProductAttributeSetGridPage.url}}" stepKey="navigateToProductAttributeSetGrid"/>
        <waitForPageLoad stepKey="waitForAttributeSetGrid"/>
        <click selector="{{AdminProductAttributeSetGridSection.AttributeSetName('Default')}}" stepKey="navigateToDefaultAttributeSet"/>
        <waitForPageLoad stepKey="waitForAttributeSetEditPage"/>
        <dragAndDrop selector1="{{AdminProductAttributeSetSection.attribute($$createPageBuilderAttribute1.attribute_code$$)}}" selector2="{{AdminProductAttributeSetSection.attribute('weight')}}" stepKey="dragFirstAttributeToWeight"/>
        <waitForPageLoad stepKey="waitForDragAndDrop"/>
        <dragAndDrop selector1="{{AdminProductAttributeSetSection.attribute($$createPageBuilderAttribute2.attribute_code$$)}}" selector2="{{AdminProductAttributeSetSection.attribute('status')}}" stepKey="dragSecondAttributeToStatus"/>
        <waitForPageLoad stepKey="waitForDragAndDrop2"/>
        <click selector="{{AdminProductAttributeSetSection.saveBtn}}" stepKey="saveAttributesOrder"/>
        <actionGroup ref="ClearCacheActionGroup" stepKey="clearMagentoCache"/>
        <!-- Validate attributes are displayed in the reverse order -->
        <comment userInput="Validate attributes are displayed in the reverse order" stepKey="commentValidateAttributeOrderSwapped"/>
        <switchToNextTab stepKey="switchToProduct"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageReload"/>
        <waitForElementVisible selector="{{PageBuilderProductStorefront.attributeSectionHeading('2', $$createPageBuilderAttribute1.default_frontend_label$$)}}" stepKey="validateAttribute1DisplayedSecond"/>
        <waitForElementVisible selector="{{PageBuilderProductStorefront.attributeSectionHeading('1', $$createPageBuilderAttribute2.default_frontend_label$$)}}" stepKey="validateAttribute2DisplayedFirst"/>
    </test>
</tests>
