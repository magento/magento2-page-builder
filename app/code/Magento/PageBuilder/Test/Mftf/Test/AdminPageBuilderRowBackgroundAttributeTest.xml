<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowValidateBackgroundSectionDefaultValuesTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Background Section - Validate Default Values"/>
            <description value="Validate the default values for every attribute in the Background section for Row. Validate Stage and Storefront as well."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-928"/>
            <testCaseId value="MC-2764"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeNoColorInColorSwatch" stepKey="validateColorSwatch">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="validateBackgroundColorPlaceholderText">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundImage_Default"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoBackgroundMobileImage">
            <argument name="property" value="PageBuilderBackgroundMobileImage_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Default"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateBackgroundAttributesWithNoImageOrColor" stepKey="validateStage">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <actionGroup ref="validateNoBackgroundImage" stepKey="validateNoBackgroundImageStage">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateBackgroundAttributesWithNoImageOrColor" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <actionGroup ref="validateNoBackgroundImage" stepKey="validateNoBackgroundImageStage1">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor2">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType2">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoBackgroundImage2">
            <argument name="property" value="PageBuilderBackgroundImage_Default"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoBackgroundMobileImage2">
            <argument name="property" value="PageBuilderBackgroundMobileImage_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition2">
            <argument name="property" value="PageBuilderBackgroundPosition_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateBackgroundRepeat2">
            <argument name="property" value="PageBuilderBackgroundRepeat_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize2">
            <argument name="property" value="PageBuilderBackgroundSize_Default"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment2">
            <argument name="property" value="PageBuilderBackgroundAttachment_Default"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundAttributesWithNoImageOrColor" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateNoBackgroundImage" stepKey="validateNoBackgroundImageDesktop">
            <argument name="section" value="RowOnStorefront"/>
        </actionGroup>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <actionGroup ref="validateNoBackgroundImage" stepKey="validateNoBackgroundImageMobile">
            <argument name="section" value="RowOnStorefront"/>
        </actionGroup>
    </test>
    <test name="RowValidateBackgroundFormTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Background Image Attributes Work in Row"/>
            <description value="Validate and update all background image attributes on stage for row and check storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-1107"/>
            <testCaseId value="MC-2387"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToDesktopImageFolder">
                <argument name="FolderName" value="{{PageBuilderBackgroundImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteBackgroundImage">
                <argument name="Image" value="PageBuilderBackgroundImage_JPG"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteMobileBackgroundImage">
                <argument name="Image" value="PageBuilderBackgroundMobileImage_GIF"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Update all background fields -->
        <comment userInput="Update all background fields" stepKey="commentFillBackgroundPanel"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Hex_White"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFileSlideOutProperty1">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFileSlideOutProperty2">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_TopLeft"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Scroll"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate on stage -->
        <comment userInput="Validate on Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateBackgroundAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Hex_White"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_TopLeft"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Scroll"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImage" stepKey="validateImageOnStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Validate on stage after save -->
        <comment userInput="Validate on stage after save" stepKey="commentValidateOnStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="validateBackgroundAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Hex_White"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_TopLeft"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Scroll"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImage" stepKey="validateImageOnStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Validate edit form after save -->
        <comment userInput="Validate edit form after save" stepKey="commentValidateEditForm"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterSave">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Hex_White"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="seeBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="seeBackgroundMobileImage">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_TopLeft"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Scroll"/>
        </actionGroup>
        <!-- Validate on storefront -->
        <comment userInput="Validate on Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundAttributesWithNoImage" stepKey="validateStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Hex_White"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_TopLeft"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Scroll"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateImageOnStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Validate mobile image is displayed when browser is resized -->
        <comment userInput="Validate mobile image is displayed when browser is resized" stepKey="commentMobileImage"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateMobileImageOnStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundSectionDefaultValues">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row Video Background - Validate Default Values"/>
            <description value="Validate the default values for every attribute in the Video Background section for Row"/>
            <severity value="AVERAGE"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31145"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColorEmpty">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeNoColorInColorSwatch" stepKey="validateBackgroundColorSwatchEmpty">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="validateBackgroundColorPlaceholderText">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrlEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Empty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldTooltip" stepKey="validateTooltipVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Empty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColorEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeNoColorInColorSwatch" stepKey="validateOverlayColorSwatchEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="validateOverlayColorPlaceholderText">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldHelperText" stepKey="validateHelperTextLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldHelperText" stepKey="validateHelperTextPlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldTooltip" stepKey="validateTooltipFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldHelperText" stepKey="validateHelperTextFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
    </test>
    <test name="RowContainedVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Contained Row with No Fallback Image, Disabled Infinite Loop, Disabled Play Only When Visible, and Disabled Lazy Load"/>
            <description value="Validate video background with no fallback image, disabled infinite loop, disabled play only when visible, and disabled lazy load."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31236"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <!-- Set Edit Panel -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlValid">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disableInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disableLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disablePlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage2"/>
        <!-- Validate Edit Panel After Save -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditPanelAfterSave">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColorEmptyAfterSave">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrlAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColorEmptyAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateInfiniteLoopAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateLazyLoadAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisibleAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoFallbackImageAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStorefront.base('1')}}" stepKey="seeButtonStorefront"/>
    </test>
    <test name="RowFullWidthVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad" extends="RowContainedVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Full Width Row with No Fallback Image, Disabled Infinite Loop, Disabled Play Only When Visible, and Disabled Lazy Load"/>
            <description value="Validate video background with no fallback image, disabled infinite loop, disabled play only when visible, and disabled lazy load."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31237"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-width"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
    </test>
    <test name="RowFullBleedVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad" extends="RowContainedVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Full Bleed Row with No Fallback Image, Disabled Infinite Loop, Disabled Play Only When Visible, and Disabled Lazy Load"/>
            <description value="Validate video background with no fallback image, disabled infinite loop, disabled play only when visible, and disabled lazy load."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31238"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-bleed"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
    </test>
    <test name="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background in Contained Row"/>
            <description value="Set all video background attributes for a contained Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31105"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <!-- Update All Video Background Fields -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterOverlayColor">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setPlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage2"/>
        <!-- Validate Edit Panel After Save -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditPanelAfterSave">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeOverlayColor">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seePlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="seeFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStorefrontEmptyLink.base('1')}}" stepKey="seeButtonStorefront"/>
    </test>
    <test name="RowFullWidthValidateVideoBackground" extends="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background in Full Width Row"/>
            <description value="Set all video background attributes for a full width Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31106"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-width"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowFullBleedValidateVideoBackground" extends="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background in Full Bleed Row"/>
            <description value="Set all video background attributes for a full bleed Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31107"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-bleed"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowContainedVideoBackgroundValidateFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background Fallback Image Renders When Video Isn't Loaded in Contained Row"/>
            <description value="Validate that the video background fallback image loads and renders in a contained row when the video hasn't loaded."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31201"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <!-- Update Video Background Fields -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Invalid_VideoDoesNotExit"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage2"/>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStorefrontEmptyLink.base('1')}}" stepKey="seeButtonStorefront"/>
    </test>
    <test name="RowFullWidthVideoBackgroundValidateFallbackImage" extends="RowContainedVideoBackgroundValidateFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background Fallback Image Renders When Video Isn't Loaded in Full Width Row"/>
            <description value="Validate that the video background fallback image loads and renders in a full width row when the video hasn't loaded."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31202"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-width"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowFullBleedVideoBackgroundValidateFallbackImage" extends="RowContainedVideoBackgroundValidateFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Video Background Fallback Image Renders When Video Isn't Loaded in Full Bleed Row"/>
            <description value="Validate that the video background fallback image loads and renders in a full bleed row when the video hasn't loaded."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31203"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-bleed"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowContainedInvalidVideoBackgroundNoFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Verify Contained Row Renders When Video Isn't Loaded and There's No Fallback Image"/>
            <description value="Validate that the Row renders correctly when the video background video hasn't loaded and there is no fallback image."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31217"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <!-- Update Video Background Fields -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Invalid_VideoDoesNotExit"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateInvalidVideoBackgroundAndNoFallbackImage" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <actionGroup ref="validateInvalidVideoBackgroundAndNoFallbackImage" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStage.base('1')}}" stepKey="seeButtonStage2"/>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateInvalidVideoBackgroundAndNoFallbackImage" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
        </actionGroup>
        <seeElement selector="{{ButtonItemOnStorefrontEmptyLink.base('1')}}" stepKey="seeButtonStorefront"/>
    </test>
    <test name="RowFullWidthInvalidVideoBackgroundNoFallbackImage" extends="RowContainedInvalidVideoBackgroundNoFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Verify Full Width Row Renders When Video Isn't Loaded and There's No Fallback Image"/>
            <description value="Validate that the Row renders correctly when the video background video hasn't loaded and there is no fallback image."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31218"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-width"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="validateInvalidVideoBackgroundAndNoFallbackImage" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowFullBleedInvalidVideoBackgroundNoFallbackImage" extends="RowContainedInvalidVideoBackgroundNoFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Verify Full Bleed Row Renders When Video Isn't Loaded and There's No Fallback Image"/>
            <description value="Validate that the Row renders correctly when the video background video hasn't loaded and there is no fallback image."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31219"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-bleed"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="validateInvalidVideoBackgroundAndNoFallbackImage" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowContainedValidateParallaxVideoBackground" extends="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Parallax Video Background in Contained Row"/>
            <description value="Set all video background attributes for a contained parallax Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31220"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-rowParallax"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enableParallax" after="attachFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterParallaxSpeed" after="enableParallax">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeParallaxEnabled" after="seeFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeParallaxSpeed" after="seeParallaxEnabled">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage1" before="validateStage1">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage2" before="validateStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStorefront" before="validateStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowFullWidthValidateParallaxVideoBackground" extends="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Parallax Video Background in Full Width Row"/>
            <description value="Set all video background attributes for a full width parallax Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31221"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-width"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-rowParallax"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enableParallax" after="attachFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterParallaxSpeed" after="enableParallax">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeParallaxEnabled" after="seeFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeParallaxSpeed" after="seeParallaxEnabled">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage1" before="validateStage1">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage2" before="validateStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStorefront" before="validateStorefront">
            <argument name="page" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowFullBleedValidateParallaxVideoBackground" extends="RowContainedValidateVideoBackground">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Validate Parallax Video Background in Full Bleed Row"/>
            <description value="Set all video background attributes for a full bleed parallax Row and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31222"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-full-bleed"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-rowParallax"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enableParallax" after="attachFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterParallaxSpeed" after="enableParallax">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeParallaxEnabled" after="seeFallbackImage">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeParallaxSpeed" after="seeParallaxEnabled">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage1" before="validateStage1">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStage2" before="validateStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateParallaxStorefront" before="validateStorefront">
            <argument name="page" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateParallaxVideoBackgroundWithAllAttributes" stepKey="validateStorefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundVideoURLs">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Video Urls"/>
            <description value="Verify that the video background URL field is required, only accepts valid urls, and that the user can set an embedded or non-embedded video background to a YouTube or Vimeo video, or to a stored .mp4 video."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31294"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <!-- Validate URL Required -->
        <actionGroup ref="saveEditPanelAndValidateFieldError" stepKey="validateUrlErrorMessageEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Empty"/>
        </actionGroup>
        <!-- Validate Invalid URL Message -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlInvalid">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Invalid_Text"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelAndValidateFieldError" stepKey="validateUrlErrorMessageInvalid">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Invalid_Text"/>
        </actionGroup>
        <!-- Update to YouTube Embedded -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlYouTubeEmbedded">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsYouTubeEmbedded"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateYouTubeEmbeddedStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <!-- Update to YouTube Non-Embedded -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageYouTubeNonEmbedded">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlYouTubeNonEmbedded">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsYouTubeNonEmbedded"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateYouTubeNonEmbeddedStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
        </actionGroup>
        <!-- Update to YouTube Insecure -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageYouTubeInsecure">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlYouTubeInsecure">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Insecure"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsInsecure"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateYouTubeInsecureStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Insecure"/>
        </actionGroup>
        <!-- Update to Vimeo Embedded-->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageVimeoEmbedded">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlVimeoEmbedded">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Vimeo_Embedded"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsVimeoEmbedded"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateVimeoEmbeddedStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Vimeo_Embedded"/>
        </actionGroup>
        <!-- Update to Vimeo Non-Embedded -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageVimeoNonEmbedded">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlVimeoNonEmbedded">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Vimeo_NonEmbedded"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsVimeoNonEmbedded"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateVimeoNonEmbeddedStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Vimeo_NonEmbedded"/>
        </actionGroup>
        <!-- Update to Vimeo Insecure -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageVimeoInsecure">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlVimeoInsecure">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Vimeo_Insecure"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsVimeoInsecure"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateVimeoInsecureStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Vimeo_Insecure"/>
        </actionGroup>
        <!-- Update to .mp4 URL -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageMp4">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlMp4">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsMp4"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateMp4Stage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <!-- Update to .mp4 URL Insecure -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageMp4Insecure">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlMp4Insecure">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL_Insecure"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsMp4Insecure"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateMp4InsecureStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL_Insecure"/>
        </actionGroup>
    </test>
    <test name="RowVerifyCanSwitchBackgroundTypes">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Verify User Can Switch Between Background Images and Videos"/>
            <description value="Verify that a user can switch between background images and background videos."/>
            <severity value="MAJOR"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31297"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderBackgroundImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteBackgroundImage1">
                <argument name="Image" value="PageBuilderBackgroundImage_JPG"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteMobileBackgroundImage1">
                <argument name="Image" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage1">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteBackgroundImage2">
                <argument name="Image" value="PageBuilderBackgroundImage_JPG"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteMobileBackgroundImage2">
                <argument name="Image" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Set Background Image Attributes -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachMobileBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_Center"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enableBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateBackgroundAttributes" stepKey="validateStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Pink"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImage" stepKey="validateImageStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Change to Video Background and Confirm Default Attributes on Edit Panel -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType2">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrlEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Empty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColorEmpty">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
        <!-- Set Video Background Attributes -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterOverlayColor">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setPlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
        </actionGroup>
        <!-- Confirm Background Image Attributes Maintained on Edit Panel -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType3">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor2">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundMobileImage">
            <argument name="property" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_Center"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <!-- Save Page -->
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoBackgroundWithAllAttributes" stepKey="validateStage3">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="{{PageBuilderBackgroundColor_Pink.rgb}}"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="overlayColor" value="{{PageBuilderVideoBackgroundOverlayColor_Hex_Grey.rgba}}"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
        </actionGroup>
        <!-- Confirm Video Background Attributes Maintained After Save -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage4">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor3">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType2">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrl2">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColor2">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateInfiniteLoop2">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateLazyLoad2">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisible2">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateFallbackImage2">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
        </actionGroup>
        <!-- Confirm No Background Images After Save -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType4">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor4">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateBackgroundImageEmpty">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateBackgroundMobileImageEmpty">
            <argument name="property" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize2">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition2">
            <argument name="property" value="PageBuilderBackgroundPosition_Center"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment2">
            <argument name="property" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateBackgroundRepeat2">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <!-- Set Background Image Attributes -->
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachBackgroundImage2">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachMobileBackgroundImage2">
            <argument name="property" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateBackgroundAttributes" stepKey="validateStage4">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Pink"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImage" stepKey="validateImageStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Confirm Video Background Attributes Maintained on Edit Panel -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage5">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType3">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType5">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor5">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrl5">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColor5">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateInfiniteLoop5">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateLazyLoad5">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisible5">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateFallbackImage5">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_GIF"/>
        </actionGroup>
        <!-- Save Page -->
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateBackgroundAttributes" stepKey="validateStage5">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Pink"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImage" stepKey="validateImageStage3">
            <argument name="section" value="RowOnStage"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <!-- Confirm Background Image Attributes Maintained After Save -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage6">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor6">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundType4">
            <argument name="property" value="PageBuilderBackgroundType_Image"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundImage6">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundMobileImage6">
            <argument name="property" value="PageBuilderBackgroundMobileImage_SpecialCharacters"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize6">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition6">
            <argument name="property" value="PageBuilderBackgroundPosition_Center"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment6">
            <argument name="property" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateBackgroundRepeat6">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <!-- Confirm Video Background URL, Overlay Color, and Fallback Image Attributes Not Maintained After Save -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType6">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor7">
            <argument name="property" value="PageBuilderBackgroundColor_Pink"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrlEmpty7">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Empty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColorEmpty7">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateInfiniteLoop7">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateLazyLoad7">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisible7">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoFallbackImage7">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundInfiniteLoopEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Infinite Loop Enabled"/>
            <description value="Verify that the video background infinite loop attribute works as intended when enabled."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31417"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoopEnabled">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Stage: Validate Video is Playing -->
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStage"/>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Storefront: Validate Video is Playing -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStorefront"/>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundInfiniteLoopDisabled" extends="RowValidateVideoBackgroundInfiniteLoopEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Infinite Loop Disabled"/>
            <description value="Verify that the video background infinite loop attribute works as intended when disabled."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31418"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoopEnabled">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStageBefore" before="validateVideoPlayingStage1"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlaying" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStage1" after="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundFinishedPlaying" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStage2" after="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStorefrontBefore" before="validateVideoPlayingStorefront1"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlaying" stepKey="validateVideoPlayingStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStorefront1" after="validateVideoPlayingStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundFinishedPlaying" stepKey="validateVideoPlayingStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStorefront2" after="validateVideoPlayingStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundPlayOnlyWhenVisibleEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Play Only When Visible Enabled"/>
            <description value="Verify that the video background play only when visible attribute works as intended when enabled."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31332"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Set Large Min Height on Row 1 -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty1">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Create 3 more Rows -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <!-- Set Video Background on Row 4 -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoadDisabled">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setPlayOnlyWhenVisibleEnabled">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Stage: Validate Video is Playing -->
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Validate Video is not Playing -->
        <actionGroup ref="validateVideoBackgroundLoadedButNotPlaying" stepKey="validateVideoNotPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <scrollTo selector="{{RowOnStage.base('4')}}" stepKey="scrollRow4Stage"/>
        <!-- Stage: Validate Video is Playing -->
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Validate Video is not Playing -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoadedButNotPlaying" stepKey="validateVideoNotPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <scrollTo selector="{{RowOnStorefront.base('4')}}" stepKey="scrollRow4Storefront"/>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_NonEmbedded"/>
            <argument name="index" value="4"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundPlayOnlyWhenVisibleDisabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Play Only When Visible Disabled"/>
            <description value="Verify that the video background play only when visible attribute works as intended when disabled."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31428"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Set Large Min Height on Row 1 -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty1">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Create 3 more Rows -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <!-- Set Video Background on Row 4 -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoopDisabled">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoadDisabled">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setPlayOnlyWhenVisibleEnabled">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Validate Stage -->
        <wait time="5" stepKey="waitForVideoCompleteStage"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlaying" stepKey="validateVideoFinishedPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStage">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <wait time="5" stepKey="waitForVideoCompleteStage2"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlayingBeforeViewing" stepKey="validateVideoFinishedPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <scrollTo selector="{{RowOnStage.base('4')}}" stepKey="scrollRow4Stage"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlayingBeforeViewing" stepKey="validateVideoFinishedPlayingStage3">
            <argument name="section" value="RowOnStage"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStage3">
            <argument name="section" value="RowOnStage"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStorefront"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlayingBeforeViewing" stepKey="validateVideoFinishedPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <scrollTo selector="{{RowOnStorefront.base('4')}}" stepKey="scrollRow4Storefront"/>
        <wait time="5" stepKey="waitForVideoCompleteStorefront2"/>
        <actionGroup ref="validateVideoBackgroundFinishedPlayingBeforeViewing" stepKey="validateVideoFinishedPlayingStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageAfterVideoFinishesPlayingInVideoBackground" stepKey="validateFallbackImageVisibleStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            <argument name="index" value="4"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundLazyLoadEnabled" extends="RowValidateVideoBackgroundPlayOnlyWhenVisibleEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Lazy Load Enabled"/>
            <description value="Verify that the video background lazy load attribute works as intended when enabled."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31341"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoadDisabled">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Enabled"/>
        </actionGroup>
        <remove keyForRemoval="setPlayOnlyWhenVisibleEnabled"/>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundNotLoaded" stepKey="validateVideoNotPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundNotLoaded" stepKey="validateVideoNotPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="index" value="4"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundLazyLoadDisabled" extends="RowValidateVideoBackgroundPlayOnlyWhenVisibleEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Lazy Load Disabled"/>
            <description value="Verify that the video background lazy load attribute works as intended when disabled."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31342"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setLazyLoadDisabled">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <remove keyForRemoval="setPlayOnlyWhenVisibleEnabled"/>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoNotPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoNotPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundLoaded" stepKey="validateVideoPlayingStorefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="index" value="4"/>
        </actionGroup>
    </test>
    <test name="RowValidateVideoBackgroundAspectRatio">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Aspect Ratio"/>
            <description value="Verify that the video background aspect ratio is maintained in each appearance."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31468"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Add Video to Contained Row -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty1">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Create 2 more Rows -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <!-- Add Full Width Row -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance2">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Full Bleed Row -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance3">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <executeJS function="return parseInt(&quot;{{PageBuilderVideoBackgroundUrl_Mp4_URL_Insecure.width}}&quot;) / parseInt(&quot;{{PageBuilderVideoBackgroundUrl_Mp4_URL_Insecure.height}}&quot;)" stepKey="expectedVideoAspectRatio"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow1Stage">
            <argument name="section" value="RowOnStage"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow2Stage">
            <argument name="section" value="RowOnStage"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow3Stage">
            <argument name="section" value="RowOnStage"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow1Storefront">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow2Storefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateVideoAspectRatio" stepKey="validateVideoAspectRatioRow3Storefront">
            <argument name="section" value="RowOnStorefront_FullWidth_FullBleed"/>
            <argument name="expectedRatio" value="{$expectedVideoAspectRatio}"/>
            <argument name="index" value="3"/>
        </actionGroup>
    </test>
</tests>
