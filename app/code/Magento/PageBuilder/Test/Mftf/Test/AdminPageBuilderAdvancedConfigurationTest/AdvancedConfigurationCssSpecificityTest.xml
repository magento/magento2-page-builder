<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdvancedConfigurationCssSpecificityTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Advanced Configuration"/>
            <title value="Heading - CSS Specificity"/>
            <description value="Internal (or external) CSS should be able to override Page Builder defined styles that would previously have been inlined."/>
            <severity value="MAJOR"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-heading"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="cloud"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminOpenCmsPageActionGroup" stepKey="goToCMSPage">
                <argument name="page_id" value="$$createCMSPage.id$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="waitForPageBuilderDisplay"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeadingTextProperty">
            <argument name="property" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAlignmentLeft">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeadingClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyCssSpecificity"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage2">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel2">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelTextArea" stepKey="enterHtmlContent">
            <argument name="property" value="PageBuilderHtmlPropertyCssSpecificityWithoutBodyId"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Verify in Stage -->
        <actionGroup ref="verifyHeadingInStage" stepKey="verifyHeadingInStage">
            <argument name="headingType" value="PageBuilderHeadingTypeDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Verify in Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStoreFront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="validateContentTypesStyleEqualsExpectedStyle">
            <argument name="selector" value="{{HeadingOnStorefront.cssClasses(PageBuilderHeadingTypeDefaultProperty.value, '1', PageBuilderAdvancedCssClassesPropertyCssSpecificity.value)}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedAlignmentPropertyLeft.value}}"/>
            <argument name="cssProperty" value="textAlign"/>
        </actionGroup>
        <!-- Edit HTML Code -->
        <actionGroup ref="AdminOpenCmsPageActionGroup" stepKey="goToCMSPage">
            <argument name="page_id" value="$$createCMSPage.id$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="waitForPageBuilderDisplay"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection2">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel3">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelTextArea" stepKey="enterHtmlContent2">
            <argument name="property" value="PageBuilderHtmlPropertyCssSpecificityWithBodyId"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Verify in Storefront -->
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
            <argument name="tags" value="full_page"/>
        </actionGroup>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStoreFront2">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="validateContentTypesStyleEqualsExpectedStyle2">
            <argument name="selector" value="{{HeadingOnStorefront.cssClasses(PageBuilderHeadingTypeDefaultProperty.value, '1', PageBuilderAdvancedCssClassesPropertyCssSpecificity.value)}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="textAlign"/>
        </actionGroup>
    </test>
</tests>
