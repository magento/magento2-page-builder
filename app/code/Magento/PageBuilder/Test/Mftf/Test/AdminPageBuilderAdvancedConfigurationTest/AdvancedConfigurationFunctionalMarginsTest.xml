<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdvancedConfigurationFunctionalMarginsTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Advanced Configuration"/>
            <title value="Functional - Margins"/>
            <description value="Tests that the Margin attributes functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83415"/>
            <testCaseId value="MC-2606"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Add Text to Stage -->
        <comment userInput="Add Text to Stage" stepKey="commentAddTextToStage"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTextIntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusEditor"/>
        <!-- Add Margins: Empty -->
        <comment userInput="Add Margins: Empty" stepKey="commentAddMarginsEmpty"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection2">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="clickOutsideTextInlineEditing" stepKey="closeLiveEdit"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextProperty"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldMargins" stepKey="clearMargins">
            <argument name="property" value="PageBuilderMarginsProperty0"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusEditor2"/>
        <!-- Add Margins: Unique -->
        <comment userInput="Add Margins: Unique" stepKey="commentAddMarginsUnique"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins4">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusEditor3"/>
        <!-- Stage: Check Margins: Empty -->
        <comment userInput="Stage: Check Margins: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoMarginsActionGroup" stepKey="validateStageEmpty">
            <argument name="page" value="TextOnStage"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Margins: Unique -->
        <comment userInput="Stage: Check Margins: Unique" stepKey="commentStageCheckUnique"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStageUnique">
            <argument name="page" value="TextOnStage"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Margins: Empty -->
        <comment userInput="Stage: Check Margins: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoMarginsActionGroup" stepKey="validateStageEmpty2">
            <argument name="page" value="TextOnStage"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Margins: Unique -->
        <comment userInput="Stage: Check Margins: Unique" stepKey="commentStageCheckUnique2"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStageUnique2">
            <argument name="page" value="TextOnStage"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Storefront: Check Margins: Empty -->
        <comment userInput="Storefront: Check Margins: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoMarginsActionGroup" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="defaultAlignment" value="PageBuilderAdvancedAlignmentPropertyStart"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Margins: Unique -->
        <comment userInput="Storefront: Check Margins: Unique" stepKey="commentStorefrontCheckUnique"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStorefrontUnique">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="defaultAlignment" value="PageBuilderAdvancedAlignmentPropertyStart"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
    </test>
</tests>
