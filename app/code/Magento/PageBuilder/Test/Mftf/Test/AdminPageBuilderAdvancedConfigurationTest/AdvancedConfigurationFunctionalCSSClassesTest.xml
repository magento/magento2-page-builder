<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdvancedConfigurationFunctionalCSSClassesTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Advanced Configuration"/>
            <title value="Functional - CSS Classes"/>
            <description value="Tests that the CSS Classes attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83415"/>
            <testCaseId value="MC-2593"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Add A Row For Each Text CSS Classes Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowIntoStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowIntoStage2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="clickOutsideTextInlineEditing" stepKey="closeLiveEdit"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextProperty"/>
        </actionGroup>
        <!-- Add CSS Classes: Invalid Greater Than -->
        <comment userInput="Add CSS Classes: Invalid Greater Than" stepKey="commentAddCSSClassesInvalidGreaterThan"/>
        <actionGroup ref="fillSlideOutPanelFieldAndExpectToSeeErrorInFieldset" stepKey="enterGreaterThanSymbol">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty_Invalid_GreaterThan"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelAndValidateFieldError" stepKey="validateErrorGreaterThan">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty_Invalid_GreaterThan"/>
        </actionGroup>
        <!-- Add CSS Classes: Invalid Less Than -->
        <comment userInput="Add CSS Classes: Invalid Less Than" stepKey="commentAddCSSClassesInvalidLessThan"/>
        <actionGroup ref="fillSlideOutPanelFieldAndExpectToSeeErrorInFieldset" stepKey="enterLessThanSymbol">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty_Invalid_LessThan"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelAndValidateFieldError" stepKey="validateErrorLessThan">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty_Invalid_LessThan"/>
        </actionGroup>
        <!-- Add CSS Classes: Empty -->
        <comment userInput="Add CSS Classes: Empty" stepKey="commentAddCSSClassesEmpty"/>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add CSS Classes: One Class -->
        <comment userInput="Add CSS Classes: One Class" stepKey="commentAddCSSClassesOneClass"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="clickOutsideTextInlineEditing" stepKey="closeLiveEdit2"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterCSSClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add CSS Classes: Multiple Classes -->
        <comment userInput="Add CSS Classes: Multiple Classes" stepKey="commentAddCSSClassesMultipleClasses"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="3"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="clickOutsideTextInlineEditing" stepKey="closeLiveEdit3"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterCSSClasses3">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Stage: Check CSS Classes: Empty -->
        <comment userInput="Stage: Check CSS Classes: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStageEmpty">
            <argument name="page" value="TextOnStage"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: One Class -->
        <comment userInput="Stage: Check CSS Classes: One Class" stepKey="commentStageCheckOneClass"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStageOneClass">
            <argument name="page" value="TextOnStage"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: Multiple Classes -->
        <comment userInput="Stage: Check CSS Classes: Multiple Classes" stepKey="commentStageCheckMultipleClasses"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStageMultipleClasses">
            <argument name="page" value="TextOnStage"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check CSS Classes: Empty -->
        <comment userInput="Stage: Check CSS Classes: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStageEmpty2">
            <argument name="page" value="TextOnStage"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: One Class -->
        <comment userInput="Stage: Check CSS Classes: One Class" stepKey="commentStageCheckOneClass2"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStageOneClass2">
            <argument name="page" value="TextOnStage"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: Multiple Classes -->
        <comment userInput="Stage: Check CSS Classes: Multiple Classes" stepKey="commentStageCheckMultipleClasses2"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStageMultipleClasses2">
            <argument name="page" value="TextOnStage"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Storefront: Check CSS Classes: Empty -->
        <comment userInput="Storefront: Check CSS Classes: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithNoAlignmentActionGroup" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="defaultAlignment" value="PageBuilderAdvancedAlignmentPropertyStart"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check CSS Classes: One Class -->
        <comment userInput="Storefront: Check CSS Classes: One Class" stepKey="commentStorefrontCheckOneClass"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStorefrontOneClass">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="defaultAlignment" value="PageBuilderAdvancedAlignmentPropertyStart"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check CSS Classes: Multiple Classes -->
        <comment userInput="Storefront: Check CSS Classes: Multiple Classes" stepKey="commentStorefrontCheckMultipleClasses"/>
        <actionGroup ref="ValidateAdvancedConfigurationWithCssClassesActionGroup" stepKey="validateStorefrontMultipleClasses">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="defaultAlignment" value="PageBuilderAdvancedAlignmentPropertyStart"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="index" value="3"/>
        </actionGroup>
    </test>
</tests>
