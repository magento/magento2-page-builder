<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="VideoAddToCMSPage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Update General Section Values"/>
            <description value="Validate that updating every attribute in the General form for Video will update the Stage and Storefront correctly."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83929"/>
            <testCaseId value="MC-2765"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragVideoIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoWidthProperty">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateStage">
            <argument name="page" value="VideoOnStage"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateStage2">
            <argument name="page" value="VideoOnStage"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="seeVideoUrlInAdmin">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="seeVideoWidthInAdmin">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
    </test>
    <test name="VideoNonEmbeddedUrl">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Add Video With Non Embedded Url"/>
            <description value="A user should be able to add an video into a row with standard url."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-85972"/>
            <testCaseId value="MC-2569"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragVideoIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_NonEmbedded"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateVideoEmptyWidthActionGroup" stepKey="validateStage">
            <argument name="page" value="VideoOnStage"/>
            <argument name="url" value="PageBuilderVideoUrl_NonEmbedded"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="ValidateVideoEmptyWidthActionGroup" stepKey="validateStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="url" value="PageBuilderVideoUrl_NonEmbedded"/>
        </actionGroup>
    </test>
    <test name="VideoDelete">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Delete Video"/>
            <description value="A user should be able to delete a video content type. Verify on Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83929"/>
            <testCaseId value="MC-2522"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Add Video and Save Page -->
        <comment userInput="Add Video and Save Page" stepKey="commentAddVideo"/>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Delete Video -->
        <comment userInput="Delete Video" stepKey="commentDeleteVideo"/>
        <actionGroup ref="RemoveContentTypeFromStageActionGroup" stepKey="removeVideo">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <dontSeeElementInDOM selector="{{PageBuilderStage.contentTypeInStageByIndex(PageBuilderVideoContentType.role, '1')}}" stepKey="dontSeeContentTypeInStage"/>
        <dontSeeElementInDOM selector="{{VideoOnStage.empty('1')}}" stepKey="dontSeeEmptyContentTypeInStage"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <dontSeeElementInDOM selector="{{PageBuilderStage.contentTypeInStageByIndex(PageBuilderVideoContentType.role, '1')}}" stepKey="dontSeeContentTypeInStage2"/>
        <dontSeeElementInDOM selector="{{VideoOnStage.empty('1')}}" stepKey="dontSeeEmptyContentTypeInStage2"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <dontSeeElementInDOM selector="{{VideoOnStorefront.base('1')}}" stepKey="dontSeeContentTypeInStorefront"/>
        <dontSeeElementInDOM selector="{{VideoOnStorefront.empty('1')}}" stepKey="dontSeeEmptyContentTypeInStorefront"/>
    </test>
    <test name="VideoValidateGeneralDefaultValues">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Validate General Default Values"/>
            <description value="Validate the default values for every attribute in the General section on the Edit Form, Stage, and Storefront for Video."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-89190"/>
            <testCaseId value="MC-2596"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragButtonsOntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="commentValidateDefaultValues"/>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getUrl"/>
        <assertEmpty message="Text field was not empty. Had text: $getUrl" stepKey="assertUrl">
            <actualResult type="variable">getUrl</actualResult>
        </assertEmpty>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getWidth"/>
        <assertEmpty message="Text field was not empty. Had text: $getWidth" stepKey="assertWidth">
            <actualResult type="variable">getWidth</actualResult>
        </assertEmpty>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getHeight"/>
        <assertEmpty message="Text field was not empty. Had text: $getHeight" stepKey="assertHeight">
            <actualResult type="variable">getHeight</actualResult>
        </assertEmpty>
        <actionGroup ref="CloseEditPanelSettingsActionGroup" stepKey="closeEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateEmptyVideoStageActionGroup" stepKey="validateStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="ValidateEmptyVideoStageActionGroup" stepKey="validateStage2"/>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getUrl2"/>
        <assertEmpty message="Text field was not empty. Had text: $getUrl2" stepKey="assertUrl2">
            <actualResult type="variable">getUrl2</actualResult>
        </assertEmpty>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getWidth2"/>
        <assertEmpty message="Text field was not empty. Had text: $getWidth2" stepKey="assertWidth2">
            <actualResult type="variable">getWidth2</actualResult>
        </assertEmpty>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderVideoUrl_Default.section, PageBuilderVideoUrl_Default.fieldName)}}" stepKey="getHeight2"/>
        <assertEmpty message="Text field was not empty. Had text: $getHeight2" stepKey="assertHeight2">
            <actualResult type="variable">getHeight2</actualResult>
        </assertEmpty>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElementInDOM selector="{{VideoOnStorefront.empty}}" stepKey="seeVideo"/>
    </test>
    <test name="VideoValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Video."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83415"/>
            <testCaseId value="MC-2687"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragVideoIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="commentValidateDefaultValues"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty message="Text field was not empty. Had text: $getBorderColor" stepKey="assertBorderColor">
            <actualResult type="variable">getBorderColor</actualResult>
        </assertEmpty>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses">
            <actualResult type="variable">getCssClasses</actualResult>
        </assertEmpty>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateAdvancedStyleWithNoAlignmentActionGroup" stepKey="validateStage">
            <argument name="page" value="VideoOnStage"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="ValidateAdvancedStyleWithNoAlignmentActionGroup" stepKey="validateStage2">
            <argument name="page" value="VideoOnStage"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor2"/>
        <assertEmpty message="Text field was not empty. Had text: $getBorderColor2" stepKey="assertBorderColor2">
            <actualResult type="variable">getBorderColor2</actualResult>
        </assertEmpty>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses2"/>
        <assertEmpty message="Text field was not empty. Had text: $getCssClasses2" stepKey="assertCssClasses2">
            <actualResult type="variable">getCssClasses2</actualResult>
        </assertEmpty>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="ValidateAdvancedStyleWithNoAlignmentActionGroup" stepKey="validateStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
    <test name="VideoUpdateAdvancedConfigurationValues">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Update Advanced Configuration Values"/>
            <description value="Validate that updating every attribute in the Advanced Configuration form for Video will update the Stage and Storefront correctly."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-89190"/>
            <testCaseId value="MC-2667"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <!-- Update Values -->
        <comment userInput="Update Values" stepKey="commentUpdateValues"/>
        <actionGroup ref="ChooseVisualSelectOptionActionGroup" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="SelectSlideOutPanelFieldActionGroup" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldMarginsActionGroup" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldPaddingActionGroup" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStage">
            <argument name="page" value="VideoOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="CloseEditPanelSettingsActionGroup" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStage2">
            <argument name="page" value="VideoOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditMenuOnStage3">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderColor2">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateCssClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
    <test name="VideoWithBordersAndPaddingEqualToMaxWidth">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Video width with borders and padding is equal to max-width"/>
            <description value="A user can see Video width with borders and padding is equal to max-width"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-5079"/>
            <testCaseId value="MC-5974"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Configure content type -->
        <comment userInput="Configure content type" stepKey="commentConfigureContentType"/>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterWidthProperty">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="SelectSlideOutPanelFieldActionGroup" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldPaddingActionGroup" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate width on stage before save -->
        <comment userInput="Validate width on stage before save" stepKey="commentValidateWidthOnStageBeforeSave"/>
        <actionGroup ref="ValidateContentTypeWidthEqualToMaxWidthActionGroup" stepKey="validateContentTypeWidthBeforeSave">
            <argument name="content" value="{{VideoOnStage.wrapperCSS}}"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Validate width on stage after save -->
        <comment userInput="Validate width on stage after save" stepKey="commentValidateWidthOnStageAfterSave"/>
        <actionGroup ref="ValidateContentTypeWidthEqualToMaxWidthActionGroup" stepKey="validateContentTypeWidthAfterSave">
            <argument name="content" value="{{VideoOnStage.wrapperCSS}}"/>
        </actionGroup>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeWidthEqualToMaxWidthActionGroup" stepKey="validateContentTypeWidthStorefront">
            <argument name="content" value="{{VideoOnStorefront.wrapperCSS}}"/>
        </actionGroup>
    </test>
    <test name="VideoHeightRendersCorrectlyBasedOnMaxWidthAndAspectRatio" extends="RowWithBordersAndPaddingEqualToMinHeight">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Video height is based on max width and aspect ratio"/>
            <description value="A user can see Video height is based on max width and aspect ratio"/>
            <severity value="AVERAGE"/>
            <useCaseId value="MC-15812"/>
            <testCaseId value="MC-18149"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" after="enterPageTitle" stepKey="expandMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" after="commentConfigureContentType" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelByIndexActionGroup" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" after="openEditPanel" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" after="enterVideoUrlProperty" stepKey="enterWidthProperty">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <remove keyForRemoval="enterMinHeightProperty"/>
        <remove keyForRemoval="enterBorder"/>
        <remove keyForRemoval="enterBorderColor"/>
        <remove keyForRemoval="enterBorderWidth"/>
        <remove keyForRemoval="enterPadding"/>
        <comment userInput="Validate height on stage before save" stepKey="commentValidateHeightOnStageBeforeSave"/>
        <actionGroup ref="ValidateContentTypeHeightEqualToMinHeightActionGroup" stepKey="validateContentTypeHeightBeforeSave">
            <argument name="content" value="{{VideoOnStage.mainCSS}}"/>
            <argument name="height" value="PageBuilderVideoContainerHeight"/>
            <argument name="pixelBuffer" value="2"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeHeightEqualToMinHeightActionGroup" stepKey="validateContentTypeHeightAfterSave">
            <argument name="content" value="{{VideoOnStage.mainCSS}}"/>
            <argument name="height" value="PageBuilderVideoContainerHeight"/>
            <argument name="pixelBuffer" value="2"/>
        </actionGroup>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <comment userInput="Validate height on storefront" stepKey="commentValidateHeightOnStorefront"/>
        <actionGroup ref="ValidateContentTypeHeightEqualToMinHeightActionGroup" stepKey="validateContentTypeHeightStorefront">
            <argument name="content" value="{{VideoOnStorefront.mainCSS}}"/>
            <argument name="height" value="PageBuilderVideoContainerHeight"/>
            <argument name="pixelBuffer" value="2"/>
        </actionGroup>
    </test>
    <test name="VideoValidateURL">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Invalid Video URLs"/>
            <description value="Validate that validation message will display when inputting invalid video URL."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-1410"/>
            <testCaseId value="MC-2514"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragVideoIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty_Text">
            <argument name="property" value="PageBuilder_InvalidVideoURL_Text"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelAndValidateFieldErrorGeneralSectionActionGroup" stepKey="validateErrorText">
            <argument name="property" value="PageBuilder_InvalidVideoURL_Text"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty_HTML">
            <argument name="property" value="PageBuilder_InvalidVideoURL_HTML"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelAndValidateFieldErrorGeneralSectionActionGroup" stepKey="validateErrorHTML">
            <argument name="property" value="PageBuilder_InvalidVideoURL_HTML"/>
        </actionGroup>
    </test>
    <test name="VideoCannotAddToStage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Cannot add Video to Stage"/>
            <description value="If user drags Video to Stage, it should have no effect"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-515"/>
            <testCaseId value="MC-3137"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
            <group value="pagebuilder-cannotAddToStage"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="CannotDragContentTypeToTargetActionGroup" stepKey="dragVideoIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <dontSeeElementInDOM selector="{{VideoOnStage.base('1')}}" stepKey="dontSeeVideo"/>
    </test>
    <test name="CanAddVideoToColumn">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Add Video to Column container and view on Admin and Storefront"/>
            <description value="As a Content Manager I want column to be a container so that I can add video inside the column"/>
            <useCaseId value="MAGETWO-87081"/>
            <testCaseId value="MC-2494"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Add Column to Stage -->
        <comment userInput="Add Column to Stage" stepKey="addColumnToStage"/>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Add Video to Column -->
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToContainerActionGroup" stepKey="dragVideoOntoColumn">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="1" />
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoWidthProperty">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="User sees video displayed in tab on Stage" stepKey="confirmVideoOnStage"/>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="checkContentTypeInContainerStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate stage after save" stepKey="validateVideoOnStage"/>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="checkContentTypeInContainerStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <!-- Verify Video in Column on storefront -->
        <comment userInput="View Video on Storefront" stepKey="viewTabOnStorefront"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStorefrontActionGroup" stepKey="checkContentTypeInContainerStorefront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
    </test>
    <test name="VideoMoveVideo">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Move Video Between Columns"/>
            <description value="Verify that moving a video content type on the stage will update the storefront"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-3229"/>
            <testCaseId value="MC-3380"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
            <group value="pagebuilder-column"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Add Heading to Stage -->
        <comment userInput="Add Heading to Stage" stepKey="commentAddHeadingToStage"/>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToContainerActionGroup" stepKey="dragHeadingToColumn">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="2" />
        </actionGroup>
        <actionGroup ref="EnterHeadingOnStageActionGroup" stepKey="enterHeadingOnStage">
            <argument name="headingText" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="ClickOutsideLiveEditHeadingActionGroup" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Add Video to Stage -->
        <comment userInput="Add Video to Stage" stepKey="commentAddVideoToStage"/>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionInteractive">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToContainerActionGroup" stepKey="dragVideoToColumn">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="2" />
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Update Edit Panel -->
        <comment userInput="Update Edit Panel" stepKey="commentEdit"/>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="validateHeadingStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="positionInContainer" value="1"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="validateVideoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="positionInContainer" value="2"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <!-- Move Video -->
        <comment userInput="Move Video" stepKey="commentMoveVideo"/>
        <actionGroup ref="MoveContentTypeToContainerActionGroup" stepKey="moveVideoToLeftColumn">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="validateHeadingStage2">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStageActionGroup" stepKey="validateVideoStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="validateStorefront"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStorefrontActionGroup" stepKey="validateHeadingStorefront">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypeInsideContainerStorefrontActionGroup" stepKey="validateVideoStorefront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
    </test>
    <test name="VideoDuplicate">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Duplicate Video"/>
            <description value="A user should be able to duplicate a video content type. Verify on Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-3229"/>
            <testCaseId value="MC-3387"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionInteractive">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Update General Section -->
        <comment userInput="Update General Section" stepKey="commentUpdateGeneralSection"/>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoWidthProperty">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <!-- Update Advanced Section -->
        <comment userInput="Update Advanced Section" stepKey="commentUpdateAdvancedSection"/>
        <actionGroup ref="ChooseVisualSelectOptionActionGroup" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="SelectSlideOutPanelFieldActionGroup" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldMarginsActionGroup" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldPaddingActionGroup" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="HideContentTypeActionGroup" stepKey="hideContentType">
            <argument name="section" value="VideoOnStage"/>
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Duplicate and Verify Stage -->
        <comment userInput="Duplicate and Verify Stage" stepKey="commentDuplicateAndVerifyStage"/>
        <actionGroup ref="DuplicateContentTypeActionGroup" stepKey="duplicateContentType">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate content type is disabled -->
        <comment userInput="Validate content type is disabled" stepKey="commentValidateHiddenStage"/>
        <waitForElementVisible selector="{{VideoOnStage.hidden('1')}}" stepKey="waitForContentTypeHidden1"/>
        <waitForElementVisible selector="{{VideoOnStage.hidden('2')}}" stepKey="waitForContentTypeHidden2"/>
        <!-- Show duplicated content type -->
        <comment userInput="Show duplicate content type" stepKey="commentShowContentType"/>
        <actionGroup ref="ShowContentTypeActionGroup" stepKey="showContentType">
            <argument name="section" value="VideoOnStage"/>
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ShowContentTypeActionGroup" stepKey="showContentType2">
            <argument name="section" value="VideoOnStage"/>
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="targetIndex" value="2"/>
        </actionGroup>
        <!-- Validate Duplicate On Stage -->
        <comment userInput="Validate Duplicate On Stage" stepKey="commentValidateStage1"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateVideoStage1">
            <argument name="page" value="VideoOnStage"/>
            <argument name="index" value="2"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStage1">
            <argument name="page" value="VideoOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Verify Duplicate On Edit Panel -->
        <comment userInput="Verify Duplicate On Edit Panel" stepKey="commentVerifyEditPanel"/>
        <actionGroup ref="OpenPageBuilderEditPanelByIndexActionGroup" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <!-- Edit Panel: Verify General Settings Section -->
        <comment userInput="Edit Panel: Verify General Settings Section" stepKey="commentVerifyGeneralSettingsSection"/>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateVideoUrl">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsNotCheckedSlideOutPropertyActionGroup" stepKey="validateVideoWidth">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <!-- Edit Panel: Verify Advanced Section -->
        <comment userInput="Edit Panel: Verify Advanced Section" stepKey="commentVerifyAdvancedSection"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="CloseEditPanelSettingsActionGroup" stepKey="closeEditPanel"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <!-- Verify Duplicate On Stage After Save -->
        <comment userInput="Verify Duplicate On Stage After Save" stepKey="commentVerifyStageAfterSave"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateVideoStage2">
            <argument name="page" value="VideoOnStage"/>
            <argument name="index" value="2"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStage2">
            <argument name="page" value="VideoOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Verify Duplicate On Edit Panel After Save -->
        <comment userInput="Verify Duplicate On Edit Panel After Save" stepKey="commentVerifyEditPanelAfterSave"/>
        <actionGroup ref="OpenPageBuilderEditPanelByIndexActionGroup" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <!-- Edit Panel: Verify General Settings Section After Save -->
        <comment userInput="Edit Panel: Verify General Settings Section After Save" stepKey="commentVerifyGeneralSettingsSectionAfterSave"/>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateVideoUrl2">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsNotCheckedSlideOutPropertyActionGroup" stepKey="validateVideoWidth2">
            <argument name="property" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <!-- Edit Panel: Verify Advanced Section After Save -->
        <comment userInput="Edit Panel: Verify Advanced Section After Save" stepKey="commentVerifyAdvancedSectionAfterSave"/>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="SeeOptionIsSelectedSlideOutPropertyActionGroup" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderColor2">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="SeeInFieldSlideOutPropertyActionGroup" stepKey="validateCssClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="SeeInMarginFieldsSlideOutPanelActionGroup" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="SeeInPaddingFieldsSlideOutPanelActionGroup" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <!-- Validate Duplicate On Storefront -->
        <comment userInput="Validate Duplicate On Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Validate content type is enabled in Storefront -->
        <comment userInput="Validate content type is enabled in Storefront" stepKey="commentValidateShownStorefront"/>
        <waitForElementVisible selector="{{VideoOnStorefront.notHidden('1')}}" stepKey="waitForContentTypeShownStorefront1"/>
        <waitForElementVisible selector="{{VideoOnStorefront.notHidden('2')}}" stepKey="waitForContentTypeShownStorefront2"/>
        <actionGroup ref="ValidateVideoActionGroup" stepKey="validateStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="index" value="2"/>
            <argument name="url" value="PageBuilderVideoUrl_YouTube"/>
            <argument name="width" value="PageBuilderVideoWidth_500"/>
        </actionGroup>
        <actionGroup ref="ValidateAdvancedStyleWithAllUpdatedActionGroup" stepKey="validateAllAdvancedStorefront">
            <argument name="page" value="VideoOnStorefront"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
    </test>
    <test name="ValidateShowHideOnVideoDefaultState">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Video is shown by default"/>
            <description value="Video is shown by default in stage and storefront"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-965"/>
            <testCaseId value="MC-3551"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
            <group value="pagebuilder-hideShow"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <!-- Add Video to Stage -->
        <comment userInput="Add Video to Stage" stepKey="commentAddVideoToStage"/>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <!-- Stage: Validate Default Show/Hide State - Before Save -->
        <comment userInput="Stage: Validate Default Show/Hide State Before Save" stepKey="commentValidateDefaultShowHideStateOnStageBeforeSave"/>
        <seeElement selector="{{VideoOnStage.notHidden('1')}}" stepKey="seeContentTypeNotHiddenStageBeforeSave"/>
        <!-- Stage: Validate Default Show/Hide State - After Save -->
        <comment userInput="Stage: Validate Default Show/Hide State - After Save" stepKey="commentValidateDefaultShowHideStateOnStageAfterSave"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <seeElement selector="{{VideoOnStage.notHidden('1')}}" stepKey="seeContentTypeNotHiddenStageAfterSave"/>
        <!-- Storefront: Validate Default Show/Hide State -->
        <comment userInput="Storefront: Validate Default Show/Hide State" stepKey="commentValidateDefaultShowHideStateOnStorefront"/>
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <seeElement selector="{{VideoOnStorefront.notHidden('1')}}" stepKey="seeContentTypeNotHiddenStorefront"/>
    </test>
    <test name="ValidateShowHideOnVideo">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Video"/>
            <title value="Video has hide show capabilities"/>
            <description value="A user is able to hide and show the video successfully"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-965"/>
            <testCaseId value="MC-3515"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-video"/>
            <group value="pagebuilder-hideShow"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToAPageWithPageBuilderActionGroup" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="LogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeOpenedTab" />
        </after>
        <actionGroup ref="AddPageBuilderPageTitleActionGroup" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="ExpandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="DragContentTypeToStageActionGroup" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="OpenPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="FillSlideOutPanelFieldGeneralActionGroup" stepKey="enterVideoUrlProperty">
            <argument name="property" value="PageBuilderVideoUrl_YouTube"/>
        </actionGroup>
        <actionGroup ref="SaveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="HideContentTypeActionGroup" stepKey="hideContentType">
            <argument name="section" value="VideoOnStage"/>
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage1"/>
        <!-- Validate content type remains disabled after save -->
        <comment userInput="Validate content type remains disabled after save" stepKey="commentValidateHiddenStage"/>
        <seeElement selector="{{VideoOnStage.hidden('1')}}" stepKey="waitForContentTypeHidden" />
        <!-- Validate store front -->
        <comment userInput="Validate content type is disabled on storefront" stepKey="commentValidateHiddenStorefront"/>
        <openNewTab stepKey="openNewTab" />
        <actionGroup ref="NavigateToStoreFrontActionGroup" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <waitForElement selector="{{VideoOnStorefront.base('1')}}" stepKey="waitForContentTypeNotVisible" />
        <dontSeeElement selector="{{VideoOnStorefront.base('1')}}" stepKey="dontSeeContentType" />
        <seeElementInDOM selector="{{VideoOnStorefront.hidden('1')}}" stepKey="waitForHiddenElement" />
        <!-- Set content to visible in admin -->
        <comment userInput="Set content to visible in admin" stepKey="commentSetContentToVisibleAdmin"/>
        <switchToNextTab stepKey="switchBackToAdmin" />
        <reloadPage stepKey="reloadPage" />
        <waitForPageLoad stepKey="waitForAdminReload" />
        <actionGroup ref="SwitchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="ShowContentTypeActionGroup" stepKey="showContentType">
            <argument name="section" value="VideoOnStage"/>
            <argument name="contentType" value="PageBuilderVideoContentType"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Validate Content Is Shown Storefront -->
        <comment userInput="Validate Content Is Shown Storefront" stepKey="commentValidateContentIsShownStorefront"/>
        <switchToNextTab stepKey="switchBackToStorefront" />
        <reloadPage stepKey="reloadStorefront" />
        <waitForPageLoad stepKey="waitForStorefrontReload" />
        <dontSeeElementInDOM selector="{{VideoOnStorefront.hidden('1')}}" stepKey="dontSeeHiddenElement"/>
        <seeElement selector="{{VideoOnStorefront.base('1')}}" stepKey="waitForContentTypeVisible" />
    </test>
</tests>
