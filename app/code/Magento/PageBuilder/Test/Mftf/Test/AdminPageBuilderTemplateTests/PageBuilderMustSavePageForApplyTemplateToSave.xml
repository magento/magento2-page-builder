<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderMustSavePageForApplyTemplateToSave">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Verify Must Save Page for Apply Template to Save"/>
            <description value="Verify that applying a template will not save to the page content unless the page is saved."/>
            <severity value="AVERAGE"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30621"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
            <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
            <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
            <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
            <!-- Go to CMS Page -->
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage2">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid"/>
            <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="clickApplyFromPageBuilderApplyTemplateSlideOut" stepKey="clickApplyFromPageBuilderApplyTemplateSlideOut2"/>
        <actionGroup ref="confirmApplyFromPageBuilderApplyTemplateSlideOut" stepKey="confirmApplyFromPageBuilderApplyTemplateSlideOut2"/>
        <!-- Validate Stage -->
        <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
        <!-- Go to CMS PPageBuilderWithWYSIWYGage Again -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Verify Empty Stage -->
        <actionGroup ref="verifyEmptyStage" stepKey="verifyEmptyStage"/>
    </test>
</tests>
