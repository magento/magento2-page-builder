<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCreateTemplateWithSecretKeyTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Templates - Create Page Builder Template w/ Secret Key Enabled"/>
            <description value="Verify that users are able to create Page Builder templates with working screenshots when Secret URL Key is enabled. Also, disabling secret keys does not affect created screenshots."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-30862"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!-- Enable Secret Key -->
            <magentoCLI command="config:set admin/security/use_form_key 1" stepKey="enableUrlSecretKeys"/>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches1">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
            <reloadPage stepKey="reloadPage1"/>
            <!-- Navigate to CMS Page -->
            <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToContentPagesPage">
                <argument name="menuUiId" value="{{AdminMenuContent.dataUiId}}"/>
                <argument name="submenuUiId" value="{{AdminMenuContentElementsPages.dataUiId}}"/>
            </actionGroup>
            <actionGroup ref="NavigateToCreatedCMSPageWithEnabledSecretKeyActionGroup" stepKey="navigateToCreatedCMSPage1">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage3"/>
            <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid5"/>
            <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid5"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Add Row -->
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage1"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>

        <!-- Create and Save Template -->
        <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
        <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
        <!-- Open Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut1"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid1">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid1">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <!-- Validate Template in Apply Template Slide Out -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal1">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal1">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal1">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderApplyTemplateSlideOut" stepKey="closePageBuilderApplyTemplateSlideOut1"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <!-- Navigate to Templates Grid Page -->
        <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToTemplatesGridPage">
            <argument name="menuUiId" value="{{AdminMenuContent.dataUiId}}"/>
            <argument name="submenuUiId" value="{{AdminMenuContentElementsTemplates.dataUiId}}"/>
        </actionGroup>
        <actionGroup ref="NavigateToPageBuilderTemplatesGridPageWithSecretKeyEnabledActionGroup" stepKey="navigateToPageBuilderTemplatesGridPage1"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid2"/>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid2">
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <!-- Validate Templates Grid Page -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal2">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal2">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal2"/>

        <!-- Disable Secret Key -->
        <magentoCLI command="config:set admin/security/use_form_key 0" stepKey="disableUrlSecretKeys"/>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches2">
            <argument name="tags" value="config full_page"/>
        </actionGroup>
        <reloadPage stepKey="reloadPage2"/>

        <!-- Navigate to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Open Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut2"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <!-- Validate Template in Apply Template Slide Out -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal3">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal3">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderApplyTemplateSlideOut" stepKey="closePageBuilderApplyTemplateSlideOut2"/>
        <!-- Navigate to Templates Grid Page -->
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage2"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid4"/>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid4">
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <!-- Validate Templates Grid Page -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal4">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal4">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal4"/>
    </test>
</tests>
