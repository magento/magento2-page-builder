<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TextHeightConsistencyBetweenContentTypeAndBlockOnStorefront">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Text"/>
            <title value="Height consistency of text in PageBuilder storefront"/>
            <description value="Verify text height consistent whether in text content type or text content type inside block"/>
            <severity value="AVERAGE"/>
            <useCaseId value="MC-4254"/>
            <testCaseId value="MC-13792"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
        </annotations>
        <before>
            <createData entity="_defaultBlock" stepKey="createPreReqBlock" />
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <deleteData createDataKey="createPreReqBlock" stepKey="deletePreReqBlock" />
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCmsBlock">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <!-- Update block with text -->
        <comment userInput="Update block with text" stepKey="commentUpdateBlockWithText"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionForText1">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragTextOntoBlockStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="inlineEditWYSIWYGFromStageActionGroup" stepKey="inlineEditBlockText">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="content" value="{{PageBuilderTextProperty.value}}"/>
        </actionGroup>
        <click selector="{{CmsNewBlockBlockActionsSection.savePage}}" stepKey="saveBlock"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCmsPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <!-- Add text to page -->
        <comment userInput="Add text to page" stepKey="addTextToPage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionForText2">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragTextOntoPageStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="inlineEditWYSIWYGFromStageActionGroup" stepKey="inlineEdit">
            <argument name="contentType" value="PageBuilderTextContentType"/>
            <argument name="content" value="{{PageBuilderTextProperty.value}}"/>
        </actionGroup>
        <!-- Add block to page -->
        <comment userInput="Add block to page" stepKey="addBlockToPage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionForBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockOntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <waitForElementVisible selector="{{BlockOnForm.title('$$createPreReqBlock.title$$')}}" stepKey="waitToSeeBlockTitle"/>
        <seeElement selector="{{BlockOnForm.title('$$createPreReqBlock.title$$')}}" stepKey="seeBlockTitleOnForm"/>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettings2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!--Get storefront information-->
        <comment userInput="Get storefront information" stepKey="commentGetStorefrontInformation"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStoreFront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForStorefront"/>
        <waitForElement selector="{{TextOnStorefront.base('1')}}" stepKey="waitForTextOnStorefront"/>
        <executeJS function="return document.evaluate(&quot;{{TextOnStorefront.base('1'))}}&quot;, document.body).iterateNext().offsetHeight;" stepKey="getTextOnStorefrontHeight"/>
        <executeJS function="return document.evaluate(&quot;{{BlockOnStorefront.text('1', '1'))}}&quot;, document.body).iterateNext().offsetHeight;" stepKey="getBlockTextOnStorefrontHeight"/>
        <assertEquals stepKey="assertStageAndStorefrontHeightAreClose">
            <expectedResult type="variable">getTextOnStorefrontHeight</expectedResult>
            <actualResult type="variable">getBlockTextOnStorefrontHeight</actualResult>
        </assertEquals>
    </test>
    <test name="BlockRenderTextThroughBlockContentTypeTinyMCE4WysiwygEnabledByDefault">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Text Through Block Content Type With TinyMCE4 and Wysiwyg Enabled By Default"/>
            <description value="Verify that users are able to successfully render and use the Text content type through the Block content type with TinyMCE4 and Wysiwyg Enabled By Default."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15159"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/wysiwyg/enabled enabled" stepKey="configWYSIWYG"/>
            <magentoCLI command="config:set cms/wysiwyg/editor mage/adminhtml/wysiwyg/tiny_mce/tinymce4Adapter" stepKey="configTinyMCE"/>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <createData entity="_defaultCmsPage" stepKey="createPreReqCMSPage"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createPreReqCMSPage" stepKey="deleteCMSPageB"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFolder">
                <argument name="FolderName" value="{{ImageFolder.name}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteImageFromStorage">
                <argument name="Image" value="ImageUpload3"/>
            </actionGroup>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Text -->
        <comment userInput="Add Text" stepKey="commentAddText"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragTextIntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Inline Edit: Add Text -->
        <comment userInput="Inline Edit: Add Text" stepKey="commentInlineEditAddText"/>
        <actionGroup ref="focusOnInlineTinyMCEEditorActionGroup" stepKey="focusOnInlineTinyMCEEditor"/>
        <actionGroup ref="goToEndOfLineTinyMCEEditorActionGroup" stepKey="moveCaretToEnd"/>
        <actionGroup ref="addTextToTinyMCEInlineActionGroup" stepKey="addTextToTinyMCEInline">
            <argument name="section" value="TextOnStage"/>
            <argument name="text" value="{{PageBuilderTextProperty.value}}"/>
        </actionGroup>
        <!-- Inline Edit: Add Variable -->
        <comment userInput="Inline Edit: Add Variable" stepKey="commentInlineEditAddVariable"/>
        <actionGroup ref="focusOnInlineTinyMCEEditorActionGroup" stepKey="focusOnInlineTinyMCEEditor2"/>
        <actionGroup ref="goToEndOfLineTinyMCEEditorActionGroup" stepKey="moveCaretToEnd2"/>
        <actionGroup ref="addVariableToTinyMCEInlineActionGroup" stepKey="addVariableToTinyMCE">
            <argument name="variable" value="TinyMCEVariableBaseURL"/>
        </actionGroup>
        <!-- Inline Edit: Add Widget -->
        <comment userInput="Inline Edit: Add Widget" stepKey="commentInlineEditAddWidget"/>
        <actionGroup ref="focusOnInlineTinyMCEEditorActionGroup" stepKey="focusOnInlineTinyMCEEditor3"/>
        <actionGroup ref="goToEndOfLineTinyMCEEditorActionGroup" stepKey="moveCaretToEnd3"/>
        <actionGroup ref="addPageLinkWidgetToTinyMCEInlineActionGroup" stepKey="addPageLinkWidgetToTinyMCE">
            <argument name="widget" value="TinyMCEWidgetCMSPageLink"/>
            <argument name="page" value="$$createPreReqCMSPage.identifier$$"/>
        </actionGroup>
        <!-- Inline Edit: Add Image -->
        <comment userInput="Inline Edit: Add Image" stepKey="commentInlineEditAddImage"/>
        <actionGroup ref="focusOnInlineTinyMCEEditorActionGroup" stepKey="focusOnInlineTinyMCEEditor4"/>
        <actionGroup ref="goToEndOfLineTinyMCEEditorActionGroup" stepKey="moveCaretToEnd4"/>
        <actionGroup ref="clickInsertImageInTinyMCEActionGroup" stepKey="clickInsertImageInTinyMCE"/>
        <actionGroup ref="ClickBrowseBtnOnUploadPopupActionGroup" stepKey="clickBrowserBtn"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="verifyMediaGalleryStorageBtn"/>
        <actionGroup ref="clickMediaGalleryStorageRootArrowActionGroup" stepKey="clickMediaGalleryStorageRootArrow"/>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="createImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage"/>
        <actionGroup ref="FillOutUploadImagePopupActionGroup" stepKey="fillOutUploadImagePopup"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage -->
        <comment userInput="Validate CMS Block Stage" stepKey="commentValidateCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.text('1', PageBuilderTextProperty.value)}}" stepKey="seeTextCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.text('1', TinyMCEVariableBaseURL.editPanelValue)}}" stepKey="seeVariableCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.text('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="seeWidgetCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.fileName)}}" stepKey="seeImageFileNameCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.extension)}}" stepKey="seeImageExtensionCMSBlockStage"/>
        <seeElement selector="{{TextOnStage.base('1')}}{{CmsWYSIWYGSection.ImageAlt(ImageUpload3.content)}}" stepKey="seeImageAltCMSBlockStage"/>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.text('1', PageBuilderTextProperty.value)}}" stepKey="seeTextCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.text('1', _ENV.MAGENTO_BASE_URL)}}" stepKey="seeVariableCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, $$createPreReqCMSPage.identifier$$)}}" stepKey="seeWidgetCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.fileName)}}" stepKey="seeImageFileNameCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.extension)}}" stepKey="seeImageExtensionCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.ImageAlt(ImageUpload3.content)}}" stepKey="seeImageAltCMSPageStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{TextOnStorefront.text('1', PageBuilderTextProperty.value)}}" stepKey="seeTextCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.text('1', _ENV.MAGENTO_BASE_URL)}}" stepKey="seeVariableCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, $$createPreReqCMSPage.identifier$$)}}" stepKey="seeWidgetCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.fileName)}}" stepKey="seeImageFileNameCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.imageSource(ImageUpload3.extension)}}" stepKey="seeImageExtensionCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.base('1')}}{{CmsWYSIWYGSection.ImageAlt(ImageUpload3.content)}}" stepKey="seeImageAltCMSPageStorefront"/>
        <!-- Click Page Link Widget -->
        <comment userInput="Click Page Link Widget" stepKey="clickClickPageLinkWidget"/>
        <click selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, $$createPreReqCMSPage.identifier$$)}}" stepKey="clickWidgetCMSPageStorefront"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurStorefront"/>
        <seeCurrentUrlEquals url="{{_ENV.MAGENTO_BASE_URL}}$$createPreReqCMSPage.identifier$$" stepKey="seeThatUrlIsChangedToPageLinkWidgetUrlStorefront"/>
    </test>
    <test name="BlockRenderTextThroughBlockContentTypeTinyMCE4WysiwygDisabledByDefault" extends="BlockRenderTextThroughBlockContentTypeTinyMCE4WysiwygEnabledByDefault">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Text Through Block Content Type With TinyMCE4 and Wysiwyg Disabled By Default"/>
            <description value="Verify that users are able to successfully render and use the Text content type through the Block content type with TinyMCE4 and Wysiwyg Disabled By Default."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15175"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/wysiwyg/enabled hidden" stepKey="configWYSIWYG"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/wysiwyg/enabled enabled" stepKey="enableWYSIWYG" before="deleteCMSBlock"/>
        </after>
    </test>
    <test name="BlockRenderTextThroughBlockContentTypeTinyMCE4WysiwygDisabledCompletely">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Text Through Block Content Type With TinyMCE4 and Wysiwyg Disabled Completely"/>
            <description value="Verify that users are able to successfully render and use the Text content type through the Block content type with TinyMCE4 and Disabled Completely."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15176"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/wysiwyg/enabled disabled" stepKey="configWYSIWYG"/>
            <magentoCLI command="config:set cms/wysiwyg/editor mage/adminhtml/wysiwyg/tiny_mce/tinymce4Adapter" stepKey="configTinyMCE"/>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <createData entity="_defaultCmsPage" stepKey="createPreReqCMSPage"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <magentoCLI command="config:set cms/wysiwyg/enabled enabled" stepKey="enableWYSIWYG"/>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createPreReqCMSPage" stepKey="deleteCMSPageB"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Text -->
        <comment userInput="Add Text" stepKey="commentAddText"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragTextIntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!-- Inline Edit: Add Text -->
        <comment userInput="Inline Edit: Add Text" stepKey="commentInlineEditAddText"/>
        <actionGroup ref="focusOnInlineTextAreaEditorActionGroup" stepKey="focusOnInlineTextAreaEditor"/>
        <actionGroup ref="addTextToTinyMCEInlineWYSIWYGDisabledActionGroup" stepKey="addTextToTinyMCEInline">
            <argument name="section" value="TextOnStage"/>
            <argument name="text" value="{{PageBuilderTextProperty.value}}"/>
        </actionGroup>
        <!-- Inline Edit: Add Variable -->
        <actionGroup ref="focusOnInlineTextAreaEditorActionGroup" stepKey="focusOnInlineTextAreaEditor2"/>
        <actionGroup ref="addTextToTinyMCEInlineWYSIWYGDisabledActionGroup" stepKey="addVariableToTinyMCE">
            <argument name="section" value="TextOnStage"/>
            <argument name="text" value="{{PageBuilderTextArea_VariableBaseURL.editPanelValue}}"/>
        </actionGroup>
        <!-- Inline Edit: Add Widget -->
        <comment userInput="Inline Edit: Add Widget" stepKey="commentInlineEditAddWidget"/>
        <actionGroup ref="focusOnInlineTextAreaEditorActionGroup" stepKey="focusOnInlineTextAreaEditor3"/>
        <actionGroup ref="addTextToTinyMCEInlineWYSIWYGDisabledActionGroup" stepKey="addPageLinkWidgetToTinyMCE">
            <argument name="section" value="TextOnStage"/>
            <argument name="text" value="{{PageBuilderTextArea_WidgetCMSHomepageLink.editPanelValue}}"/>
        </actionGroup>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage -->
        <comment userInput="Validate CMS Block Stage" stepKey="commentValidateCMSBlockStage"/>
        <actionGroup ref="assertTextareaContainsValueActionGroup" stepKey="assertTextareaContainsValueCMSBlockStage">
            <argument name="selector" value="{{TextOnStage.textArea('1')}}"/>
            <argument name="value" value="{{PageBuilderTextProperty.value}}"/>
        </actionGroup>
        <actionGroup ref="assertTextareaContainsValueActionGroup" stepKey="assertTextareaContainsValueCMSBlockStage2">
            <argument name="selector" value="{{TextOnStage.textArea('1')}}"/>
            <argument name="value" value="{{PageBuilderTextArea_VariableBaseURL.editPanelValue}}"/>
        </actionGroup>
        <actionGroup ref="assertTextareaContainsValueActionGroup" stepKey="assertTextareaContainsValueCMSBlockStage3">
            <argument name="selector" value="{{TextOnStage.textArea('1')}}"/>
            <argument name="value" value="{{PageBuilderTextArea_WidgetCMSHomepageLink.editPanelValue}}"/>
        </actionGroup>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.textAreaText('1', PageBuilderTextProperty.value)}}" stepKey="seeTextCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.textAreaText('1', _ENV.MAGENTO_BASE_URL)}}" stepKey="seeVariableCMSPageStage"/>
        <seeElement selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, PageBuilderTextArea_WidgetCMSHomepageLink.identifier)}}" stepKey="seeWidgetCMSPageStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{TextOnStorefront.textAreaText('1', PageBuilderTextProperty.value)}}" stepKey="seeTextCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.textAreaText('1', _ENV.MAGENTO_BASE_URL)}}" stepKey="seeVariableCMSPageStorefront"/>
        <seeElement selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, PageBuilderTextArea_WidgetCMSHomepageLink.identifier)}}" stepKey="seeWidgetCMSPageStorefront"/>
        <!-- Click Page Link Widget -->
        <comment userInput="Click Page Link Widget" stepKey="clickClickPageLinkWidget"/>
        <click selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, PageBuilderTextArea_WidgetCMSHomepageLink.identifier)}}" stepKey="clickWidgetCMSPageStorefront"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurStorefront"/>
        <seeCurrentUrlEquals url="{{_ENV.MAGENTO_BASE_URL}}{{PageBuilderTextArea_WidgetCMSHomepageLink.identifier}}" stepKey="seeThatUrlIsChangedToPageLinkWidgetUrlStorefront"/>
    </test>
    <test name="BlockRenderHeadingThroughBlockContentType">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Heading Through Block Content Type"/>
            <description value="Verify that users are able to successfully render and use the Heading content type through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13783"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-heading"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Heading -->
        <comment userInput="Add Heading" stepKey="commentAddHeading"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragHeadingIntoStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeadingActionGroup" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Edit Heading -->
        <comment userInput="Edit Heading" stepKey="commentEditHeading"/>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditMenuHeading">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneralActionGroup" stepKey="setHeadingText">
            <argument name="property" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneralActionGroup" stepKey="setHeadingTypeH1">
            <argument name="property" value="PageBuilderHeadingTypeProperty_H1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsHeading"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage -->
        <comment userInput="Validate CMS Block Stage" stepKey="commentValidateCMSBlockStage"/>
        <seeElement selector="{{HeadingOnStage.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleCMSBlockStage"/>
        <seeElement selector="{{HeadingOnStage.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextCMSBlockStage"/>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeElement selector="{{HeadingOnStorefront.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleCMSPageStage"/>
        <seeElement selector="{{HeadingOnStorefront.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextCMSPageStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{HeadingOnStorefront.headingType(PageBuilderHeadingTypeProperty_H1.value, '1')}}" stepKey="seeHeadingStyleCMSPageStorefront"/>
        <seeElement selector="{{HeadingOnStorefront.headingText(PageBuilderHeadingTypeProperty_H1.value, PageBuilderHeadingTextProperty.value, '1')}}" stepKey="seeHeadingTextCMSPageStorefront"/>
    </test>
    <test name="ButtonGroupInBlockOnDifferentLineWhenInFullWidthRow">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block"/>
            <title value="Buttons In Block From Different Button Groups On Different Line When in Full-Width Row"/>
            <description value="Button groups in block should be on different lines when in full-width row"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-15093"/>
            <testCaseId value="MC-15105"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
            <group value="pagebuilder-buttonGroup"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-row"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsBlock" stepKey="createPreReqBlock"/>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlock">
                <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createPreReqBlock" stepKey="deletePreReqBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCreatedCategory"/>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Change row appearance to full-width -->
        <comment userInput="Change row appearance to full-width" stepKey="commentChangeRowAppearanceBlock"/>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openRowEditMenuOnStageBlock">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOptionActionGroup" stepKey="enterAppearanceRowBlock">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsRowBlock"/>
        <!-- Add button groups to block -->
        <comment userInput="Add button groups to block" stepKey="commentAddButtonGroupsToBlock"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSectionBlock">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragContentTypeToStageBlock">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenuActionGroup" stepKey="unFocusOptionMenuBlock">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragContentTypeToStage2Block">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenuActionGroup" stepKey="unFocusOptionMenu2Block">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <!-- Validate Block -->
        <comment userInput="Validate Block" stepKey="commentValidateBlock"/>
        <executeJS function="return {{ButtonItemOnStage.jsButtonSelector('1')}}.getBoundingClientRect().y" stepKey="yCoordinate1Block"/>
        <executeJS function="return {{ButtonItemOnStage.jsButtonSelector('2')}}.getBoundingClientRect().y" stepKey="yCoordinate2Block"/>
        <assertNotEquals stepKey="checkYCoordinatesBlock">
            <expectedResult type="variable">yCoordinate1Block</expectedResult>
            <actualResult type="variable">yCoordinate2Block</actualResult>
        </assertNotEquals>
        <actionGroup ref="SaveAndCloseCMSBlockWithSplitButtonActionGroup" stepKey="saveCMSBlock"/>
        <!-- Go to CMS Page and choose Block -->
        <comment userInput="Go to CMS Page and choose Block" stepKey="commentGoToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStageActionGroup" stepKey="switchToPageBuilderStagePage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandMenuSectionAddContentPage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStagePage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropPage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGridPage">
            <argument name="block" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsPage"/>
        <!-- Validate Page -->
        <comment userInput="Validate Page" stepKey="commentValidatePage"/>
        <executeJS function="return {{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}.getBoundingClientRect().y" stepKey="yCoordinate1Page"/>
        <executeJS function="return {{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('2')}}.getBoundingClientRect().y" stepKey="yCoordinate2Page"/>
        <assertNotEquals stepKey="checkYCoordinatesPage">
            <expectedResult type="variable">yCoordinate1Page</expectedResult>
            <actualResult type="variable">yCoordinate2Page</actualResult>
        </assertNotEquals>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToProductStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <executeJS function="return {{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}.getBoundingClientRect().y" stepKey="yCoordinate1Storefront"/>
        <executeJS function="return {{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('2')}}.getBoundingClientRect().y" stepKey="yCoordinate2Storefront"/>
        <assertNotEquals stepKey="checkYCoordinatesStorefront">
            <expectedResult type="variable">yCoordinate1Storefront</expectedResult>
            <actualResult type="variable">yCoordinate2Storefront</actualResult>
        </assertNotEquals>
    </test>
    <test name="BlockRenderButtonsThroughBlockContentTypeInlineNotSameSize">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Buttons Through Block Content Type: Inline and Not Same Size"/>
            <description value="Verify that users are able to successfully render and use the Buttons content type (inline and not same size) through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13785"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Buttons -->
        <comment userInput="Add Buttons" stepKey="commentAddButtons"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragButtonsIntoStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenuActionGroup" stepKey="unFocusOptionMenu">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <!-- Edit Button Group -->
        <comment userInput="Edit Button Group" stepKey="commentEditButtonGroup"/>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditMenuButtons">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOptionActionGroup" stepKey="setAppearanceOption">
            <argument name="property" value="PageBuilderButtonGroupAppearance_Inline"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneralActionGroup" stepKey="setSameSizeOption">
            <argument name="property" value="PageBuilderButtonGroupSameSize_Disabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsButtons"/>
        <!-- Edit Button Item -->
        <comment userInput="Edit Button Item" stepKey="commentEditButtonItem"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndexActionGroup" stepKey="openEditMenuOnStageButtonItem">
            <argument name="section" value="ButtonItemOnStage"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneralActionGroup" stepKey="fillButtonTextField">
            <argument name="property" value="PageBuilderButtonItemText_First"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneralActionGroup" stepKey="fillButtonType">
            <argument name="property" value="PageBuilderButtonItemType_Secondary"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlFieldActionGroup" stepKey="fillButtonLinkField">
            <argument name="property" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsButtonItem"/>
        <!-- Add 2nd Button Item -->
        <comment userInput="Add 2nd Button Item" stepKey="commentAddButtonItem"/>
        <actionGroup ref="duplicateSmallContentTypeActionGroup" stepKey="duplicateSmallContentType">
            <argument name="section" value="ButtonItemOnStage"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="inlineEditButtonActionGroup" stepKey="inlineEditButton2">
            <argument name="text" value="PageBuilderButtonItemText_OneCharacter"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage -->
        <comment userInput="Validate CMS Block Stage" stepKey="commentValidateCMSBlockStage"/>
        <seeNumberOfElements selector="{{ButtonItemOnStage.all}}" userInput="2" stepKey="see2ButtonsCMSBlockStage"/>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton1CMSBlockStage">
            <argument name="page" value="ButtonItemOnStage"/>
            <argument name="text" value="PageBuilderButtonItemText_First"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton2CMSBlockStage">
            <argument name="page" value="ButtonItemOnStage"/>
            <argument name="text" value="PageBuilderButtonItemText_OneCharacter"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupInlineAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsDifferentSizesActionGroup" stepKey="validateButtonsSizesCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeNumberOfElements selector="{{ButtonItemOnStorefront.all}}" userInput="2" stepKey="see2ButtonsCMSPageStage"/>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton1CMSPageStage">
            <argument name="page" value="ButtonItemOnStorefront"/>
            <argument name="text" value="PageBuilderButtonItemText_First"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton2CMSPageStage">
            <argument name="page" value="ButtonItemOnStorefront"/>
            <argument name="text" value="PageBuilderButtonItemText_OneCharacter"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupInlineAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsDifferentSizesActionGroup" stepKey="validateButtonsSizesCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeNumberOfElements selector="{{ButtonItemOnStorefront.all}}" userInput="2" stepKey="see2ButtonsCMSPageStorefront"/>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton1CMSPageStorefront">
            <argument name="page" value="ButtonItemOnStorefront"/>
            <argument name="text" value="PageBuilderButtonItemText_First"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemContentActionGroup" stepKey="validateButton2CMSPageStorefront">
            <argument name="page" value="ButtonItemOnStorefront"/>
            <argument name="text" value="PageBuilderButtonItemText_OneCharacter"/>
            <argument name="type" value="PageBuilderButtonItemType_Secondary"/>
            <argument name="url" value="PageBuilderButtonItemLink_NotSecure"/>
            <argument name="newTab" value="PageBuilderButtonItemOpenInNewTab_False"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupInlineAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsDifferentSizesActionGroup" stepKey="validateButtonsSizesCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <click selector="{{ButtonItemOnStorefront.buttonItemUrl('1', PageBuilderButtonItemLink_NotSecure.value)}}" stepKey="clickButtonCMSPageStorefront"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurCMSPageStorefront"/>
        <seeCurrentUrlEquals url="{{PageBuilderButtonItemLink_NotSecure.value}}" stepKey="seeThatUrlIsChangedToButtonUrl"/>
    </test>
    <test name="BlockRenderButtonsThroughBlockContentTypeInlineSameSize" extends="BlockRenderButtonsThroughBlockContentTypeInlineNotSameSize">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Buttons Through Block Content Type: Inline and Same Size"/>
            <description value="Verify that users are able to successfully render and use the Buttons content type (inline and same size) through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13927"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneralActionGroup" stepKey="setSameSizeOption">
            <argument name="property" value="PageBuilderButtonGroupSameSize_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
    </test>
    <test name="BlockRenderButtonsThroughBlockContentTypeStackedNotSameSize" extends="BlockRenderButtonsThroughBlockContentTypeInlineNotSameSize">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Buttons Through Block Content Type: Stacked and Not Same Size"/>
            <description value="Verify that users are able to successfully render and use the Buttons content type (stacked and not same size) through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13928"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOptionActionGroup" stepKey="setAppearanceOption">
            <argument name="property" value="PageBuilderButtonGroupAppearance_Stacked"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
    </test>
    <test name="BlockRenderButtonsThroughBlockContentTypeStackedSameSize" extends="BlockRenderButtonsThroughBlockContentTypeInlineNotSameSize">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Buttons Through Block Content Type: Stacked and Same Size"/>
            <description value="Verify that users are able to successfully render and use the Buttons content type (stacked and same size) through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13929"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <actionGroup ref="chooseVisualSelectOptionActionGroup" stepKey="setAppearanceOption">
            <argument name="property" value="PageBuilderButtonGroupAppearance_Stacked"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneralActionGroup" stepKey="setSameSizeOption">
            <argument name="property" value="PageBuilderButtonGroupSameSize_Enabled"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSBlockStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSPageStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonGroupStackedAppearanceActionGroup" stepKey="validateButtonGroupAppearanceCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSizeActionGroup" stepKey="validateButtonsSizesCMSPageStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefront"/>
        </actionGroup>
    </test>
    <test name="BlockRenderDividerThroughBlockContentType">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render Divider Through Block Content Type"/>
            <description value="Verify that users are able to successfully render and use the Divider content type through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-13784"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-divider"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Divider -->
        <comment userInput="Add Divider" stepKey="commentAddDivider"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragDividerIntoStage">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
        </actionGroup>
        <!-- Edit Divider -->
        <comment userInput="Edit Divider" stepKey="commentEditDivider"/>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditMenuDivider">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneralActionGroup" stepKey="setDividerLineColor">
            <argument name="property" value="PageBuilderDividerLineColor_Yellow"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneralActionGroup" stepKey="setDividerLineThickness">
            <argument name="property" value="PageBuilderDividerLineThickness_10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneralActionGroup" stepKey="setDividerLineWidth">
            <argument name="property" value="PageBuilderDividerLineWidth_50"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsDivider"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage -->
        <comment userInput="Validate CMS Block Stage" stepKey="commentValidateCMSBlockStage"/>
        <seeElement selector="{{DividerOnStage.color('1', PageBuilderDividerLineColor_Yellow.rgb)}}" stepKey="seeDividerColorCMSBlockStage"/>
        <seeElement selector="{{DividerOnStage.thickness('1', PageBuilderDividerLineThickness_10.value)}}" stepKey="seeDividerThicknessCMSBlockStage"/>
        <seeElement selector="{{DividerOnStage.width('1', PageBuilderDividerLineWidth_50.value)}}" stepKey="seeDividerWidthCMSBlockStage"/>
        <actionGroup ref="validateDividerWidthPercentageActionGroup" stepKey="validateDividerWidthCMSBlockStage">
            <argument name="page" value="DividerOnStage"/>
            <argument name="dividerWidth" value="PageBuilderDividerLineWidth_50"/>
        </actionGroup>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeElement selector="{{DividerOnStorefront.color('1', PageBuilderDividerLineColor_Yellow.rgb)}}" stepKey="seeDividerColorCMSPageStage"/>
        <seeElement selector="{{DividerOnStorefront.thickness('1', PageBuilderDividerLineThickness_10.value)}}" stepKey="seeDividerThicknessCMSPageStage"/>
        <seeElement selector="{{DividerOnStorefront.width('1', PageBuilderDividerLineWidth_50.value)}}" stepKey="seeDividerWidthCMSPageStage"/>
        <actionGroup ref="validateDividerWidthPercentageActionGroup" stepKey="validateDividerWidthCMSPageStage">
            <argument name="page" value="DividerOnStorefront"/>
            <argument name="dividerWidth" value="PageBuilderDividerLineWidth_50"/>
            <argument name="expectedOffset" value="{{PageBuilderDividerLineThickness_10.value}}*2"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{DividerOnStorefront.color('1', PageBuilderDividerLineColor_Yellow.rgb)}}" stepKey="seeDividerColorCMSPageStorefront"/>
        <seeElement selector="{{DividerOnStorefront.thickness('1', PageBuilderDividerLineThickness_10.value)}}" stepKey="seeDividerThicknessCMSPageStorefront"/>
        <seeElement selector="{{DividerOnStorefront.width('1', PageBuilderDividerLineWidth_50.value)}}" stepKey="seeDividerWidthCMSPageStorefront"/>
        <actionGroup ref="validateDividerWidthPercentageActionGroup" stepKey="validateDividerWidthCMSPageStorefront">
            <argument name="page" value="DividerOnStorefront"/>
            <argument name="dividerWidth" value="PageBuilderDividerLineWidth_50"/>
        </actionGroup>
    </test>
    <test name="BlockRenderHTMLThroughBlockContentType">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Render HTML Through Block Content Type"/>
            <description value="Verify that users are able to successfully render and use the HTML content type through the Block content type."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14806"/>
            <useCaseId value="MC-13769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-html"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="LoginAsAdminActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFolder2">
                <argument name="FolderName" value="{{ImageFolder.name}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteImageFromStorage2">
                <argument name="Image" value="ImageUpload3"/>
            </actionGroup>
            <actionGroup ref="logoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add HTML -->
        <comment userInput="Add HTML" stepKey="commentAddHTML"/>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragHTMLIntoStage">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <!-- Edit HTML -->
        <comment userInput="Edit HTML" stepKey="commentEditHTML"/>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditMenuHtml">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelTextAreaActionGroup" stepKey="enterHtmlContent">
            <argument name="property" value="PageBuilderHtmlPropertyButton"/>
        </actionGroup>
        <!-- Add media directives -->
        <comment userInput="Add media directives" stepKey="commentAddMediaDirectives"/>
        <actionGroup ref="addPageLinkWidgetToHtmlCodeWYSIWYGDisabledActionGroup" stepKey="addPageLinkWidgetToHtmlCodeWYSIWYGDisabled">
            <argument name="widget" value="PageBuilderTextArea_WidgetCMSPageLink"/>
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="clickHtmlInsertImageButtonActionGroup" stepKey="clickInsertImageInHtmlCode"/>
        <actionGroup ref="clickMediaGalleryStorageRootArrowActionGroup" stepKey="clickMediaGalleryStorageRootArrow"/>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="createImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage1">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage"/>
        <actionGroup ref="assertTextareaContainsValueActionGroup" stepKey="assertImageInTextareaValueBeforeSave">
            <argument name="value" value="{{ImageUpload3.value}}"/>
            <argument name="selector" value="{{HtmlOnConfiguration.textarea}}"/>
        </actionGroup>
        <actionGroup ref="addVariableToHtmlCodeWYSIWYGDisabledActionGroup" stepKey="addVariableToHtmlCodeWYSIWYGDisabled">
            <argument name="variable" value="PageBuilderTextArea_VariableBaseURL"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsHtml"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Validate CMS Block Stage After Save -->
        <comment userInput="Validate CMS Block Stage After Save" stepKey="commentValidateCMSBlockStageAfterSave"/>
        <seeElement selector="{{HtmlOnStage.base('1')}}" stepKey="seeHtmlBaseCMSBlockStageAfterSave"/>
        <seeElement selector="{{HtmlOnStage.html('1', PageBuilderHtmlPropertyButton.selector)}}" stepKey="seeHtmlCMSBlockStageAfterSave"/>
        <executeJS function="return document.querySelectorAll('{{HtmlOnStage.baseCSS}}')[0].innerText;" stepKey="actualTextFromHtmlCodeAfterSave"/>
        <assertContains stepKey="assertWidgetOnStageAfterSave">
            <expectedResult type="string">{{TinyMCEWidgetCMSPageLink.stageValue}}</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeAfterSave</actualResult>
        </assertContains>
        <assertContains stepKey="assertImageOnStageAfterSave">
            <expectedResult type="string">{{ImageUpload3.value}}</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeAfterSave</actualResult>
        </assertContains>
        <assertContains stepKey="assertVariableOnStageAfterSave">
            <expectedResult type="string">{{TinyMCEVariableBaseURL.stageValue}}</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeAfterSave</actualResult>
        </assertContains>
        <!-- Add Block to CMS Page -->
        <comment userInput="Add Block to CMS Page" stepKey="commentAddBlockToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSectionActionGroup" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageActionGroup" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelActionGroup" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGridActionGroup" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsActionGroup" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <comment userInput="Validate CMS Page Stage" stepKey="commentValidateCMSPageStage"/>
        <seeElement selector="{{HtmlOnStorefront.base('1')}}" stepKey="seeHtmlBaseCMSPageStage"/>
        <seeElement selector="{{HtmlOnStorefront.html('1', PageBuilderHtmlPropertyButton.selector)}}" stepKey="seeHtmlCMSPageStage"/>
        <executeJS function="return document.querySelectorAll('{{HtmlOnStage.baseCSS}}')[0].innerText;" stepKey="actualTextFromHtmlCodeCMSPageStage"/>
        <assertContains stepKey="assertWidgetOnStageCMSPageStage">
            <expectedResult type="string">{{_ENV.MAGENTO_BASE_URL}}$$createCMSPage.identifier$$</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeCMSPageStage</actualResult>
        </assertContains>
        <assertContains stepKey="assertImageOnStageCMSPageStage">
            <expectedResult type="string">{{ImageUpload3.value}}</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeCMSPageStage</actualResult>
        </assertContains>
        <assertContains stepKey="assertVariableOnStageCMSPageStage">
            <expectedResult type="string">{{_ENV.MAGENTO_BASE_URL}}</expectedResult>
            <actualResult type="variable">actualTextFromHtmlCodeCMSPageStage</actualResult>
        </assertContains>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <comment userInput="Validate CMS Page Storefront" stepKey="commentValidateCMSPageStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{HtmlOnStorefront.base('1')}}" stepKey="seeHtmlBaseCMSPageStorefront"/>
        <seeElement selector="{{HtmlOnStorefront.html('1', PageBuilderHtmlPropertyButton.selectorOnFrontend)}}" stepKey="seeRenderedHtmlCMSPageStorefront"/>
        <click selector="{{HtmlOnStorefront.html('1', PageBuilderHtmlPropertyButton.selectorOnFrontend)}}" stepKey="clickRenderedHtmlButtonCMSPageStorefront"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurCMSPageStorefront"/>
        <seeCurrentUrlEquals url="{{PageBuilderHtmlPropertyButton.url}}" stepKey="seeThatUrlIsChangedToHtmlLinkUrl"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront2">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{HtmlOnStorefront.widgetLink('1', _ENV.MAGENTO_BASE_URL, $$createCMSPage.identifier$$)}}" stepKey="seeWidgetStorefront"/>
        <seeElement selector="{{StorefrontCMSPageSection.imageSource(ImageUpload3.fileName)}}" stepKey="seeMediaSourceStorefront"/>
        <executeJS function="return document.querySelectorAll('{{HtmlOnStorefront.baseCSS}}')[0].innerText;" stepKey="actualTextStorefront"/>
        <assertContains stepKey="assertVariableStorefront">
            <expectedResult type="string">{{_ENV.MAGENTO_BASE_URL}}</expectedResult>
            <actualResult type="variable">actualTextStorefront</actualResult>
        </assertContains>
        <!-- Click Page Link Widget Storefront -->
        <comment userInput="Click Page Link Widget Storefront" stepKey="clickClickPageLinkWidgetStorefront"/>
        <click selector="{{HtmlOnStorefront.widgetLink('1', _ENV.MAGENTO_BASE_URL, $$createCMSPage.identifier$$)}}" stepKey="clickWidgetStorefront"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <seeCurrentUrlEquals url="{{_ENV.MAGENTO_BASE_URL}}$$createCMSPage.identifier$$" stepKey="seeThatUrlIsChangedToPageLinkWidgetUrlStorefront"/>
    </test>
</tests>
