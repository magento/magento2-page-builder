<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ImageAddImageContentTypeToCMSPageTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Image"/>
            <title value="Add Image in PageBuilder for new CMS page and view on Storefront"/>
            <description value="A user should be able to add an image into a row."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MAGETWO-83926"/>
            <testCaseId value="MC-2694"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-image"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery">
                <argument name="enabled" value="0"/>
            </actionGroup>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder">
                <argument name="FolderName" value="Storage Root"/>
            </actionGroup>
            <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder">
                <argument name="FolderName" value="wysiwyg"/>
            </actionGroup>
            <actionGroup ref="DeleteFolderActionGroup" stepKey="deleteMediaGalleryFolder">
                <argument name="ImageFolder" value="ImageFolder"/>
            </actionGroup>
            <comment userInput="BIC workaround" stepKey="NavigateToFolder1"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="NavigateToWysiwygFolder">
                <argument name="FolderName" value="wysiwyg"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="DeleteImageFromStorage1">
                <argument name="Image" value="PageBuilderImageProperty_JPG"/>
            </actionGroup>
            <comment userInput="BIC workaround" stepKey="NavigateToFolder2"/>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="DeleteImageFromStorage2">
                <argument name="Image" value="PageBuilderImageProperty_JPG2"/>
            </actionGroup>
            <comment userInput="BIC workaround" stepKey="NavigateToFolder3"/>
            <comment userInput="BIC workaround" stepKey="DeleteImageFromStorage3"/>
            <comment userInput="BIC workaround" stepKey="NavigateToFolder4"/>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="DeleteImageFromStorage4">
                <argument name="Image" value="PageBuilderMobileImagePropertyGif"/>
            </actionGroup>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="disableOldMediaGallery">
                <argument name="enabled" value="1"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragImageIntoStage">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <waitForElement selector="[name='{{PageBuilderImageAppearance.fieldName}}']" stepKey="waitForImageAppearanceField"/>
        <dontSeeElement selector="[name='{{PageBuilderImageAppearance.fieldName}}']" stepKey="dontSeeImageAppearanceField"/>
        <grabValueFrom selector="[name='{{PageBuilderImageAppearance.fieldName}}']" stepKey="defaultAppearanceValue"/>
        <assertEquals message="pass" stepKey="assertDefaultAppearanceValue">
            <actualResult type="variable">defaultAppearanceValue</actualResult>
            <expectedResult type="string">full-width</expectedResult>
        </assertEquals>
        <!-- Upload image from local machine using image placeholder button -->
        <comment userInput="Upload image from local machine using image placeholder button" stepKey="commentUpload"/>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile1">
            <argument name="property" value="PageBuilderImageProperty_JPG"/>
        </actionGroup>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imageName(PageBuilderImageProperty_JPG.value)}}" stepKey="waitForUploadImage1"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imageSource(PageBuilderImageProperty_JPG.fileName)}}" stepKey="seeMainImageSource1"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imagePreview}}" stepKey="seeImageDisplayed1"/>
        <!-- Remove uploaded image by TrashBin icon -->
        <comment userInput="Remove uploaded image by TrashBin icon" stepKey="commentRemoveImage"/>
        <click selector="{{ImageOnConfigurationPanel.trashBinIcon}}" stepKey="removeUploadedImage1"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.placeholderContent('Image')}}" stepKey="seeImagePlaceHolderOnImage2"/>
        <!-- Upload image from local machine using image placeholder button -->
        <comment userInput="Upload image from local machine using image placeholder button" stepKey="commentUpload2"/>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
            <argument name="property" value="PageBuilderImageProperty_JPG2"/>
        </actionGroup>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imageName(PageBuilderImageProperty_JPG2.value)}}" stepKey="waitForUploadImage2"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imageSource(PageBuilderImageProperty_JPG2.fileName)}}" stepKey="seeMainImageSource2"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imagePreview}}" stepKey="seeImageDisplayed2"/>
        <!-- Overwrite uploaded image by selecting image from Media Gallery Storage -->
        <comment userInput="Overwrite uploaded image by selecting image from Media Gallery Storage" stepKey="commentOverwrite"/>
        <actionGroup ref="clickSelectFromGallerySlideOut" stepKey="clickSelectFromGallerySlideOut">
            <argument name="property" value="PageBuilderImageProperty_JPG2"/>
        </actionGroup>
        <comment userInput="BIC workaround" stepKey="clickStorageRoot"/>
        <comment userInput="BIC workaround" stepKey="waitForPageLoad"/>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolder">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="createImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="SelectImageFromMediaStorage">
            <argument name="Image" value="PageBuilderImageProperty_JPG2"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="saveImage"/>
        <!-- Validate Edit Panel 2 -->
        <comment userInput="Validate Edit Panel 2" stepKey="commentValidateEditPanel2"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.imageName(PageBuilderImageProperty_JPG2.value)}}" stepKey="seeImageNameOnPreview3"/>
        <seeElement selector="{{ImageOnConfigurationPanel.imageSource(PageBuilderImageProperty_JPG2.fileName)}}" stepKey="seeMainImageSource3"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.trashBinIcon}}" stepKey="seeTrashBinBtn"/>
        <waitForElementVisible selector="{{ImageOnConfigurationPanel.placeholderContent('Mobile Image')}}" stepKey="seeImagePlaceHolderOnMobileImage1"/>
        <!-- Fill Remaining Edit Panel -->
        <comment userInput="Fill Remaining Edit Panel" stepKey="commentEditPanel"/>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
            <argument name="property" value="PageBuilderMobileImagePropertyGif"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterLinkProperty">
            <argument name="property" value="PageBuilderImageLinkProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderImageNewTab_True"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterImageCaptionProperty">
            <argument name="property" value="PageBuilderImageCaptionProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterAltTextProperty">
            <argument name="property" value="PageBuilderImageAltTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterTitleTagProperty">
            <argument name="property" value="PageBuilderImageTitleAttributeProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <waitForElementVisible selector="{{ImageOnStorefront.imageDisplay}}" stepKey="seeMainImageDisplayed"/>
        <waitForElementVisible selector="{{ImageOnStorefront.imageSource(PageBuilderImageProperty_JPG2.fileName)}}" stepKey="seeMainImageSource4"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="assertImageHasFullWidthStyle">
            <argument name="selector" value="{{ImageOnStorefront.advancedConfigurationImagePath('1')}}"/>
            <argument name="expectedProperty" value="100%"/>
            <argument name="cssProperty" value="maxWidth"/>
        </actionGroup>
        <seeElementInDOM selector="{{ImageOnStorefront.imageLink('1', PageBuilderImageLinkProperty.value)}}" stepKey="seeImageLinkInDOM"/>
        <seeElementInDOM selector="{{ImageOnStorefront.imageLinkTarget('1', PageBuilderImageNewTab_True.stageValue)}}" stepKey="seeImageTargetInDOM"/>
        <seeElementInDOM selector="{{ImageOnStorefront.imageAltText('1', PageBuilderImageAltTextProperty.value)}}" stepKey="seeImageAltText"/>
        <seeElementInDOM selector="{{ImageOnStorefront.imageTitleAttribute('1', PageBuilderImageTitleAttributeProperty.value)}}" stepKey="seeImageAltText2"/>
        <seeElementInDOM selector="{{ImageOnStorefront.imageSource(PageBuilderMobileImagePropertyGif.fileName)}}" stepKey="seeMainImageSource5"/>
        <see userInput="{{PageBuilderImageCaptionProperty.value}}" selector="{{ImageOnStorefront.imageCaption('1')}}" stepKey="seeCaptionDisplayedOnStorefront"/>
        <dontSeeElement selector="{{ImageOnStorefront.imageElement('2')}}" stepKey="dontSeeMobileImageElement"/>
        <resizeWindow width="767" height="1024" stepKey="resizeWindowToMobile"/>
        <dontSeeElement selector="{{ImageOnStorefront.imageElement('1')}}" stepKey="dontSeeMainImageOnMobile"/>
        <seeElement selector="{{ImageOnStorefront.imageElement('2')}}" stepKey="seeMobileImageElementOnMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="assertMobileImageHasFullWidthStyle">
            <argument name="selector" value="{{ImageOnStorefront.advancedConfigurationMobileImagePath('1')}}"/>
            <argument name="expectedProperty" value="100%"/>
            <argument name="cssProperty" value="maxWidth"/>
        </actionGroup>
        <see userInput="{{PageBuilderImageCaptionProperty.value}}" selector="{{ImageOnStorefront.imageCaption('1')}}" stepKey="seeCaptionDisplayedOnStorefrontMobile"/>
        <resizeWindow width="1920" height="1080" stepKey="resizeWindowToDesktop"/>
    </test>
</tests>
