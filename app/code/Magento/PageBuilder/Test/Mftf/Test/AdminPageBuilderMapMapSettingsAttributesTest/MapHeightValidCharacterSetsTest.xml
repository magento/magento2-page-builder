<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="MapHeightValidCharacterSetsTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Map Settings Section - Map Height - Valid Character Sets"/>
            <description value="Make sure the map accepts common characters for Map Height"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-5723"/>
            <testCaseId value="MC-2921"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-mapMapSettings"/>
            <group value="pagebuilder-requiresValidMapAPIKey"/>
            <skip>
                <issueId value="MTS-657"/>
            </skip>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key ''" stepKey="setEmptyGoogleMapsAPIKey"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionMedia">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragTextIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Add Pin To Map -->
        <comment userInput="Add Pin To Map" stepKey="commentAddPinToMap"/>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLatitude">
            <argument name="property" value="PageBuilderMapLatitude_Positive39_74"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLongitude">
            <argument name="property" value="PageBuilderMapLongitude_Positive9_67"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <!-- Enter Height: 500 -->
        <comment userInput="Enter Height: 500" stepKey="commentEnterHeight"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeight">
            <argument name="property" value="PageBuilderMapHeightProperty500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Add and Edit Map 2-->
        <comment userInput="Add and Edit Map 2" stepKey="commentAddMap2"/>
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openMap2EditPanel1">
            <argument name="contentType" value="PageBuilderMapContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeight2">
            <argument name="property" value="PageBuilderMapHeight_Empty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Save Page and Set Valid API Key -->
        <comment userInput="Save Page and Set Valid API Key" stepKey="commentSavePageAndSetKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key {{googleMapsAPIKey.valid}}" stepKey="setValidGoogleMapsAPIKey"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage"/>
        <seeElement selector="{{MapOnStage.height('1'}}" stepKey="seeHeightMap1Stage"/>
        <executeJS function="return document.querySelectorAll('{{MapOnStage.baseCSS}}')[0].getBoundingClientRect().height" stepKey="actualStageMap1Height"/>
        <executeJS function="return Math.abs({$actualStageMap1Height}-{{PageBuilderMapHeightProperty500px.value}})" stepKey="actualStageMap1HeightDifference"/>
        <assertLessThanOrEqual stepKey="assertStageMap1Height">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">actualStageMap1HeightDifference</actualResult>
        </assertLessThanOrEqual>
        <seeElement selector="{{MapOnStage.noHeight('2')}}" stepKey="seeHeightMap2Stage"/>
        <executeJS function="return document.querySelectorAll('{{MapOnStage.baseCSS}}')[1].getBoundingClientRect().height" stepKey="actualStageMap2Height"/>
        <assertEquals stepKey="assertStageMap2Height">
            <expectedResult type="string">{{PageBuilderMapHeightDefaultProperty.value}}</expectedResult>
            <actualResult type="variable">actualStageMap2Height</actualResult>
        </assertEquals>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openMap1EditPanel2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateHeight1">
            <argument name="property" value="PageBuilderMapHeightProperty500px"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openMap2EditPanel2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateHeight2">
            <argument name="property" value="PageBuilderMapHeight_Empty"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <seeElement selector="{{MapOnStorefront.height('1', PageBuilderMapHeightProperty500px.value)}}" stepKey="seeHeightMap1Storefront"/>
        <executeJS function="return document.querySelectorAll('{{MapOnStage.baseCSS}}')[0].getBoundingClientRect().height" stepKey="actualStorefrontMap1Height"/>
        <executeJS function="return Math.abs({$actualStorefrontMap1Height}-{{PageBuilderMapHeightProperty500px.value}})" stepKey="actualStorefrontMap1HeightDifference"/>
        <assertLessThanOrEqual stepKey="assertStorefrontMap1Height">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">actualStorefrontMap1HeightDifference</actualResult>
        </assertLessThanOrEqual>
        <seeElement selector="{{MapOnStorefront.noHeight('2')}}" stepKey="seeHeightMap2Storefront"/>
        <executeJS function="return document.querySelectorAll('{{MapOnStage.baseCSS}}')[1].getBoundingClientRect().height" stepKey="actualStorefrontMap2Height"/>
        <executeJS function="return Math.abs({$actualStorefrontMap2Height}-{{PageBuilderMapHeightDefaultProperty.value}})" stepKey="actualStorefrontMap2HeightDifference"/>
        <assertLessThanOrEqual stepKey="assertStorefrontMap2Height">
            <expectedResult type="int">0</expectedResult>
            <actualResult type="variable">actualStorefrontMap2HeightDifference</actualResult>
        </assertLessThanOrEqual>
    </test>
</tests>
