<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ButtonGroupValidateSameSizeForPrimaryButtonsInColumnResizingTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Buttons"/>
            <title value="Button Group - Validate Same Size Works For Primary Buttons When Resizing Columns"/>
            <description value="Validate that when buttons are added to Columns and same size is enabled, resizing columns will also resize the buttons and the buttons do not stretch outside the column."/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-961"/>
            <testCaseId value="MC-3715"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
            <group value="pagebuilder-buttonGroup"/>
            <group value="pagebuilder-column"/>
            <group value="pagebuilder-columnResize"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToContentCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeTab"/>
        </after>
        <!-- Add Button Group To Column -->
        <comment userInput="Add Button Group To Column" stepKey="commentAddButtons"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderColumnGroupContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragButtonsOntoColumn">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenu" stepKey="unFocusOptionMenu">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <!-- Enable Same Size -->
        <comment userInput="Enable Same Size" stepKey="commentEditPanel1"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enableSameSize">
            <argument name="property" value="PageBuilderButtonGroupSameSize_Enabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Edit Button 1 -->
        <comment userInput="Edit Button 1" stepKey="commentEditButton1"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage1">
            <argument name="section" value="ButtonItemOnStage"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="fillButtonText1">
            <argument name="property" value="PageBuilderButtonItemText_First"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="fillButtonType1">
            <argument name="property" value="PageBuilderButtonItemType_Primary"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Edit Button 2 -->
        <comment userInput="Edit Button 2" stepKey="commentEditButton2"/>
        <actionGroup ref="duplicateSmallContentType" stepKey="duplicateButton2">
            <argument name="section" value="ButtonItemOnStage"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButton2">
            <argument name="text" value="PageBuilderButtonItemText_CommonCharacters"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Validate Stage: Initial -->
        <comment userInput="Validate Stage: Initial" stepKey="commentValidateStage1"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage1">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnBackend.columnX('1')}}')).width)" stepKey="columnWidth"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStage.jsButtonSelector('1')}}).width)" stepKey="buttonWidth"/>
        <assertLessThan stepKey="assertButtonSmallerThanColumn">
            <expectedResult type="variable">$columnWidth</expectedResult>
            <actualResult type="variable">$buttonWidth</actualResult>
        </assertLessThan>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Validate Storefront: Initial -->
        <comment userInput="Validate Storefront: Initial" stepKey="commentValidateStorefront1"/>
        <openNewTab stepKey="openNewTab1"/>
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="goToStorefront1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront1">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('1')}}')).width)" stepKey="columnWidthStorefront"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefront"/>
        <executeJS function="return Math.abs({$columnWidthStorefront}-{$buttonWidthStorefront})" stepKey="buttonWidthStorefrontDifference"/>
        <assertLessThanOrEqual stepKey="assertButtonSmallerThanColumnStorefront">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">$buttonWidthStorefrontDifference</actualResult>
        </assertLessThanOrEqual>
        <!-- Validate Storefront Mobile: Initial -->
        <comment userInput="Validate Storefront Mobile: Initial" stepKey="commentValidateStorefrontMobile1"/>
        <resizeWindow width="375" height="667" stepKey="resizeWindowToMobile1"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefrontMobile1">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('1')}}')).width)" stepKey="columnWidthStorefrontMobile"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefrontMobile"/>
        <executeJS function="return Math.abs({$columnWidthStorefrontMobile}-{$buttonWidthStorefrontMobile})" stepKey="buttonWidthMobileDifference"/>
        <assertLessThanOrEqual stepKey="assertButtonSmallerThanColumnStorefrontMobile">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">$buttonWidthMobileDifference</actualResult>
        </assertLessThanOrEqual>
        <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop1"/>
        <!-- Resize Column: Large -->
        <comment userInput="Resize Column: Large" stepKey="commentResize1"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnResizeGridLine('1')}}').clientWidth" stepKey="guideWidth"/>
        <dragAndDrop selector1="{{ColumnOnBackend.columnX('1')}} {{ColumnOnBackend.columnResizeHandle}}" selector2="{{ColumnOnBackend.columnResizeGridLine('11')}}" x="$guideWidth" stepKey="dragColumn1"/>
        <waitForPageLoad stepKey="waitForDragAndDrop"/>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnBackend.columnX('1')}}')).width)" stepKey="column1Width1"/>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnBackend.columnX('2')}}')).width)" stepKey="column2Width1"/>
        <executeJS function="return Math.round({$column1Width1}/{$column2Width1})" stepKey="columnSizeRatio"/>
        <executeJS function="return {{PageBuilderGridSize.defaultGridSize}}-1" stepKey="expectedColumnSizeRatio"/>
        <assertEquals stepKey="assertColumnIsLarge">
            <expectedResult type="variable">$expectedColumnSizeRatio</expectedResult>
            <actualResult type="variable">$columnSizeRatio</actualResult>
        </assertEquals>
        <!-- Validate Stage: Large Column -->
        <comment userInput="Validate Stage: Large Column" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage2">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStage.jsButtonSelector('1')}}).width)" stepKey="buttonWidth2"/>
        <assertLessThan stepKey="assertButtonSmallerThanColumn2">
            <expectedResult type="variable">$column1Width1</expectedResult>
            <actualResult type="variable">$buttonWidth2</actualResult>
        </assertLessThan>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Validate Storefront: Large Column -->
        <comment userInput="Validate Storefront: Large Column" stepKey="commentValidateStorefront2"/>
        <switchToNextTab stepKey="switchToNextTab2"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront2">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('1')}}')).width)" stepKey="columnWidthStorefront2"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefront2"/>
        <assertLessThan stepKey="assertButtonSmallerThanColumnStorefront2">
            <expectedResult type="variable">$columnWidthStorefront2</expectedResult>
            <actualResult type="variable">$buttonWidthStorefront2</actualResult>
        </assertLessThan>
        <!-- Validate Storefront Mobile: Large Column -->
        <comment userInput="Validate Storefront Mobile: Large Column" stepKey="commentValidateStorefrontMobile2"/>
        <resizeWindow width="375" height="667" stepKey="resizeWindowToMobile2"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefrontMobile2">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('1')}}')).width)" stepKey="columnWidthStorefrontMobile2"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefrontMobile2"/>
        <executeJS function="return Math.abs({$columnWidthStorefrontMobile2}-{$buttonWidthStorefrontMobile2})" stepKey="buttonWidthMobileDifference2"/>
        <assertLessThanOrEqual stepKey="assertButtonSmallerThanColumnStorefrontMobile2">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">$buttonWidthMobileDifference2</actualResult>
        </assertLessThanOrEqual>
        <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop2"/>
        <!-- Move Buttons to Small Column -->
        <comment userInput="Move Buttons to Small Column" stepKey="moveButtons"/>
        <switchToPreviousTab stepKey="switchToPreviousTab2"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="moveContentTypeToContainer" stepKey="moveButtonsToRightColumn">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="contentTypeIndex" value="1"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <!-- Validate Stage: Small Column -->
        <comment userInput="Validate Stage: Small Column" stepKey="commentValidateStage3"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage3">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStage.jsButtonSelector('1')}}).width)" stepKey="buttonWidth3"/>
        <assertLessThan stepKey="assertButtonSmallerThanColumn3">
            <expectedResult type="variable">$column2Width1</expectedResult>
            <actualResult type="variable">$buttonWidth3</actualResult>
        </assertLessThan>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen3"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage3"/>
        <!-- Validate Storefront: Small Column -->
        <comment userInput="Validate Storefront: Small Column" stepKey="commentValidateStorefront3"/>
        <switchToNextTab stepKey="switchToNextTab3"/>
        <reloadPage stepKey="reloadPage4"/>
        <waitForPageLoad stepKey="waitForPageLoad4"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront3">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('2')}}')).width)" stepKey="columnWidthStorefront3"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefront3"/>
        <executeJS function="return Math.abs({$columnWidthStorefront3}-{$buttonWidthStorefront3})" stepKey="buttonWidthStorefrontDifference3"/>
        <assertLessThanOrEqual stepKey="assertButtonSmallerThanColumnStorefront3">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">$buttonWidthStorefrontDifference3</actualResult>
        </assertLessThanOrEqual>
        <!-- Validate Storefront Mobile: Small Column -->
        <comment userInput="Validate Storefront Mobile: Small Column" stepKey="commentValidateStorefrontMobile3"/>
        <resizeWindow width="375" height="667" stepKey="resizeWindowToMobile3"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefrontMobile3">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle(document.querySelector('{{ColumnOnFrontend.columnX('2')}}')).width)" stepKey="columnWidthStorefrontMobile3"/>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="buttonWidthStorefrontMobile3"/>
        <executeJS function="return Math.abs({$columnWidthStorefrontMobile3}-{$buttonWidthStorefrontMobile3})" stepKey="buttonWidthMobileDifference3"/>
        <assertLessThanOrEqual stepKey="assertButtonSmallerThanColumnStorefrontMobile3">
            <expectedResult type="int">2</expectedResult>
            <actualResult type="variable">$buttonWidthMobileDifference3</actualResult>
        </assertLessThanOrEqual>
        <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop3"/>
    </test>
</tests>
