<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ButtonGroupCreateNewLargestButtonWithSameSizeEnabledTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Buttons"/>
            <title value="Button Group - Create New Largest Button With Same Size Enabled"/>
            <description value="Validate that when the same size button feature is enabled, creating a new button that is the largest size will increase the size of all buttons"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-961"/>
            <testCaseId value="MC-3608"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
            <group value="pagebuilder-buttonGroup"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeTab"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <!-- Add Button Group -->
        <comment userInput="Add Button Group" stepKey="commentAddButtonGroup"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButton1">
            <argument name="text" value="PageBuilderButtonItemText_OneCharacter"/>
        </actionGroup>
        <actionGroup ref="addChildContentTypeFromOptionMenu" stepKey="addChildContentType">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButton2">
            <argument name="text" value="PageBuilderButtonItemText_TwoCharacters"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Update Edit Panel -->
        <comment userInput="Update Edit Panel" stepKey="commentUpdateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setSameSize">
            <argument name="property" value="PageBuilderButtonGroupSameSize_Enabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage: Initial -->
        <comment userInput="Validate Stage: Initial" stepKey="commentValidateStage"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStage.jsButtonSelector('1')}}).width)" stepKey="button1WidthStage1"/>
        <!-- Validate Storefront: Initial -->
        <comment userInput="Validate Storefront: Initial" stepKey="commentValidateStorefront"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="button1WidthStorefront1"/>
        <!-- Add New Longest Button -->
        <comment userInput="Add New Longest Button" stepKey="commentAddNewButton"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="addChildContentTypeFromOptionMenu" stepKey="addChildContentType2">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
        </actionGroup>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButton3">
            <argument name="text" value="PageBuilderButtonItemText_ThreeCharacters"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Validate Stage: New Longest Button -->
        <comment userInput="Validate Stage: New Longest Button" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage2">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStage3">
            <argument name="buttonGroupPage" value="ButtonGroupOnStage"/>
            <argument name="buttonItemPage" value="ButtonItemOnStage"/>
            <argument name="secondButtonIndex" value="3"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStage.jsButtonSelector('1')}}).width)" stepKey="button1WidthStage2"/>
        <assertGreaterThan stepKey="assertButtonWidthStage">
            <actualResult type="variable">button1WidthStage2</actualResult>
            <expectedResult type="variable">button1WidthStage1</expectedResult>
        </assertGreaterThan>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Validate Storefront: New Longest Button -->
        <comment userInput="Validate Storefront: New Longest Button" stepKey="commentValidateStorefront2"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront2">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
        </actionGroup>
        <actionGroup ref="validateButtonItemsSameSize" stepKey="validateButtonsSameSizeStorefront3">
            <argument name="buttonGroupPage" value="ButtonGroupOnStorefront"/>
            <argument name="buttonItemPage" value="ButtonItemOnStorefrontEmptyLink"/>
            <argument name="secondButtonIndex" value="3"/>
        </actionGroup>
        <executeJS function="return parseInt(window.getComputedStyle({{ButtonItemOnStorefrontEmptyLink.jsButtonSelector('1')}}).width)" stepKey="button1WidthStorefront2"/>
        <assertGreaterThan stepKey="assertButtonWidthStorefront">
            <actualResult type="variable">button1WidthStorefront2</actualResult>
            <expectedResult type="variable">button1WidthStorefront1</expectedResult>
        </assertGreaterThan>
    </test>
</tests>
