<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="SliderFadeCanBeInlineEditedTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Slider - Slide Items Can Be Inline Edited When Slider Has Fade Enabled"/>
            <description value="A user should be able to inline edit a slide when the slider has fade enabled"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-4156"/>
            <testCaseId value="MC-5058"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slide"/>
            <group value="pagebuilder-sliderCommon"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragSliderOntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Open Slider settings -->
        <comment userInput="Open Slider settings" stepKey="EditSlider"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusSlide"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openSliderEditPanel">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enterFade">
            <argument name="property" value="PageBuilderSliderFade_Enabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enterShowDots">
            <argument name="property" value="PageBuilderSliderShowDots_Enabled"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add second slide -->
        <comment userInput="Add second slide" stepKey="addSecondSlide"/>
        <actionGroup ref="addChildContentTypeFromOptionMenu" stepKey="addChildContentType">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Switch to Slide 2 -->
        <comment userInput="Switch to Slide 2" stepKey="commentSwitchToSlide2Stage"/>
        <click selector="{{SliderOnStage.slideNavigationDot('1', '2')}}" stepKey="clickSlide2Stage"/>
        <waitForPageLoad stepKey="waitForSlideAnimation"/>
        <click selector="{{PageBuilderStage.inlineWYSIWYGEditor(PageBuilderSlideContentType.role, '2')}}" stepKey="focusOnEditorArea"/>
        <waitForPageLoad stepKey="waitForWysiwyg"/>
        <executeJS function="return document.querySelectorAll('[data-content-type=slide]')[1].getBoundingClientRect().left" stepKey="slideLeftPosition"/>
        <executeJS function="return document.querySelectorAll('[data-content-type=slide]')[1].getBoundingClientRect().right" stepKey="slideRightPosition"/>
        <executeJS function="return document.querySelectorAll('.slider-container.content-type-container')[0].getBoundingClientRect().left" stepKey="sliderLeftPosition"/>
        <executeJS function="return document.querySelectorAll('.slider-container.content-type-container')[0].getBoundingClientRect().right" stepKey="sliderRightPosition"/>
        <assertLessThanOrEqual stepKey="assertSlideRightSideIsLessThanSliderRightSide">
            <expectedResult type="variable">sliderRightPosition</expectedResult>
            <actualResult type="variable">slideRightPosition</actualResult>
        </assertLessThanOrEqual>
        <assertGreaterThanOrEqual stepKey="assertSlideLeftSideIsGreaterThanSliderLeftSide">
            <expectedResult type="variable">sliderLeftPosition</expectedResult>
            <actualResult type="variable">slideLeftPosition</actualResult>
        </assertGreaterThanOrEqual>
        <!-- Add Content To Slide 2 -->
        <comment userInput="Add Content To Slide 2" stepKey="commentAddContentToSlide2"/>
        <actionGroup ref="inlineEditWYSIWYGFromStage" stepKey="inlineEdit">
            <argument name="contentType" value="PageBuilderSlideContentType"/>
            <argument name="content" value="{{PageBuilderSlideItemContent_Slide1.value}}"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage"/>
        <click selector="{{SliderOnStage.slideNavigationDot('1', '2')}}" stepKey="clickSlide2StageAfterSave"/>
        <waitForPageLoad stepKey="waitForSlideFadeAnimationAfterSave"/>
        <seeElement selector="{{SlideOnBackend.messageContent('2', PageBuilderSlideItemContent_Slide1.value)}}" stepKey="seeMessageContentStage"/>
    </test>
</tests>
