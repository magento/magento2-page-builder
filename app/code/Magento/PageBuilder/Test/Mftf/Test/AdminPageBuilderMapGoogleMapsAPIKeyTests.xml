<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="GoogleMapsCanSaveValidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Validate Can Save Valid Google Maps API Key"/>
            <description value="Tests that a user can save a valid Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91915"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="applyGoogleMapsAPIKey" stepKey="setGoogleMapsAPIKey">
                <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.valid}}" stepKey="seeKeyValid"/>
    </test>
    <test name="GoogleMapsCanSaveInvalidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Validate Can Save Invalid Google Maps API Key"/>
            <description value="Tests that a user can save an invalid Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91916"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="applyGoogleMapsAPIKey" stepKey="setGoogleMapsAPIKey">
                <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.invalidOneCharacter}}" stepKey="seeKeyInvalid"/>
    </test>
    <test name="GoogleMapsCanSaveEmptyAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Validate Can Save Empty Google Maps API Key"/>
            <description value="Tests that a user can save an empty Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91917"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="applyGoogleMapsAPIKey" stepKey="setGoogleMapsAPIKey">
                <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.empty}}" stepKey="seeKeyEmpty"/>
    </test>
    <test name="GoogleMapsAPIKeyFieldAppearance">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Validate Google Maps API Key Field Appearance"/>
            <description value="Tests the following for Google Maps API Key field: 1) Global config key, 2) Helper text, 3) Default Test Key button is disabled, 4) Correct Get API Key link."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91918"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Go To AdminContentManagementPage -->
        <comment userInput="Go To AdminContentManagementPage" stepKey="commentGoToPage"/>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <!-- Validate Global Scope -->
        <comment userInput="Validate Global Scope" stepKey="commentValidateGlobal"/>
        <waitForElementVisible selector="{{ContentManagementSection.ConfigurationFieldLabel(googleMapsAPIKey.section, googleMapsAPIKey.row, googleMapsAPIKey.label)}}[@data-config-scope='[GLOBAL]']" stepKey="waitForConfigurationKeyScope"/>
        <!-- Validate Helper Text -->
        <comment userInput="Validate Helper Text" stepKey="commentValidateHelperText"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyHelperText}}" stepKey="waitForHelperText"/>
        <see selector="{{ContentManagementSection.GoogleMapsAPIKeyHelperText}}" userInput="Enter API key to use the Map content type. Get API Key." stepKey="seeHelperText"/>
        <!-- Validate Test Key Button Text -->
        <comment userInput="Validate Test Key Button Text" stepKey="commentValidateTestKeyButtonText"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}" stepKey="waitForTestKeyButton"/>
        <see selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}" userInput="Test Key" stepKey="seeTestKeyButtonText"/>
        <!-- Validate Get API Key Link -->
        <comment userInput="Validate Get API Key Link" stepKey="commentValidateLink"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsGetAPIKeyLink}}" stepKey="waitForLink"/>
        <click selector="{{ContentManagementSection.GoogleMapsGetAPIKeyLink}}" stepKey="clickLink"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <seeCurrentUrlEquals url="https://developers.google.com/maps/documentation/javascript/get-api-key" stepKey="validateURL"/>
    </test>
    <test name="GoogleMapsAPIKeyTestKeyButtonValidKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Google Maps API Key Test Key Button: Valid Key"/>
            <description value="Tests that the Google Maps API Key Test Key button works with a valid key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91919"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton"/>
    </test>
    <test name="GoogleMapsAPIKeyTestKeyButtonInvalidKeys">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Google Maps API Key Test Key Button: Invalid Keys"/>
            <description value="Tests that the Google Maps API Key Test Key button works with invalid keys."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91920"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <!-- Invalid Key: One Character -->
        <comment userInput="Invalid Key: One Character" stepKey="comment1"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey1">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton1">
            <argument name="expectedResult" value="error"/>
        </actionGroup>
        <!-- Invalid Key: One Character Off Of Valid -->
        <comment userInput="Invalid Key: One Character Off Of Valid" stepKey="comment2"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey2">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacterOffOfValid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton2">
            <argument name="expectedResult" value="error"/>
        </actionGroup>
        <!-- Invalid Key: Empty -->
        <comment userInput="Invalid Key: Empty" stepKey="comment3"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey3">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled"/>
    </test>
    <test name="GoogleMapsAPIKeyTestKeyButtonChangesStateCorrectly">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Google Maps API Key Test Key Button: Change Enabled To Disabled Or Vice Versa As Expected"/>
            <description value="Tests the Google Maps API Key Test Key button state for following: 1) Valid to invalid, 2) Valid to empty, 3) Invalid to valid, 4) Invalid to empty, 5) Empty to valid, 6) Empty to invalid."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91921"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="applyGoogleMapsAPIKey" stepKey="setGoogleMapsAPIKey">
                <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey1">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled1"/>
        <!-- Valid To Invalid -->
        <comment userInput="Valid To Invalid" stepKey="comment1"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey2">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled2"/>
        <!-- Invalid To Empty -->
        <comment userInput="Invalid To Empty" stepKey="comment2"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey3">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled1"/>
        <!-- Empty To Invalid -->
        <comment userInput="Empty To Invalid" stepKey="comment3"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey4">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled3"/>
        <!-- Invalid To Valid -->
        <comment userInput="Invalid To Valid" stepKey="comment4"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey5">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled4"/>
        <!-- Valid To Empty -->
        <comment userInput="Valid To Empty" stepKey="comment5"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey6">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled2"/>
        <!-- Empty To Valid -->
        <comment userInput="Empty To Valid" stepKey="comment6"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey7">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled5"/>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.valid}}" stepKey="seeKeyValid"/>
    </test>
    <test name="GoogleMapsAPIKeyTestKeyButtonChangesMessageCorrectly">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Google Maps API Key Test Key Button: Message Changes From Valid To Invalid Or Vice Versa"/>
            <description value="Tests the Google Maps API Key Test Key button message for following: 1) Valid to valid, 2) Valid to invalid, 3) Invalid to invalid, 4) Invalid to valid."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91922"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-customBeforeAfter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="applyGoogleMapsAPIKey" stepKey="setGoogleMapsAPIKey">
                <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey1">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <!-- Valid To Valid -->
        <comment userInput="Valid To Valid" stepKey="comment1"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey2">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton1"/>
        <!-- Valid To Invalid -->
        <comment userInput="Valid To Invalid" stepKey="comment2"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey3">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton2">
            <argument name="expectedResult" value="error"/>
        </actionGroup>
        <!-- Invalid To Invalid -->
        <comment userInput="Invalid To Invalid" stepKey="comment3"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey4">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton3">
            <argument name="expectedResult" value="error"/>
        </actionGroup>
        <!-- Invalid To Valid -->
        <comment userInput="Invalid To Valid" stepKey="comment4"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey5">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton4"/>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.valid}}" stepKey="seeKeyValid"/>
    </test>
    <test name="MapInvalidAPIKeyWarningMessage">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Map - Invalid API Key Warning Message"/>
            <description value="A user should see a warning message on the configuration panel, but not on Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91906"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Edit Map Form -->
        <comment userInput="Validate Message On Edit Map Form" stepKey="commentValidateMessageOnEditMapForm"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate No Message On Stage -->
        <comment userInput="Validate No Message On Stage" stepKey="commentValidateMessageOnStage"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStage">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate No Message On Stage After Save -->
        <comment userInput="Validate No Message On Stage After Save" stepKey="commentValidateMessageOnStageAfterSave"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStageAfterSave">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Edit Map Form After Save -->
        <comment userInput="Validate Message On Edit Map Form After Save" stepKey="commentValidateMessageOnEditMapForm2"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage2"/>
        <!-- Validate No Message On Storefront After Save -->
        <comment userInput="Validate No Message On Storefront After Save" stepKey="commentValidateMessageOnStorefrontAfterSave"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
    </test>
    <test name="MapInvalidAPIKeyWarningMessageOnExistingPage">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Map - Invalid API Key Warning Message On Existing Page"/>
            <description value="A user should see a warning message on the configuration panel, but not on Stage and Storefront on existing page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91904"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMap">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate No Message On Stage -->
        <comment userInput="Validate No Message On Stage" stepKey="commentValidateMessageOnStage"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStage">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Configuration -->
        <comment userInput="Validate Message On Configuration" stepKey="commentValidateMessageOnConfiguration"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate No Message On Storefront -->
        <comment userInput="Validate No Message On Storefront" stepKey="commentValidateMessageOnStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStoreFront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
    </test>
    <test name="MapInvalidAPIKeyWarningMessageLink">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Map - Invalid API Key Warning Message Link"/>
            <description value="A user should see a warning message on the configuration panel with a link that takes you to the configuration page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91903"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Warning Message Link -->
        <comment userInput="Validate Warning Message Link" stepKey="commentValidateWarningMessageLink"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessageLink}}" stepKey="waitForWarningMessageLink"/>
        <click selector="{{AddLocationForm.warningMessageLink}}" stepKey="clickLink"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <seeInCurrentUrl url="{{AdminContentManagementPage.url}}" stepKey="validateURL"/>
        <waitForElementVisible selector="{{ContentManagementSection.PageBuilderOptions}}" stepKey="waitForAdvancedContentTools"/>
    </test>
    <test name="MapDoesNotRenderWithInvalidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Map Does Not Render With Invalid API Key"/>
            <description value="A user should not see a map rendered on the configuration panel, Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91913"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate Map Does Not Render On Stage -->
        <comment userInput="Validate Map Does Not Render On Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStage"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Map Does Not Render On Stage After Save -->
        <comment userInput="Validate Map Does Not Render On Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStageAfterSave"/>
        <!-- Validate Map Does Not Render On Storefront -->
        <comment userInput="Validate Map Does Not Render On Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="validateEmptyMapStoreFront" stepKey="validateEmptyMapStoreFront"/>
        <dontSeeElementInDOM selector="{{MapOnStorefront.errorContainer('1')}}" stepKey="seeMapErrorContainer"/>
    </test>
    <test name="MapDoesNotRenderWithInvalidAPIKeyOnExistingPage">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Map Does Not Render With Invalid API Key On Existing Page"/>
            <description value="A user should not see a map rendered on the configuration panel, Stage and Storefront on existing page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MAGETWO-91914"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Map Does Not Render On Stage -->
        <comment userInput="Validate Map Does Not Render On Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStage"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridBase}}" stepKey="waitForGrid"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="waitForGridRow"/>
        <click selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="clickGridRow"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AddLocationForm.form}}" stepKey="waitForForm"/>
        <see userInput="Add Location" selector="{{AddLocationForm.formTitle}}" stepKey="seeFormTitle"/>
        <waitForElementVisible selector="{{AddLocationForm.base}}" stepKey="waitForLocationMap"/>
        <!-- Validate Map Does Not Render On Location Form -->
        <comment userInput="Validate Map Does Not Render On Location Form" stepKey="commentValidateLocationForm"/>
        <actionGroup ref="dontSeeRenderedMapOnLocationForm" stepKey="dontSeeRenderedMapOnLocationForm"/>
        <!-- Validate Map Still Renders On Storefront -->
        <comment userInput="Validate Map Still Renders On Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <!-- Clean Cache & Validate Map Has Google Error -->
        <comment userInput="Validate Map Still Renders On Storefront" stepKey="commentValidateStorefrontAfterCacheClean"/>
        <magentoCLI command="cache:clean" stepKey="cleanCache"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="validateMapErrorMessageStorefront" stepKey="validateMapErrorMessageStorefront"/>
    </test>
    <test name="MapCannotAddNewLocationWithInvalidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Cannot Add New Location With Invalid API Key"/>
            <description value="A user should not be able to add a new location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MAGETWO-92236"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Add Location Button Disabled -->
        <comment userInput="Validate Add Location Button Disabled After Save" stepKey="commentValidateLocationButtonDisabled"/>
        <waitForElementVisible selector="{{EditMapForm.addLocationButtonDisabled}}" stepKey="waitForAddLocationButton"/>
    </test>
    <test name="MapCanEditLocationWithInvalidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Can Edit Location With Invalid API Key"/>
            <description value="A user should be able to edit a location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MAGETWO-92237"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage1"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm1"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage1"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Verify Can Still Edit Location -->
        <comment userInput="Verify Can Still Edit Location" stepKey="commentEdit"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridBase}}" stepKey="waitForGrid"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="waitForGridRow"/>
        <click selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="clickGridRow"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AddLocationForm.form}}" stepKey="waitForForm"/>
        <see userInput="Add Location" selector="{{AddLocationForm.formTitle}}" stepKey="seeFormTitle"/>
        <waitForElementVisible selector="{{AddLocationForm.base}}" stepKey="waitForLocationMap"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName2">
            <argument name="property" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm2"/>
        <actionGroup ref="validateLocationGridData" stepKey="validateLocationGridData">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Set Valid API Key -->
        <comment userInput="Set Valid API Key" stepKey="commentValidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKeyValid"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage1"/>
        <actionGroup ref="openMapPinTooltipWindow" stepKey="openMapPinTooltipWindowStage"/>
        <waitForElementVisible selector="{{MapOnStage.locationName('1', PageBuilderMapLocationName_TestLocationEdit.value)}}" stepKey="waitForLocationNameStage"/>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="validateLocationGridData" stepKey="validateLocationGridData2">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="clickLocationGridRow" stepKey="clickLocationGridRow2">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateEditPanelField">
            <argument name="property" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="openMapPinTooltipWindow" stepKey="openMapPinTooltipWindowStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <waitForElementVisible selector="{{MapOnStorefront.locationName('1', PageBuilderMapLocationName_TestLocationEdit.value)}}" stepKey="waitForLocationNameStorefront"/>
    </test>
    <test name="MapCanDeleteLocationWithInvalidAPIKey">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Google Maps API Key"/>
            <title value="Can Delete Location With Invalid API Key"/>
            <description value="A user should be able to delete a location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MAGETWO-92238"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage1"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage1"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Verify Can Still Delete Location -->
        <comment userInput="Verify Can Still Delete Location" stepKey="commentDelete"/>
        <actionGroup ref="deleteLocationFromGrid" stepKey="deleteLocationFromGrid">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.emptyGridMessage(PageBuilderMapGrid.emptyMessage)}}" stepKey="waitForEmptyGrid1"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Set Valid API Key -->
        <comment userInput="Set Valid API Key" stepKey="commentValidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKeyValid"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage1"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPin"/>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.emptyGridMessage(PageBuilderMapGrid.emptyMessage)}}" stepKey="waitForEmptyGrid2"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="validateEmptyMapStoreFront" stepKey="validateEmptyMapStoreFront"/>
    </test>
</tests>
