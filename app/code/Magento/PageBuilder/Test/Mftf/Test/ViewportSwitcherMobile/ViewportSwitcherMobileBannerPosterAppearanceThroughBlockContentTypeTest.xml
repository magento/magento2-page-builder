<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ViewportSwitcherMobileBannerPosterAppearanceThroughBlockContentTypeTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Viewport Switcher"/>
            <title value="Mobile Viewport: Render Banner Poster Appearance Through Block Content Type"/>
            <description value="Verify that users are able to successfully render and use the banner content type poster appearance through the Block content type in the mobile viewport."/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
            <group value="pagebuilder-viewport-switcher"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
            <actionGroup ref="AdminOpenPageBuilderFromContentPreviewOverlayActionGroup" stepKey="openPageBuilderFullScreen"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport">
                <argument name="viewportButton" value="mobile"/>
                <argument name="viewportStage" value="mobile"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop"/>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToDesktopImageFolder">
                <argument name="FolderName" value="{{PageBuilderBackgroundImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteBackgroundImage">
                <argument name="Image" value="PageBuilderBackgroundImage_JPG"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteMobileBackgroundImage">
                <argument name="Image" value="PageBuilderBackgroundMobileImage_GIF"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Banner -->
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Edit Banner -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderAppearance_Poster"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="setMinHeight">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="setBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachBackgroundImage">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachBackgroundMobileImage">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setBackgroundPosition">
            <argument name="property" value="PageBuilderBackgroundPosition_Center"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundSize">
            <argument name="property" value="PageBuilderBackgroundSize_Auto"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setBackgroundAttachment">
            <argument name="property" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setBackgroundRepeat">
            <argument name="property" value="PageBuilderBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="AddTextToTinyMCEMobileFormActionGroup" stepKey="addTextToTinyMCE">
            <argument name="property" value="PageBuilderBannerMessageProperty"/>
            <argument name="section" value="BannerOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="setLink">
            <argument name="property" value="PageBuilderBannerLinkUrlPropertyValidate"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setShowButton">
            <argument name="property" value="PageBuilderBannerShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="setButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setButtonType">
            <argument name="property" value="PageBuilderBannerButtonTypeSecondaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="setShowOverlay">
            <argument name="property" value="PageBuilderBannerShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="setOverlayColor">
            <argument name="property" value="PageBuilderBannerOverlayColor_Blue_Opaque"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterAltText">
            <argument name="property" value="PageBuilderBannerAltTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterTitleAttribute">
            <argument name="property" value="PageBuilderBannerTitleAttributeProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenBeforeSave"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <actionGroup ref="AdminOpenPageBuilderFromContentPreviewOverlayActionGroup" stepKey="openPageBuilderFullScreen"/>
        <!-- Validate CMS Block Stage Mobile Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewportBlock">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <seeElement selector="{{BannerOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="seeAppearanceCMSBlockStage"/>
        <seeElement selector="{{BannerOnBackend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSBlockStage"/>
        <seeElement selector="{{BannerOnBackend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSBlockStage"/>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSBlockStage">
            <argument name="page" value="BannerOnBackend"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeMinimumHeightCMSBlockStage">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSBlockStage">
            <argument name="content" value="{{BannerOnBackend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundConfigurationWithNoImageActionGroup" stepKey="validateBackgroundAttributesCMSBlockStage">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundImageConfigurationActionGroup" stepKey="validateBackgroundImageCMSBlockStage">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <seeElement selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="seeMessageContentCMSBlockStage"/>
        <seeElementInDOM selector="{{BannerOnBackend.button('1')}}" stepKey="seeButtonInDOMCMSBlockStage"/>
        <dontSeeElement selector="{{BannerOnBackend.button('1')}}" stepKey="dontSeeButtonCMSBlockStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSBlockStage">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <moveMouseOver selector="{{BannerOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="moveMouseOverBannerCMSBlockStage"/>
        <wait time="3" stepKey="waitAfterMouseOverBannerCMSBlockStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.button('1')}}" stepKey="seeButtonOnHoverCMSBlockStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="seeButtonTextOnHoverCMSBlockStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonType('1', PageBuilderBannerButtonTypeSecondaryProperty.value)}}" stepKey="seeButtonTypeOnHoverCMSBlockStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeOverlayOnHoverCMSBlockStage">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColor_Blue_Opaque.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <executeJS function="return {{BannerOnBackend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPositionCMSBlockStage"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnBackend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPositionCMSBlockStage"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPositionCMSBlockStage}-{$overlayLeftPositionCMSBlockStage}-{{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPaddingCMSBlockStage"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAlignedCMSBlockStage">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPaddingCMSBlockStage</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnBackend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlignCMSBlockStage"/>
        <assertEquals stepKey="assertDefaultComputedTextAlignCMSBlockStage">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyLeft.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlignCMSBlockStage</actualResult>
        </assertEquals>
        <!-- Validate CMS Block Stage Desktop Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToDesktopViewportBlock">
            <argument name="viewportButton" value="desktop"/>
            <argument name="viewportStage" value="desktop"/>
        </actionGroup>
        <seeElement selector="{{BannerOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="seeAppearanceCMSBlockStageDesktop"/>
        <seeElement selector="{{BannerOnBackend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSBlockStageDesktop"/>
        <seeElement selector="{{BannerOnBackend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSBlockStageDesktop"/>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSBlockStageDesktop">
            <argument name="page" value="BannerOnBackend"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeMinimumHeightCMSBlockStageDesktop">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSBlockStageDesktop">
            <argument name="content" value="{{BannerOnBackend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundConfigurationWithNoImageActionGroup" stepKey="validateBackgroundAttributesCMSBlockStageDesktop">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundImageConfigurationActionGroup" stepKey="validateBackgroundImageCMSBlockStageDesktop">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="seeMessageContentCMSBlockStageDesktop"/>
        <seeElementInDOM selector="{{BannerOnBackend.button('1')}}" stepKey="seeButtonInDOMCMSBlockStageDesktop"/>
        <dontSeeElement selector="{{BannerOnBackend.button('1')}}" stepKey="dontSeeButtonCMSBlockStageDesktop"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSBlockStageDesktop">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <moveMouseOver selector="{{BannerOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="moveMouseOverBannerCMSBlockStageDesktop"/>
        <wait time="3" stepKey="waitAfterMouseOverBannerCMSBlockStageDesktop"/>
        <waitForElementVisible selector="{{BannerOnBackend.button('1')}}" stepKey="seeButtonOnHoverCMSBlockStageDesktop"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="seeButtonTextOnHoverCMSBlockStageDesktop"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonType('1', PageBuilderBannerButtonTypeSecondaryProperty.value)}}" stepKey="seeButtonTypeOnHoverCMSBlockStageDesktop"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeOverlayOnHoverCMSBlockStageDesktop">
            <argument name="selector" value="{{BannerOnBackend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColor_Blue_Opaque.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <executeJS function="return {{BannerOnBackend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPositionCMSBlockStageDesktop"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnBackend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPositionCMSBlockStageDesktop"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPositionCMSBlockStageDesktop}-{$overlayLeftPositionCMSBlockStageDesktop}-{{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPaddingCMSBlockStageDesktop"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAlignedCMSBlockStageDesktop">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPaddingCMSBlockStageDesktop</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnBackend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlignCMSBlockStageDesktop"/>
        <assertEquals stepKey="assertDefaultComputedTextAlignCMSBlockStageDesktop">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyLeft.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlignCMSBlockStageDesktop</actualResult>
        </assertEquals>
        <!-- Add Block to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewportPage">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGrid" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage Mobile Viewport -->
        <seeElement selector="{{BannerOnFrontend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="seeAppearanceCMSPageStage"/>
        <seeElement selector="{{BannerOnFrontend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSPageStage"/>
        <seeElement selector="{{BannerOnFrontend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSPageStage"/>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSPageStage">
            <argument name="page" value="BannerOnFrontend"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeMinimumHeightCMSPageStage">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSPageStage">
            <argument name="content" value="{{BannerOnFrontend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundConfigurationWithNoImageActionGroup" stepKey="validateBackgroundAttributesCMSPageStage">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateBackgroundImageCMSPageStage">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="seeMessageContentCMSPageStage"/>
        <seeElementInDOM selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonInDOMCMSPageStage"/>
        <dontSeeElement selector="{{BannerOnFrontend.button('1')}}" stepKey="dontSeeButtonCMSPageStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSPageStage">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <executeJS function="return {{BannerOnFrontend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPositionCMSPageStage"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnFrontend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPositionCMSPageStage"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPositionCMSPageStage}-{$overlayLeftPositionCMSPageStage}-{{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPaddingCMSPageStage"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAlignedCMSPageStage">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPaddingCMSPageStage</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnFrontend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlignCMSPageStage"/>
        <assertEquals stepKey="assertDefaultComputedTextAlignCMSPageStage">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyLeft.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlignCMSPageStage</actualResult>
        </assertEquals>

        <!-- Validate CMS Page Stage Desktop Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToDesktopViewportPage">
            <argument name="viewportButton" value="desktop"/>
            <argument name="viewportStage" value="desktop"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="seeAppearanceCMSPageStageDesktop"/>
        <seeElement selector="{{BannerOnFrontend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSPageStageDesktop"/>
        <seeElement selector="{{BannerOnFrontend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSPageStageDesktop"/>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSPageStageDesktop">
            <argument name="page" value="BannerOnFrontend"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeMinimumHeightCMSPageStageDesktop">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSPageStageDesktop">
            <argument name="content" value="{{BannerOnFrontend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundConfigurationWithNoImageActionGroup" stepKey="validateBackgroundAttributesCMSPageStageDesktop">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateBackgroundImageCMSPageStageDesktop">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="seeMessageContentCMSPageStageDesktop"/>
        <seeElementInDOM selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonInDOMCMSPageStageDesktop"/>
        <dontSeeElement selector="{{BannerOnFrontend.button('1')}}" stepKey="dontSeeButtonCMSPageStageDesktop"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSPageStageDesktop">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <executeJS function="return {{BannerOnFrontend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPositionCMSPageStageDesktop"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnFrontend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPositionCMSPageStageDesktop"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPositionCMSPageStageDesktop}-{$overlayLeftPositionCMSPageStageDesktop}-{{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPaddingCMSPageStageDesktop"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAlignedCMSPageStageDesktop">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPaddingCMSPageStageDesktop</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnFrontend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlignCMSPageStageDesktop"/>
        <assertEquals stepKey="assertDefaultComputedTextAlignCMSPageStageDesktop">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyLeft.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlignCMSPageStageDesktop</actualResult>
        </assertEquals>

        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate CMS Page Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStoreFront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="seeAppearanceCMSPageStorefront"/>
        <seeElement selector="{{BannerOnFrontend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSPageStorefront"/>
        <seeElement selector="{{BannerOnFrontend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSPageStorefront"/>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSPageStorefront">
            <argument name="page" value="BannerOnFrontend"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeMinimumHeightCMSPageStorefront">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSPageStorefront">
            <argument name="content" value="{{BannerOnFrontend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_300px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="ValidateBackgroundConfigurationWithNoImageActionGroup" stepKey="validateBackgroundAttributesCMSPageStorefront">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundColor" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            <argument name="backgroundPosition" value="PageBuilderBackgroundPosition_Center"/>
            <argument name="backgroundSize" value="PageBuilderBackgroundSize_Auto"/>
            <argument name="backgroundRepeat" value="PageBuilderBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateBackgroundImageCMSPageStorefront">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="seeMessageContentCMSPageStorefront"/>
        <seeElementInDOM selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonInDOMCMSPageStorefront"/>
        <dontSeeElement selector="{{BannerOnFrontend.button('1')}}" stepKey="dontSeeButtonCMSPageStorefront"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSPageStorefront">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <moveMouseOver selector="{{BannerOnFrontend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="moveMouseOverBannerCMSPageStorefront"/>
        <wait time="3" stepKey="waitAfterMouseOverBannerCMSPageStorefront"/>
        <waitForElementVisible selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonOnHoverCMSPageStorefront"/>
        <waitForElementVisible selector="{{BannerOnFrontend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="seeButtonTextOnHoverCMSPageStorefront"/>
        <waitForElementVisible selector="{{BannerOnFrontend.buttonType('1', PageBuilderBannerButtonTypeSecondaryProperty.value)}}" stepKey="seeButtonTypeOnHoverCMSPageStorefront"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeOverlayOnHoverCMSPageStorefront">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColor_Blue_Opaque.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <executeJS function="return {{BannerOnFrontend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPositionCMSPageStorefront"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnFrontend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPositionCMSPageStorefront"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPositionCMSPageStorefront}-{$overlayLeftPositionCMSPageStorefront}-{{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPaddingCMSPageStorefront"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAlignedCMSPageStorefront">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPaddingCMSPageStorefront</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnFrontend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlignCMSPageStorefront"/>
        <assertEquals stepKey="assertDefaultComputedTextAlignCMSPageStorefront">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyStart.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlignCMSPageStorefront</actualResult>
        </assertEquals>
        <!-- Validate Banner Link -->
        <click selector="{{BannerOnFrontend.linkUrl('1', PageBuilderBannerLinkUrlPropertyValidate.value)}}" stepKey="clickLinkUrlCMSPageStorefront"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurCMSPageStorefront"/>
        <seeCurrentUrlEquals url="{{PageBuilderBannerLinkUrlPropertyValidate.value}}" stepKey="seeThatUrlIsChangedToButtonUrlCMSPageStorefront"/>
        <!-- Validate CMS Page Storefront Mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStoreFrontMobile">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateOverlayPositionPoster" stepKey="validateOverlayPositionCMSPageStorefrontMobile">
            <argument name="page" value="BannerOnFrontend"/>
        </actionGroup>
        <actionGroup ref="validateContentTypeHeightEqualToMinHeightPlusPaddingAndBorder" stepKey="validateHeightCMSPageStorefrontMobile">
            <argument name="content" value="{{BannerOnFrontend.wrapperCSS}}"/>
            <argument name="minHeight" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
        </actionGroup>
        <actionGroup ref="validateBackgroundImageContainer" stepKey="validateBackgroundImageCMSPageStorefrontMobile">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="backgroundImage" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <seeElement selector="{{BannerOnFrontend.bannerAltText('1', PageBuilderBannerAltTextProperty.value)}}" stepKey="seeBannerAltTextCMSPageStorefrontMobile"/>
        <seeElement selector="{{BannerOnFrontend.bannerTitleAttribute('1', PageBuilderBannerTitleAttributeProperty.value)}}" stepKey="seeBannerTitleAttributeCMSPageStorefrontMobile"/>
        <seeElementInDOM selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonInDOMCMSPageStorefrontMobile"/>
        <dontSeeElement selector="{{BannerOnFrontend.button('1')}}" stepKey="dontSeeButtonCMSPageStorefrontMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeTransparentOverlayCMSPageStorefrontMobile">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColorDefaultProperty.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <moveMouseOver selector="{{BannerOnFrontend.base('1')}}" stepKey="moveMouseOverBannerCMSPageStorefrontMobile"/>
        <wait time="3" stepKey="waitAfterMouseOverBannerCMSPageStorefrontMobile"/>
        <waitForElementVisible selector="{{BannerOnFrontend.button('1')}}" stepKey="seeButtonOnHoverCMSPageStorefrontMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeOverlayOnHoverCMSPageStorefrontMobile">
            <argument name="selector" value="{{BannerOnFrontend.overlay('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBannerOverlayColor_Blue_Opaque.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Validate Banner Link Mobile -->
        <click selector="{{BannerOnFrontend.linkUrl('1', PageBuilderBannerLinkUrlPropertyValidate.value)}}" stepKey="clickLinkUrlCMSPageStorefrontMobile"/>
        <wait time="3" stepKey="waitArbitraryTimeForPotentialNavigationToOccurCMSPageStorefrontMobile"/>
        <seeCurrentUrlEquals url="{{PageBuilderBannerLinkUrlPropertyValidate.value}}" stepKey="seeThatUrlIsChangedToButtonUrlCMSPageStorefrontMobile"/>
    </test>
</tests>
