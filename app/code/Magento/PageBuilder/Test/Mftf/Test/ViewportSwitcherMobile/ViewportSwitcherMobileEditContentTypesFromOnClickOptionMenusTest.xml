<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ViewportSwitcherMobileEditContentTypesFromOnClickOptionMenusTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Viewport Switcher"/>
            <title value="Mobile Viewport: Verify That User Can Edit Content Types From On-Click Option Menus"/>
            <description value="This test is intended to ensure that users can edit content types from the on-click option menus within the PageBuilder stage for Product Description on mobile viewport."/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slide"/>
            <group value="pagebuilder-edit"/>
            <group value="pagebuilder-catalog-product"/>
            <group value="pagebuilder-viewport-switcher"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createPreReqCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedProductEditPageActionGroup" stepKey="navigateToCreatedProductEditPage">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>
            <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
            <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport">
                <argument name="viewportButton" value="mobile"/>
                <argument name="viewportStage" value="mobile"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1920" height="1080" stepKey="resizeWindowToDesktop"/>
            <deleteData createDataKey="createProduct" stepKey="deleteCreatedProduct"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="deleteCreatedCategory"/>
            <actionGroup ref="NavigateToAndResetProductGridToDefaultViewActionGroup" stepKey="NavigateToAndResetProductGridToDefaultView"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Add Slider -->
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragSliderToRow">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Edit Slide Item -->
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuForSlide">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColorSlide1">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditFormForSlide"/>
        <!-- Validate Stage -->
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorSlideStage">
            <argument name="selector" value="{{SlideOnBackend.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Plaintext_Green.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Save Product -->
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>
        <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription"/>
        <!-- Validate Stage After Save Desktop Viewport -->
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorSlideStageAfterSave">
            <argument name="selector" value="{{SlideOnBackend.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Plaintext_Green.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuForSlideAfterSave">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeBackgroundColorOnEditPanel">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <!-- Validate Stage After Save Mobile Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewportAfterSave">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorSlideStageAfterSave2">
            <argument name="selector" value="{{SlideOnBackend.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Plaintext_Green.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Validate Edit Panel After Save -->
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuForSlideAfterSave2">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeBackgroundColorOnEditPanel2">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings2"/>
        <!-- Navigate To Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToProductStorefront">
            <argument name="page" value="$$createProduct.name$$.html"/>
        </actionGroup>
        <scrollTo selector="{{StorefrontProductInfoMainSection.productDescription}}" stepKey="scrollToProductDescription"/>
        <!-- Validate Storefront Desktop -->
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorSlideStorefront">
            <argument name="selector" value="{{SlideOnFrontend.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Plaintext_Green.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Validate Storefront Mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorSlideStorefront2">
            <argument name="selector" value="{{SlideOnFrontend.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Plaintext_Green.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
    </test>
</tests>
