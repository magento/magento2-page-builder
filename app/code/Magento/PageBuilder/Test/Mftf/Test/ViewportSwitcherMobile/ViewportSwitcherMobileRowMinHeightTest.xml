<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ViewportSwitcherMobileRowMinHeightTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Viewport Switcher"/>
            <title value="Mobile Viewport: Verify Row Minimum Height Works As Expected Between Mobile And Desktop"/>
            <description value="Verify Row's minimum height behaves as expected when desktop is set and mobile is empty, when desktop is set and mobile is set to calculated value, and when desktop is empty and mobile is set through Block content type."/>
            <severity value="BLOCKER"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-cms-block"/>
            <group value="pagebuilder-viewport-switcher"/>
            <group value="pagebuilder-row"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
            <actionGroup ref="AdminOpenPageBuilderFromContentPreviewOverlayActionGroup" stepKey="openPageBuilderFullScreen"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1920" height="1080" stepKey="resizeWindowToDesktop"/>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingProperty0"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>

        <!-- Duplicate Content Type -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>

        <!-- Row 1: Desktop Min Height = 500px -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeight500px1">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="ValidateMobileIconTooltipNotVisibleInEditFormActionGroup" stepKey="verifyNoMobileIconTooltip">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Row 1: Mobile Empty Min Height -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport1">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="ValidateMobileIconTooltipInContentTypeEditFormActionGroup" stepKey="verifyMobileIconTooltip">
            <argument name="property" value="PageBuilderMinHeightProperty_Empty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateEmptyHeightField">
            <argument name="property" value="PageBuilderMinHeightProperty_Empty"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings1"/>

        <!-- Row 2: Desktop Min Height = 500px -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToDesktopViewport1">
            <argument name="viewportButton" value="desktop"/>
            <argument name="viewportStage" value="desktop"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeight500px2">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Row 2: Mobile Min Height = 100vh - 200px -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport2">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel4">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightCalculation">
            <argument name="property" value="PageBuilderMinHeightProperty_100vh_Minus_200px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>

        <!-- Row 3: Desktop Empty Min Height -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToDesktopViewport2">
            <argument name="viewportButton" value="desktop"/>
            <argument name="viewportStage" value="desktop"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel5">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateEmptyHeightField2">
            <argument name="property" value="PageBuilderMinHeightProperty_Empty"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings2"/>
        <!-- Row 3: Mobile Min Height = 200px -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport3">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel6">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeight200px">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>

        <!-- Validate CMS Block Stage Desktop Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToDesktopViewport3">
            <argument name="viewportButton" value="desktop"/>
            <argument name="viewportStage" value="desktop"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSBlockStageDesktop">
            <argument name="selector" value="{{RowOnStage.base('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('1')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightCMSBlockStageDesktop"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightCMSBlockStageDesktop">
            <actualResult type="variable">firstActualHeightCMSBlockStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightCMSBlockStageDesktop">
            <argument name="selector" value="{{RowOnStage.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightCMSBlockStageDesktop"/>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightCMSBlockStageDesktop">
            <actualResult type="variable">secondActualHeightCMSBlockStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightCMSBlockStageDesktop">
            <argument name="selector" value="{{RowOnStage.base('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_300.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightCMSBlockStageDesktop"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightCMSBlockStageDesktop">
            <actualResult type="variable">thirdActualHeightCMSBlockStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_300.value}}</expectedResult>
        </assertEquals>

        <!-- Validate CMS Block Stage Mobile Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport4">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightCMSBlockStageMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSBlockStageMobile">
            <argument name="selector" value="{{RowOnStage.base('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('1')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightCMSBlockStageMobile"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightCMSBlockStageMobile">
            <actualResult type="variable">firstActualHeightCMSBlockStageMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <executeJS function="return document.evaluate('{{RowOnStage.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightCMSBlockStageMobile"/>
        <executeJS function="return Math.abs({$viewportHeightCMSBlockStageMobile} - 200)" stepKey="expectedSecondHeightCMSBlockStageMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightCMSBlockStageMobile">
            <argument name="selector" value="{{RowOnStage.base('2')}}"/>
            <argument name="expectedProperty" value="$expectedSecondHeightCMSBlockStageMobile"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightCMSBlockStageMobile">
            <actualResult type="variable">secondActualHeightCMSBlockStageMobile</actualResult>
            <expectedResult type="variable">expectedSecondHeightCMSBlockStageMobile</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightCMSBlockStageMobile">
            <argument name="selector" value="{{RowOnStage.base('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightCMSBlockStageMobile"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightCMSBlockStageMobile">
            <actualResult type="variable">thirdActualHeightCMSBlockStageMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>

        <!-- Save CMS Block -->
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenBeforeSave"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>

        <!-- Add Block to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGrid" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsBlock"/>

        <!-- Validate CMS Page Stage Desktop Viewport -->
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSPageStageDesktop">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightCMSPageStageDesktop"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightCMSPageStageDesktop">
            <actualResult type="variable">firstActualHeightCMSPageStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightCMSPageStageDesktop">
            <argument name="selector" value="{{RowOnStorefront.base('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightCMSPageStageDesktop"/>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightCMSPageStageDesktop">
            <actualResult type="variable">secondActualHeightCMSPageStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightCMSPageStageDesktop">
            <argument name="selector" value="{{RowOnStorefront.base('4')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_0.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightCMSPageStageDesktop"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightCMSPageStageDesktop">
            <actualResult type="variable">thirdActualHeightCMSPageStageDesktop</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_0.value}}</expectedResult>
        </assertEquals>

        <!-- Validate CMS Page Stage Mobile Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport5">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightCMSPageStageMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSPageStageMobile">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightCMSPageStageMobile"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightCMSPageStageMobile">
            <actualResult type="variable">firstActualHeightCMSPageStageMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightCMSPageStageMobile"/>
        <executeJS function="return Math.abs({$viewportHeightCMSPageStageMobile} - 200)" stepKey="expectedSecondHeightCMSPageStageMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightCMSPageStageMobile">
            <argument name="selector" value="{{RowOnStorefront.base('3')}}"/>
            <argument name="expectedProperty" value="$expectedSecondHeightCMSPageStageMobile"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightCMSPageStageMobile">
            <actualResult type="variable">secondActualHeightCMSPageStageMobile</actualResult>
            <expectedResult type="variable">expectedSecondHeightCMSPageStageMobile</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightCMSPageStageMobile">
            <argument name="selector" value="{{RowOnStorefront.base('4')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightCMSPageStageMobile"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightCMSPageStageMobile">
            <actualResult type="variable">thirdActualHeightCMSPageStageMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>

        <!-- Save CMS Page -->
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>

        <!-- Validate Storefront Desktop -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightStorefront">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightStorefront"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightStorefront">
            <actualResult type="variable">firstActualHeightStorefront</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightStorefront">
            <argument name="selector" value="{{RowOnStorefront.base('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightStorefront"/>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightStorefront">
            <actualResult type="variable">secondActualHeightStorefront</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightStorefront">
            <argument name="selector" value="{{RowOnStorefront.base('4')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_0.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightStorefront"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightStorefront">
            <actualResult type="variable">thirdActualHeightStorefront</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_0.value}}</expectedResult>
        </assertEquals>

        <!-- Validate Storefront Mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightStorefrontMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightStorefrontMobile">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstActualHeightStorefrontMobile"/>
        <assertEquals stepKey="assertFirstHeightEqualsMinHeightStorefrontMobile">
            <actualResult type="variable">firstActualHeightStorefrontMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500px.intValue}}</expectedResult>
        </assertEquals>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondActualHeightStorefrontMobile"/>
        <executeJS function="return Math.abs({$viewportHeightStorefrontMobile} - 200)" stepKey="expectedSecondHeightStorefrontMobile"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondMinHeightStorefrontMobile">
            <argument name="selector" value="{{RowOnStorefront.base('3')}}"/>
            <argument name="expectedProperty" value="$expectedSecondHeightStorefrontMobile"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <assertEquals stepKey="assertSecondHeightEqualsMinHeightStorefrontMobile">
            <actualResult type="variable">secondActualHeightStorefrontMobile</actualResult>
            <expectedResult type="variable">expectedSecondHeightStorefrontMobile</expectedResult>
        </assertEquals>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdMinHeightStorefrontMobile">
            <argument name="selector" value="{{RowOnStorefront.base('4')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdActualHeightStorefrontMobile"/>
        <assertEquals stepKey="assertThirdHeightEqualsMinHeightStorefrontMobile">
            <actualResult type="variable">thirdActualHeightStorefrontMobile</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>
    </test>
</tests>
