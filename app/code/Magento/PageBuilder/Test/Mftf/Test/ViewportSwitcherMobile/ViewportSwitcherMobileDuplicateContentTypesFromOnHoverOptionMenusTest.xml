<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ViewportSwitcherMobileDuplicateContentTypesFromOnHoverOptionMenusTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Viewport Switcher"/>
            <title value="Mobile Viewport: Verify That User Can Duplicate Content Types From On-Hover Option Menus"/>
            <description value="This test is intended to ensure that users can duplicate content types from the on-hover option menus within the PageBuilder stage for Product Description on mobile viewport."/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-duplicate"/>
            <group value="pagebuilder-catalog-product"/>
            <group value="pagebuilder-viewport-switcher"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createPreReqCategory"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedProductEditPageActionGroup" stepKey="navigateToCreatedProductEditPage">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>
            <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
            <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewport">
                <argument name="viewportButton" value="mobile"/>
                <argument name="viewportStage" value="mobile"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1920" height="1080" stepKey="resizeWindowToDesktop"/>
            <deleteData createDataKey="createProduct" stepKey="deleteCreatedProduct"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="deleteCreatedCategory"/>
            <actionGroup ref="NavigateToAndResetProductGridToDefaultViewActionGroup" stepKey="NavigateToAndResetProductGridToDefaultView"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Edit Row -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuForRow">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColorRow">
            <argument name="property" value="PageBuilderBackgroundColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditFormForRow"/>
        <!-- Duplicate and Validate Stage -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateRow">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="see2RowsStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow1Stage">
            <argument name="selector" value="{{RowOnStage.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow2Stage">
            <argument name="selector" value="{{RowOnStage.backgroundPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>

        <!-- Validate Edit Panel For Duplicate -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuForRow2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBackgroundColorOnEditPanel">
            <argument name="property" value="PageBuilderBackgroundColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Save Product -->
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct"/>
        <actionGroup ref="ExpandAdminProductSectionActionGroup" stepKey="expandAdminProductSection"/>
        <actionGroup ref="openPageBuilderForAttribute" stepKey="openPageBuilderForDescription"/>

        <!-- Validate Stage After Save Desktop Viewport -->
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="see2RowsStageAfterSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow1Stage2">
            <argument name="selector" value="{{RowOnStage.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow2Stage2">
            <argument name="selector" value="{{RowOnStage.backgroundPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>

        <!-- Validate Stage After Save Mobile Viewport -->
        <actionGroup ref="AdminSwitchPageBuilderViewportActionGroup" stepKey="switchToMobileViewportAfterSave">
            <argument name="viewportButton" value="mobile"/>
            <argument name="viewportStage" value="mobile"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="see2RowsStageAfterSave2"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow1Stage3">
            <argument name="selector" value="{{RowOnStage.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow2Stage3">
            <argument name="selector" value="{{RowOnStage.backgroundPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>

        <!-- Navigate To Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToProductStorefront">
            <argument name="page" value="$$createProduct.name$$.html"/>
        </actionGroup>
        <scrollTo selector="{{StorefrontProductInfoMainSection.productDescription}}" stepKey="scrollToProductDescription"/>
        <!-- Validate Storefront Desktop -->
        <seeNumberOfElements selector="{{RowOnStorefront.allRows}}" userInput="2" stepKey="see2RowsStorefront"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow1Storefront">
            <argument name="selector" value="{{RowOnStorefront.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
       <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow2Storefront">
            <argument name="selector" value="{{RowOnStorefront.backgroundPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
        <!-- Validate Storefront Mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <seeNumberOfElements selector="{{RowOnStorefront.allRows}}" userInput="2" stepKey="see2RowsStorefront2"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow1Storefront2">
            <argument name="selector" value="{{RowOnStorefront.backgroundPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup>
       <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeBackgroundColorRow2Storefront2">
            <argument name="selector" value="{{RowOnStorefront.backgroundPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderBackgroundColor_Hex_Grey.rgb}}"/>
            <argument name="cssProperty" value="backgroundColor"/>
        </actionGroup></test>
</tests>
