<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ColumnValidateDefaultAndUpdateAdvancedConfigurationDefaultValuesTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Column"/>
            <title value="Validate Default and Update Advanced Configuration Default Values"/>
            <description value="Validate the default values and updating values for every attribute in the Advanced Configuration form and on Stage for Column."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MAGETWO-83415"/>
            <testCaseId value="MC-2746"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderColumnGroupContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDefault"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty message="Text field has text: $getBorderColor" stepKey="assertBorderColor">
            <actualResult type="variable">getBorderColor</actualResult>
        </assertEmpty>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses">
            <actualResult type="variable">getCssClasses</actualResult>
        </assertEmpty>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <!-- Check for border radius -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedBorderRadiusProperty">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <seeInField userInput="" selector="{{AdvancedForm.advancedBorderRadius}}" stepKey="assertBorderRadiusDefaultValue"/>
        <!-- Check for class field -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <!-- Check for margins & paddings -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <!-- Check border fields become enabled when changing border -->
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterAdvancedBorderProperty">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeAdvancedBorderColorPropertyIsNotDisabled">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeAdvancedBorderWidthPropertyIsNotDisabled">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <!-- Validate the default values in the fields -->
        <seeElement selector="{{AdvancedForm.advancedBorderWidthDefault}}" stepKey="assertBorderWidthDefaultValue"/>
        <!-- Add test data into form -->
        <comment userInput="I fill out Border Color into Border Color using Color Picker" stepKey="comment"/>
        <actionGroup ref="fillOutColorPicker" stepKey="fillOutColor">
            <argument name="colorCode" value="PageBuilderAdvancedBorderColorProperty_ffffff"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHexInField7">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_ffffff"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedBorderWidthProperty">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedBorderRadiusProperty">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAlignmentLeft">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMarginsAndPadding" stepKey="enterAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <!-- Save form data -->
        <actionGroup ref="saveEditPanelSettings" stepKey="saveRowEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{ColumnOnBackend.column}}" stepKey="waitForBackEndColumn"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seetextAlignStyleOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedAlignmentPropertyLeft.value}}"/>
            <argument name="cssProperty" value="textAlign"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderStyleOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderPropertyDotted.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderColorOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_ffffff.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderWidthOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderRadiusStyleOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderRadiusProperty12.value}}"/>
            <argument name="cssProperty" value="borderRadius"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnMarginStyleOnStage">
            <argument name="selector" value="{{ColumnOnBackend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="margin"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnPaddingStyleOnStage">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="padding"/>
        </actionGroup>
        <seeElement selector="{{ColumnOnBackend.cssClasses('1', '1', PageBuilderAdvancedCssClassesPropertyThreeClasses.value)}}" stepKey="seeColumnClassOnStage"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStageAfterSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seetextAlignStyleOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedAlignmentPropertyLeft.value}}"/>
            <argument name="cssProperty" value="textAlign"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderStyleOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderPropertyDotted.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderColorOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_ffffff.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderWidthOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderRadiusStyleOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderRadiusProperty12.value}}"/>
            <argument name="cssProperty" value="borderRadius"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnMarginStyleOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="margin"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnPaddingStyleOnStageAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.advancedConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="padding"/>
        </actionGroup>
        <seeElement selector="{{ColumnOnBackend.cssClasses('1', '1', PageBuilderAdvancedCssClassesPropertyThreeClasses.value)}}" stepKey="seeColumnClassOnStageAfterSave"/>
        <!-- Validate form data has been persisted in the advanced section -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openSavedEditMenuOnStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="validateTextAlignment" stepKey="seeOptionIsSelected">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <seeOptionIsSelected userInput="{{PageBuilderAdvancedBorderPropertyDotted.value}}" selector="{{AdvancedForm.advancedBorder}}" stepKey="assertBorderSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderColorProperty_ffffff.value}}" selector="{{AdvancedForm.advancedBorderColor}}" stepKey="assertBorderColorSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderWidthProperty10.value}}" selector="{{AdvancedForm.advancedBorderWidth}}" stepKey="assertBorderSizeSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderRadiusProperty12.value}}" selector="{{AdvancedForm.advancedBorderRadius}}" stepKey="assertBorderRadiusSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedCssClassesPropertyThreeClasses.value}}" selector="{{AdvancedForm.advancedCssClasses}}" stepKey="assertCSSClassesSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginTop}}" selector="{{AdvancedForm.advancedMarginTop}}" stepKey="assertMarginTopSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginRight}}" selector="{{AdvancedForm.advancedMarginRight}}" stepKey="assertMarginRightSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginLeft}}" selector="{{AdvancedForm.advancedMarginLeft}}" stepKey="assertMarginLefSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginBottom}}" selector="{{AdvancedForm.advancedMarginBottom}}" stepKey="assertMarginBottomSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingTop}}" selector="{{AdvancedForm.advancedPaddingTop}}" stepKey="assertPaddingTopSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingRight}}" selector="{{AdvancedForm.advancedPaddingRight}}" stepKey="assertPaddingRightSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingLeft}}" selector="{{AdvancedForm.advancedPaddingLeft}}" stepKey="assertPaddingLefSavedInColumn"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingBottom}}" selector="{{AdvancedForm.advancedPaddingBottom}}" stepKey="assertPaddingBottomSavedInColumn"/>
        <!-- Validate the correct styles have been applied to the front-end -->
        <amOnPage url="column{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForPageLoadStoreFront"/>
        <waitForElementVisible time="2" selector="{{ColumnOnFrontend.columnDisplay}}" stepKey="waitForFrontEndColumn"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seetextAlignStyle">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedAlignmentPropertyLeft.value}}"/>
            <argument name="cssProperty" value="textAlign"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderStyle">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderPropertyDotted.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderColor">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_ffffff.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderWidth">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnBorderRadiusStyle">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderRadiusProperty12.value}}"/>
            <argument name="cssProperty" value="borderRadius"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnMarginStyle">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="margin"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumnPaddingStyle">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedMarginsAndPaddingProperty.value}}"/>
            <argument name="cssProperty" value="padding"/>
        </actionGroup>
        <seeElement selector="{{ColumnOnFrontend.columnClass}}" stepKey="seeColumnClass"/>
    </test>
</tests>
