<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="DuplicatingColumnWillDivideSourceColumnTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Column"/>
            <title value="Duplicating a column will distribute the originals width"/>
            <description value="When duplicating a column the width of the source column should be split for the new column"/>
            <useCaseId value="MAGETWO-90754"/>
            <testCaseId value="MC-883"/>
            <severity value="MAJOR"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
            <group value="pagebuilder-columnResize"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <seeNumberOfElements selector="{{ColumnOnBackend.allColumns}}" userInput="3" stepKey="seeDuplicatedColumn"/>
        <!-- Resize first column to 4/12 -->
        <comment userInput="Grab grid guide width for 4/12" stepKey="commentRetrieveGuideWidth"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnResizeGridLine('4')}}').clientWidth" stepKey="guideWidthFirstColumn"/>
        <comment userInput="Resize first column to 4/12" stepKey="commentResizeFirstColumn"/>
        <dragAndDrop selector1="{{ColumnOnBackend.columnX('1')}} {{ColumnOnBackend.columnResizeHandle}}" selector2="{{ColumnOnBackend.columnResizeGridLine('4')}}" x="$guideWidthFirstColumn" stepKey="resizeFirstColumn"/>
        <waitForPageLoad stepKey="waitForDragAndDrop"/>
        <!-- Resize second column to 4/12 -->
        <comment userInput="Grab grid guide width for 4/12 for second column" stepKey="commentRetrieveGuideWidthForSecond"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnResizeGridLine('8')}}').clientWidth" stepKey="guideWidthSecondColumn"/>
        <comment userInput="Resize second column to 4/12" stepKey="commentResizeSecondColumn"/>
        <dragAndDrop selector1="{{ColumnOnBackend.columnX('2')}} {{ColumnOnBackend.columnResizeHandle}}" selector2="{{ColumnOnBackend.columnResizeGridLine('8')}}" x="$guideWidthSecondColumn" stepKey="resizeSecondColumn"/>
        <waitForPageLoad stepKey="waitForDragAndDrop2"/>
        <!-- Check all columns have the same width -->
        <comment userInput="Validate column widths are as expected" stepKey="commentValidateWidthsAreCorrect"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('1')}}').clientWidth" stepKey="columnOneWidth"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('2')}}').clientWidth" stepKey="columnTwoWidth"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('3')}}').clientWidth" stepKey="columnThreeWidth"/>
        <executeJS function="return Math.round({$columnOneWidth}/{$columnTwoWidth})" stepKey="columnRatio"/>
        <assertEquals stepKey="assertRatioIsCorrect">
            <expectedResult type="int">1</expectedResult>
            <actualResult type="variable">columnRatio</actualResult>
        </assertEquals>
        <executeJS function="return Math.round({$columnOneWidth}/{$columnThreeWidth})" stepKey="columnRatio2"/>
        <assertEquals stepKey="assertRatioIsCorrect2">
            <expectedResult type="int">1</expectedResult>
            <actualResult type="variable">columnRatio2</actualResult>
        </assertEquals>
        <!-- Duplicate the second column -->
        <comment userInput="Duplicate second column" stepKey="commentDuplicateSecondColumn"/>
        <actionGroup ref="duplicateContentType" stepKey="duplicateSecondColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="targetIndex" value="2"/>
        </actionGroup>
        <!-- Assert original 1st and 3rd column are unaffected -->
        <comment userInput="Assert duplication was successful" stepKey="commentAssertDuplicateSuccess"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('1')}}').clientWidth" stepKey="columnOneWidthAfterDuplicate"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('4')}}').clientWidth" stepKey="columnOriginalThreeWidthAfterDuplicate"/>
        <assertEquals stepKey="assertColumnOneWidthUnaffected">
            <expectedResult type="variable">columnOneWidth</expectedResult>
            <actualResult type="variable">columnOneWidthAfterDuplicate</actualResult>
        </assertEquals>
        <assertEquals stepKey="assertColumnThreeWidthUnaffected">
            <expectedResult type="variable">columnThreeWidth</expectedResult>
            <actualResult type="variable">columnOriginalThreeWidthAfterDuplicate</actualResult>
        </assertEquals>
        <!-- Assert source and duplicated column are the same width -->
        <comment userInput="Assert source and duplicate column as same width" stepKey="commentAssertDuplicateAndSourceWidth"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('2')}}').clientWidth" stepKey="columnTwoAfterDuplicate"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnX('3')}}').clientWidth" stepKey="columnThreeAfterDuplicate"/>
        <executeJS function="return Math.round({$columnTwoAfterDuplicate}/{$columnThreeAfterDuplicate})" stepKey="columnAfterDuplicateRatio"/>
        <assertEquals stepKey="assertDuplicatedRatioIsCorrect">
            <expectedResult type="int">1</expectedResult>
            <actualResult type="variable">columnAfterDuplicateRatio</actualResult>
        </assertEquals>
    </test>
</tests>
