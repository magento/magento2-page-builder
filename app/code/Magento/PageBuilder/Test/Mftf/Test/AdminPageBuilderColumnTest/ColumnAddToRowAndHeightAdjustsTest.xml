<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ColumnAddToRowAndHeightAdjustsTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Column"/>
            <title value="Add column into a row and row height adjusts"/>
            <description value="A user should be able to add a column group into a row."/>
            <severity value="MAJOR"/>
            <useCaseId value="MAGETWO-86953"/>
            <testCaseId value="MC-2574"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <comment userInput="Validate Initial Row Height" stepKey="commentValidateRowHeight"/>
        <actionGroup ref="validateContentTypeHeightOnStage" stepKey="assertInitialRowHeightMatchesExpected">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="index" value="1"/>
            <argument name="containerDefaultHeight" value="PageBuilderRowDefaultHeight"/>
            <argument name="expectedPaddingTop" value="PageBuilderPaddingProperty10"/>
            <argument name="expectedPaddingBottom" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <seeNumberOfElements selector="{{ColumnOnBackend.columnGroupColumns('1')}}" userInput="2" stepKey="seeElementColumn"/>
        <comment userInput="Validate Initial Column Height On Stage Matches Expected" stepKey="commentValidateColumnHeight"/>
        <actionGroup ref="validateContentTypeHeightOnStageWithoutPadding" stepKey="assertInitialColumnHeightMatchesExpected">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="index" value="1"/>
            <argument name="containerDefaultHeight" value="PageBuilderMinHeightProperty_300"/>
        </actionGroup>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderColumnContentType.role,'1')}}" stepKey="actualStageInitialColumnHeight"/>
        <comment userInput="Validate Row Height adjusts to Column Height" stepKey="commentValidateRowHeightAdjustToColumn"/>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderRowContentType.role,'1')}}" stepKey="actualStageRowHeightWithColumns"/>
        <executeJS function="return Math.round({$actualStageInitialColumnHeight}+{{PageBuilderAdvancedMarginsAndPaddingPropertyDefault.paddingTop}}+{{PageBuilderAdvancedMarginsAndPaddingPropertyDefault.paddingBottom}})" stepKey="expectedRowHeightWithPaddingAndColumns"/>
        <assertEquals stepKey="assertRowHeightAdjustsToColumnHeight">
            <expectedResult type="variable">actualStageInitialColumnHeight</expectedResult>
            <actualResult type="variable">expectedRowHeightWithPaddingAndColumns</actualResult>
        </assertEquals>
    </test>
</tests>
