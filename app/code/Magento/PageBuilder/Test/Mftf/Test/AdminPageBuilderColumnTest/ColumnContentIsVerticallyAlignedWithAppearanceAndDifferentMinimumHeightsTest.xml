<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ColumnContentIsVerticallyAlignedWithAppearanceAndDifferentMinimumHeightsTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Column"/>
            <title value="Column Content Is Vertically Aligned with Appearance and Different Minimum Heights"/>
            <description value="A user can vertically align column contents when appearance is applied."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-929"/>
            <testCaseId value="MC-2504"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Configure First Column - Vertical Align Top -->
        <comment userInput="Configure vertical align top" stepKey="commentConfigureVerticalAlignTop"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragColumnGroupToStage">
            <argument name="contentType" value="PageBuilderColumnGroupContentType"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForFirstColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceTopProperty">
            <argument name="property" value="PageBuilderColumnAppearanceProperty_Top"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty500">
            <argument name="property" value="PageBuilderMinHeightProperty_500"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmentTopProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyTop"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsFirstColumn"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragDividerToFirstColumn">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <!-- Configure Second Column - Vertical Align Center -->
        <comment userInput="Configure vertical align center" stepKey="commentConfigureVerticalAlignCenter"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForSecondColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceCenterProperty">
            <argument name="property" value="PageBuilderColumnAppearanceProperty_Center"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty300">
            <argument name="property" value="PageBuilderMinHeightProperty_300"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmenCenterProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsSecondColumn"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragDividerToSecondColumn">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <!-- Configure Third Column - Vertical Align Bottom -->
        <comment userInput="Configure vertical align bottom" stepKey="commentConfigureVerticalAlignBottom"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForThirdColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceCenterBottom">
            <argument name="property" value="PageBuilderColumnAppearanceProperty_Bottom"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty200">
            <argument name="property" value="PageBuilderMinHeightProperty_200"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmenBottomProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyBottom"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsThirdColumn"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragDividerToThirdColumn">
            <argument name="contentType" value="PageBuilderDividerContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="3"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <!-- Verify Vertical Alignment On Stage - Before Save -->
        <comment userInput="Verify vertical alignment on stage before save" stepKey="commentVerifyVerticalAlignmentOnStageBeforeSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentTop">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentCenter">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentBottom">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <!-- Verify Vertical Alignment On Stage - After Save -->
        <comment userInput="Verify vertical alignment on stage after save" stepKey="commentVerifyVerticalAlignmentOnStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentTopAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentCenterAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstColumnVerticalAlignmentBottomAfterSave">
            <argument name="selector" value="{{ColumnOnBackend.columnChildrenConfigurationPath('1', '3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <!-- Verify Vertical Alignment In Storefront -->
        <comment userInput="Verify vertical alignment in storefront" stepKey="commentVerifyVerticalAlignmentInStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumn1VerticalAlignmentTopApplied">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumn2VerticalAlignmentCenterApplied">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeColumn2VerticalAlignmentBottomApplied">
            <argument name="selector" value="{{ColumnOnFrontend.columnConfigurationPath('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
    </test>
</tests>
