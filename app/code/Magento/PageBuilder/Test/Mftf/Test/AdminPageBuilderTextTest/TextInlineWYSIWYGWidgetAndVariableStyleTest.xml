<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TextInlineWYSIWYGWidgetAndVariableStyleTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Text"/>
            <title value="Verify widget and variable placeholder styling is correct in admin and that they resolve on storefront"/>
            <description value="Verify widget and variable placeholder styling is correct in admin and that they resolve on storefront"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-4150"/>
            <testCaseId value="MC-4946"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPageB"/>
            <magentoCLI command="config:set cms/wysiwyg/editor mage/adminhtml/wysiwyg/tiny_mce/tinymce4Adapter" stepKey="enableTinyMCE4_1"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage1">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage"/>
            <deleteData createDataKey="createCMSPageB" stepKey="deletePreReqCMSPageB"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Add Text -->
        <comment userInput="Add Text" stepKey="commentAddContentType"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <!--Input variable into stage-->
        <comment userInput="Input variable into stage" stepKey="commentInputVariableIntoStage"/>
        <clickWithLeftButton x="10" y="10" selector="{{TextOnStage.tinymce('1')}}" stepKey="focusOnEditorArea1"/>
        <waitForPageLoad stepKey="waitForTextEditor1"/>
        <actionGroup ref="addVariableToTinyMCEInline" stepKey="addVariableToTinyMCE">
            <argument name="variable" value="TinyMCEVariableBaseURL"/>
        </actionGroup>
        <seeElement selector="{{TextOnStage.text('1', TinyMCEVariableBaseURL.editPanelValue)}}" stepKey="seeVariableBaseURLStage"/>
        <!--Input widget into stage-->
        <comment userInput="Input widget into stage" stepKey="commentInputWidgetIntoStage"/>
        <actionGroup ref="addPageLinkWidgetToTinyMCEInline" stepKey="addPageLinkWidgetToTinyMCE">
            <argument name="widget" value="TinyMCEWidgetCMSPageLink"/>
            <argument name="page" value="$$createCMSPageB.identifier$$"/>
        </actionGroup>
        <seeElement selector="{{TextOnStage.text('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="seeWidgetStage"/>
        <!-- Validate stage -->
        <comment userInput="Validate stage" stepKey="commentValidateStage"/>
        <executeJS function="return window.getComputedStyle(document.evaluate(&quot;{{TextOnStage.variablePlaceholder('1')}}&quot;, document.body).iterateNext()).getPropertyValue('background-color')" stepKey="getVariableStyle"/>
        <executeJS function="return window.getComputedStyle(document.evaluate(&quot;{{TextOnStage.widgetPlaceholder('1')}}&quot;, document.body).iterateNext()).getPropertyValue('background-color')" stepKey="getWidgetStyle"/>
        <assertEquals stepKey="assertWidgetPlaceholderBackgroundColorIsApplied">
            <expectedResult type="string">rgb(223, 247, 255)</expectedResult>
            <actualResult type="variable">getWidgetStyle</actualResult>
        </assertEquals>
        <assertEquals stepKey="assertVariablePlaceholderBackgroundColorIsApplied">
            <expectedResult type="string">rgb(223, 247, 255)</expectedResult>
            <actualResult type="variable">getVariableStyle</actualResult>
        </assertEquals>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate stage After Save-->
        <comment userInput="Validate stage after save" stepKey="commentValidateStageAfterSave"/>
        <waitForElement selector="{{TextOnStage.variablePlaceholder('1')}}" stepKey="waitForVariableElement"/>
        <waitForElement selector="{{TextOnStage.widgetPlaceholder('1')}}" stepKey="waitForWidgetElement"/>
        <executeJS function="return window.getComputedStyle(document.evaluate(&quot;{{TextOnStage.variablePlaceholder('1')}}&quot;, document.body).iterateNext()).getPropertyValue('background-color')" stepKey="getVariableStyleAfterSave"/>
        <executeJS function="return window.getComputedStyle(document.evaluate(&quot;{{TextOnStage.widgetPlaceholder('1')}}&quot;, document.body).iterateNext()).getPropertyValue('background-color')" stepKey="getWidgetStyleAfterSave"/>
        <assertEquals stepKey="assertWidgetPlaceholderBackgroundColorIsAppliedAfterSave">
            <expectedResult type="string">rgb(223, 247, 255)</expectedResult>
            <actualResult type="variable">getWidgetStyleAfterSave</actualResult>
        </assertEquals>
        <assertEquals stepKey="assertVariablePlaceholderBackgroundColorIsAppliedAfterSave">
            <expectedResult type="string">rgb(223, 247, 255)</expectedResult>
            <actualResult type="variable">getVariableStyleAfterSave</actualResult>
        </assertEquals>
        <!-- Verify on storefront -->
        <amOnPage url="$$createCMSPageB.identifier$$" stepKey="goToPage2URL"/>
        <grabFromCurrentUrl stepKey="grabPage2URL"/>
        <comment userInput="View on storefront" stepKey="viewOnStorefront"/>
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <seeElement selector="{{TextOnStorefront.text('1', _ENV.MAGENTO_BASE_URL)}}" stepKey="seeVariableStorefront"/>
        <seeElement selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, $$createCMSPageB.identifier$$)}}" stepKey="seeWidgetStorefront"/>
        <click selector="{{TextOnStorefront.textWidget('1', _ENV.MAGENTO_BASE_URL, $$createCMSPageB.identifier$$)}}" stepKey="clickWidgetStorefront"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <grabFromCurrentUrl stepKey="currentUrl"/>
        <assertEquals stepKey="assertUrlEquals">
            <actualResult type="variable">grabPage2URL</actualResult>
            <expectedResult type="variable">currentUrl</expectedResult>
        </assertEquals>
    </test>
</tests>
