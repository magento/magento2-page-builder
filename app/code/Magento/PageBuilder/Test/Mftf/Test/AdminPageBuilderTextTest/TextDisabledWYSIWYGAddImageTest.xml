<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TextDisabledWYSIWYGAddImageTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Text"/>
            <title value="Disabled WYSIWYG - Update Textarea With Image"/>
            <description value="Validate that textarea works for Image with WYSIWYG disabled."/>
            <severity value="AVERAGE"/>
            <useCaseId value="MC-1438"/>
            <testCaseId value="MC-3670"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <magentoCLI command="config:set cms/wysiwyg/enabled disabled" stepKey="disableWYSIWYG1"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
                <argument name="contentType" value="PageBuilderTextContentType"/>
            </actionGroup>
            <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/wysiwyg/enabled enabled" stepKey="enableWYSIWYG1"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="NavigateToFolder2">
                <argument name="FolderName" value="{{ImageFolder.name}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="DeleteImageFromStorage2">
                <argument name="Image" value="ImageUpload3"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragIntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{TextOnConfiguration.insertImageButton}}" stepKey="waitForInsertImage"/>
        <click selector="{{TextOnConfiguration.insertImageButton}}" stepKey="clickInsertImage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <click selector="{{MediaGallerySection.StorageRootArrow}}" stepKey="clickStorageRoot"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="CreateImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="attachImage1">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="assertTextareaContainsValue" stepKey="assertTextareaValueBeforeSave">
            <argument name="value" value="{{ImageUpload3.value}}"/>
            <argument name="selector" value="{{TextOnStage.textArea('1')}}"/>
        </actionGroup>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="assertTextareaContainsValue" stepKey="assertTextareaValueAfterSave">
            <argument name="value" value="{{ImageUpload3.value}}"/>
            <argument name="selector" value="{{TextOnStage.textArea('1')}}"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{TextOnStorefront.image('1', ImageUpload3.fileName)}}" stepKey="waitForImageStorefront"/>
    </test>
</tests>
