<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TextInlineWidgetEditingTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Text"/>
            <title value="Edit widget inline in WYSIWYG and see on storefront"/>
            <description value="Verify that user are able to add widget into Text Content Type and see it on storefront"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-1416"/>
            <testCaseId value="MC-3468"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <createData entity="_defaultCmsPage" stepKey="createCMSPageA"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPageB"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <magentoCLI command="config:set cms/wysiwyg/editor mage/adminhtml/wysiwyg/tiny_mce/tinymce4Adapter" stepKey="switchToTinyMCE4"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPageA" stepKey="deletePreReqCMSPageA"/>
            <deleteData createDataKey="createCMSPageB" stepKey="deletePreReqCMSPageB"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPageA$$"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection1">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragTextOntoStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <clickWithLeftButton x="10" y="10" selector="{{TextOnStage.tinymce('1')}}" stepKey="focusOnTextEditorArea"/>
        <actionGroup ref="AddPageLinkWidgetToTinyMCEWithAnchorAndTitleActionGroup" stepKey="addPageLinkWidgetToTinyMCE">
            <argument name="page" value="$$createCMSPageB.identifier$$"/>
            <argument name="anchor" value="{{TinyMCEWidgetCMSPageLinkWithAnchorAndTitle.anchorText}}"/>
            <argument name="title" value="{{TinyMCEWidgetCMSPageLinkWithAnchorAndTitle.title}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{TextOnStage.text('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="waitForWidgetStage1"/>
        <!--Verify widget edit page-->
        <comment userInput="Verify widget edit page" stepKey="commentVerifyEditWidget"/>
        <doubleClick selector="{{TextOnStage.directive('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="doubleClickOnWidgetPlaceholder"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
        <waitForElementVisible selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="waitForWidgetType"/>
        <click selector="{{WidgetSection.CancelBtnEnabled}}" stepKey="clickInsertWidget2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear5"/>
        <waitForElementNotVisible selector="{{WidgetSection.InsertWidget}}" stepKey="waitForInsertWidgetModalToClose"/>
        <!--Verify inputed widget on slideout-->
        <comment userInput="Verify inputed widget on slideout" stepKey="commentVerifyInputedWidget"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="lostFocusFromWYSIWYG"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderTextContentType"/>
        </actionGroup>
        <switchToIFrame selector="{{TextOnConfiguration.tinyMCEIFrame}}" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{TextOnConfiguration.tinyMCEWidget(TinyMCEWidgetCMSPageLink.editPanelValue, '1')}}" stepKey="waitForWidget"/>
        <switchToIFrame stepKey="exitIFrame"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Validate stage -->
        <comment userInput="Verify Widget Content Type on stage" stepKey="commentVerifyWidgetOnStage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <waitForElementVisible selector="{{TextOnStage.text('1', TinyMCEWidgetCMSPageLink.editPanelValue)}}" stepKey="waitForWidgetStage2"/>
        <!--Verify ability to double click on widget prior to focusing TinyMCE-->
        <actionGroup ref="doubleClickWidgetTinyMCE" stepKey="doubleClickWidget">
            <argument name="widget" value="TinyMCEWidgetCMSPageLink.editPanelValue"/>
        </actionGroup>
        <!-- Grab a value from the link-->
        <waitForElementVisible selector="{{WidgetSection.InputAnchorCustomText}}" stepKey="waitForInputAnchorCustomText"/>
        <grabValueFrom selector="{{WidgetSection.InputAnchorCustomText}}" stepKey="grabAnchorText"/>
        <waitForElementVisible selector="{{WidgetSection.InputAnchorCustomTitle}}" stepKey="waitForInputAnchorCustomTitle"/>
        <grabValueFrom selector="{{WidgetSection.InputAnchorCustomTitle}}" stepKey="grabTitleText"/>
        <assertEquals stepKey="assertAnchorTextCMSWidgetLink" message="pass">
            <expectedResult type="string">{{TinyMCEWidgetCMSPageLinkWithAnchorAndTitle.anchorText}}</expectedResult>
            <actualResult type="string">{$grabAnchorText}</actualResult>
        </assertEquals>
        <assertEquals stepKey="assertTitleCMSWidgetLink" message="pass">
            <expectedResult type="string">{{TinyMCEWidgetCMSPageLinkWithAnchorAndTitle.title}}</expectedResult>
            <actualResult type="string">{$grabTitleText}</actualResult>
        </assertEquals>
        <actionGroup ref="closeWidgetPanelTinyMCE" stepKey="closeWidgetPanelTinyMCE"/>
        <!-- Validate Storefront -->
        <comment userInput="Verify Widget Content Type on storefront" stepKey="commentVerifyWidgetOnStorefront"/>
        <amOnPage url="$$createCMSPageA.identifier$$" stepKey="amOnPageTestPage"/>
        <seeElement selector="div.block-cms-link a[href='{{_ENV.MAGENTO_BASE_URL}}$$createCMSPageB.identifier$$']" stepKey="waitForWidgetStorefront"/>
    </test>
</tests>
