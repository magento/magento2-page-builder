<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BannerContentVariableCanWrapTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Banner content variable value can wrap to multiple lines"/>
            <description value="A user can see a long banner content variable with no spaces can wrap to multiple lines in storefront"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-3508"/>
            <testCaseId value="MC-4141"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <magentoCLI command="config:set general/store_information/name {{TinyMCEVariableStoreName.storefrontValue}}" stepKey="setValueForStoreNameVariable"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <!-- The below value is the Jenkins default store name -->
            <magentoCLI command="config:set general/store_information/name 'Main Website Store'" stepKey="setBackToDefaultValue"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Add Column to Stage -->
        <comment userInput="Add Column to Stage" stepKey="addColumnToStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnGroupContentType"/>
        </actionGroup>
        <actionGroup ref="removeEmptyContentTypeFromStage" stepKey="removeColumn1">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Add Banner to Column -->
        <comment userInput="Add Banner to Column" stepKey="addBannerToColumn"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionElements">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <!-- Add Variable to Banner -->
        <comment userInput="Add Variable to Banner" stepKey="commentAddVariableToBanner"/>
        <click selector="{{PageBuilderStage.inlineWYSIWYGEditor(PageBuilderBannerContentType.role, '1')}}" stepKey="focusOnEditorArea"/>
        <actionGroup ref="addVariableToTinyMCEInline" stepKey="addVariableToTinyMCEInline">
            <argument name="variable" value="TinyMCEVariableStoreName"/>
        </actionGroup>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="lostFocusFromTextarea"/>
        <actionGroup ref="duplicateContentType" stepKey="duplicateColumn">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <!-- Resize Columns -->
        <comment userInput="Resize Columns" stepKey="commentResizeColumns"/>
        <executeJS function="return document.querySelector('{{ColumnOnBackend.columnResizeGridLine('1')}}').clientWidth" stepKey="guideWidth"/>
        <dragAndDrop selector1="{{ColumnOnBackend.columnX('1')}} {{ColumnOnBackend.columnResizeHandle}}" selector2="{{ColumnOnBackend.columnResizeGridLine('1')}}" x="$guideWidth" stepKey="resizeColumnToOne"/>
        <waitForPageLoad stepKey="waitForDragAndDrop"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Height of Variable in Storefront -->
        <comment userInput="Validate Height of Variable in Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Grab Height Values -->
        <comment userInput="Grab Height Values" stepKey="commentGrabHeightValues"/>
        <executeJS function="{{BannerOnFrontend.messageContentHeightJS('1', TinyMCEVariableStoreName.storefrontValue)}}" stepKey="columnOneTextHeight"/>
        <executeJS function="{{BannerOnFrontend.messageContentHeightJS('2', TinyMCEVariableStoreName.storefrontValue)}}" stepKey="columnTwoTextHeight"/>
        <assertGreaterThan stepKey="assertColumnTwoTextGreaterThanColumnOneText">
            <expectedResult type="variable">columnTwoTextHeight</expectedResult>
            <actualResult type="variable">columnOneTextHeight</actualResult>
        </assertGreaterThan>
    </test>
</tests>
