<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StoreConfigurationGoogleMapsCanSaveValidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Validate Can Save Valid Google Maps API Key"/>
            <description value="Tests that a user can save a valid Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2715"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-requiresValidMapAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key ''" stepKey="setEmptyGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.valid}}" stepKey="seeKeyValid"/>
    </test>
    <test name="StoreConfigurationGoogleMapsCanSaveInvalidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Validate Can Save Invalid Google Maps API Key"/>
            <description value="Tests that a user can save an invalid Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2509"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key ''" stepKey="setEmptyGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.invalidOneCharacter}}" stepKey="seeKeyInvalid"/>
    </test>
    <test name="StoreConfigurationGoogleMapsCanSaveEmptyAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Validate Can Save Empty Google Maps API Key"/>
            <description value="Tests that a user can save an empty Google Maps API Key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2910"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key ''" stepKey="setEmptyGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.empty}}" stepKey="seeKeyEmpty"/>
    </test>
    <test name="StoreConfigurationGoogleMapsAPIKeyFieldAppearance">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Validate Google Maps API Key Field Appearance"/>
            <description value="Tests the following for Google Maps API Key field: 1) Global config key, 2) Helper text, 3) Default Test Key button is disabled, 4) Correct Get API Key link."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2809"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Go To AdminContentManagementPage -->
        <comment userInput="Go To AdminContentManagementPage" stepKey="commentGoToPage"/>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <!-- Validate Global Scope -->
        <comment userInput="Validate Global Scope" stepKey="commentValidateGlobal"/>
        <waitForElementVisible selector="{{ContentManagementSection.ConfigurationFieldLabel(googleMapsAPIKey.section, googleMapsAPIKey.row, googleMapsAPIKey.label)}}[@data-config-scope='[GLOBAL]']" stepKey="waitForConfigurationKeyScope"/>
        <!-- Validate Helper Text -->
        <comment userInput="Validate Helper Text" stepKey="commentValidateHelperText"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyHelperText}}" stepKey="waitForHelperText"/>
        <see selector="{{ContentManagementSection.GoogleMapsAPIKeyHelperText}}" userInput="Enter API key to use the Map content type. Get API Key." stepKey="seeHelperText"/>
        <!-- Validate Test Key Button Text -->
        <comment userInput="Validate Test Key Button Text" stepKey="commentValidateTestKeyButtonText"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}" stepKey="waitForTestKeyButton"/>
        <see selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}" userInput="{{googleMapsAPIKey.keyButtonText}}" stepKey="seeTestKeyButtonText"/>
        <!-- Validate Get API Key Link -->
        <comment userInput="Validate Get API Key Link" stepKey="commentValidateLink"/>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsGetAPIKeyLink}}" stepKey="waitForLink"/>
        <click selector="{{ContentManagementSection.GoogleMapsGetAPIKeyLink}}" stepKey="clickLink"/>
        <wait time="2" stepKey="waitForTabCreation"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <seeCurrentUrlEquals url="https://developers.google.com/maps/documentation/javascript/get-api-key" stepKey="validateURL"/>
    </test>
    <test name="StoreConfigurationGoogleMapsAPIKeyTestKeyButtonValidKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Test Key Button: Valid Key"/>
            <description value="Tests that the Google Maps API Key Test Key button works with a valid key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2778"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-requiresValidMapAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton">
            <argument name="buttonText" value="{{googleMapsAPIKey.validKeyButtonText}}"/>
        </actionGroup>
    </test>
    <test name="StoreConfigurationGoogleMapsAPIKeyTestKeyButtonInvalidKeys">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Test Key Button: Invalid Keys"/>
            <description value="Tests that the Google Maps API Key Test Key button works with invalid keys."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2554"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <!-- Invalid Key: One Character -->
        <comment userInput="Invalid Key: One Character" stepKey="comment1"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey1">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton1">
            <argument name="expectedResult" value="error"/>
            <argument name="buttonText" value="{{googleMapsAPIKey.invalidKeyButtonText}}"/>
        </actionGroup>
        <!-- Invalid Key: One Character Off Of Valid -->
        <comment userInput="Invalid Key: One Character Off Of Valid" stepKey="comment2"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey2">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacterOffOfValid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton2">
            <argument name="expectedResult" value="error"/>
            <argument name="buttonText" value="{{googleMapsAPIKey.invalidKeyButtonText}}"/>
        </actionGroup>
        <!-- Invalid Key: Empty -->
        <comment userInput="Invalid Key: Empty" stepKey="comment3"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey3">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled"/>
    </test>
    <test name="StoreConfigurationGoogleMapsAPIKeyTestKeyButtonChangesStateAndMessagesCorrectly">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Store Configuration - Google Maps API Key"/>
            <title value="Test Key Button: Button Changes to Enabled or Disabled and Message Changes As Expected"/>
            <description value="Tests the Google Maps API Key Test Key button state and message for following: 1) Valid to invalid, 2) Valid to empty, 3) Invalid to valid, 4) Invalid to empty, 5) Empty to valid, 6) Empty to invalid."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2769"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-store-configuration"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
            <group value="pagebuilder-requiresValidMapAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key ''" stepKey="setEmptyGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <!-- Valid To Valid -->
        <comment userInput="Valid To Valid" stepKey="comment1"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey1">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton1">
            <argument name="buttonText" value="{{googleMapsAPIKey.validKeyButtonText}}"/>
        </actionGroup>
        <!-- Valid To Invalid -->
        <comment userInput="Valid To Invalid" stepKey="comment2"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey2">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled2"/>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton2">
            <argument name="expectedResult" value="error"/>
            <argument name="buttonText" value="{{googleMapsAPIKey.invalidKeyButtonText}}"/>
        </actionGroup>
        <!-- Invalid To Invalid -->
        <comment userInput="Invalid To Invalid" stepKey="comment3"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey3">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton3">
            <argument name="expectedResult" value="error"/>
            <argument name="buttonText" value="{{googleMapsAPIKey.invalidKeyButtonText}}"/>
        </actionGroup>
        <!-- Invalid To Empty -->
        <comment userInput="Invalid To Empty" stepKey="comment4"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey4">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled4"/>
        <!-- Empty To Invalid -->
        <comment userInput="Empty To Invalid" stepKey="comment5"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey5">
            <argument name="apiKey" value="{{googleMapsAPIKey.invalidOneCharacter}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled5"/>
        <!-- Invalid To Valid -->
        <comment userInput="Invalid To Valid" stepKey="comment6"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey6">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled6"/>
        <actionGroup ref="clickAndValidateGoogleMapsAPIKeyTestKeyButton" stepKey="clickAndValidateGoogleMapsAPIKeyTestKeyButton6">
            <argument name="buttonText" value="{{googleMapsAPIKey.validKeyButtonText}}"/>
        </actionGroup>
        <!-- Valid To Empty -->
        <comment userInput="Valid To Empty" stepKey="comment7"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey7">
            <argument name="apiKey" value="{{googleMapsAPIKey.empty}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}[disabled='disabled']" stepKey="waitForTestKeyButtonDisabled7"/>
        <!-- Empty To Valid -->
        <comment userInput="Empty To Valid" stepKey="comment8"/>
        <actionGroup ref="inputGoogleMapsAPIKey" stepKey="inputGoogleMapsAPIKey8">
            <argument name="apiKey" value="{{googleMapsAPIKey.valid}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{ContentManagementSection.GoogleMapsAPIKeyTestKeyButton}}:not([disabled])" stepKey="waitForTestKeyButtonEnabled8"/>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <see selector="{{ContentManagementSection.StoreConfigurationPageSuccessMessage}}" userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <seeInField selector="{{ContentManagementSection.GoogleMapsAPIKeyInputField}}" userInput="{{googleMapsAPIKey.valid}}" stepKey="seeKeyValid"/>
    </test>
</tests>
