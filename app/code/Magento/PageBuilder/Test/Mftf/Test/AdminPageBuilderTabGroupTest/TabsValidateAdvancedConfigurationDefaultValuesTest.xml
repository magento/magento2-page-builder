<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TabsValidateAdvancedConfigurationDefaultValuesTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Tabs"/>
            <title value="Tab Group - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Tabs."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MAGETWO-86999"/>
            <testCaseId value="MC-2551"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-tabs"/>
            <group value="pagebuilder-tabGroup"/>
            <group value="cloud"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>

        <!-- Add Tabs to Stage -->
        <comment userInput="Add Tabs to Stage" stepKey="addTabsToStage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragTabsIntoStage">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>

        <!-- Open Tabs Panel -->
        <click selector="{{TabsOnStage.tabsContainer}}" stepKey="focusTabsElement"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>

        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="validateTextAlignment" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDefault"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty message="Text field has text: $getBorderColor" stepKey="assertBorderColor">
            <actualResult type="variable">getBorderColor</actualResult>
        </assertEmpty>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty1"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{EditPanelForm.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty message="Text field has text: $getCssClasses" stepKey="assertCssClasses">
            <actualResult type="variable">getCssClasses</actualResult>
        </assertEmpty>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>

        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForDefaultBorderStyleTab">
            <argument name="selector" value="{{TabOnStage.tabHeaderItem('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderRadiusProperty0.value}}"/>
            <argument name="cssProperty" value="borderRadius"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForDefaultBorderWidthStyleTab">
            <argument name="selector" value="{{TabOnStage.tabHeaderItem('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty1.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForDefaultBorderStyleTabs">
            <argument name="selector" value="{{TabsOnStage.tabsContent}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderRadiusProperty0.value}}"/>
            <argument name="cssProperty" value="borderRadius"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForDefaultBorderWidthStyleTabs">
            <argument name="selector" value="{{TabsOnStage.tabsContent}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty1.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForDefaultMinHeightStyleTabs">
            <argument name="selector" value="{{TabsOnStage.tabsContent}}"/>
            <argument name="expectedProperty" value="{{PageBuilderTabsDefaultMinHeight.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
    </test>
</tests>
