<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="MapInvalidAPIKeyWarningMessage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Invalid API Key Warning Message"/>
            <description value="A user should see a warning message on the configuration panel, but not on Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2741"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Edit Map Form -->
        <comment userInput="Validate Message On Edit Map Form" stepKey="commentValidateMessageOnEditMapForm"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate No Message On Stage -->
        <comment userInput="Validate No Message On Stage" stepKey="commentValidateMessageOnStage"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStage">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate No Message On Stage After Save -->
        <comment userInput="Validate No Message On Stage After Save" stepKey="commentValidateMessageOnStageAfterSave"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStageAfterSave">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Edit Map Form After Save -->
        <comment userInput="Validate Message On Edit Map Form After Save" stepKey="commentValidateMessageOnEditMapForm2"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage2"/>
        <!-- Validate No Message On Storefront After Save -->
        <comment userInput="Validate No Message On Storefront After Save" stepKey="commentValidateMessageOnStorefrontAfterSave"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
    </test>
    <test name="MapInvalidAPIKeyWarningMessageOnExistingPage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Invalid API Key Warning Message On Existing Page"/>
            <description value="A user should see a warning message on the configuration panel, but not on Stage and Storefront on existing page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2497"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMap">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate No Message On Stage -->
        <comment userInput="Validate No Message On Stage" stepKey="commentValidateMessageOnStage"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStage">
            <argument name="page" value="MapOnStage"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Message On Configuration -->
        <comment userInput="Validate Message On Configuration" stepKey="commentValidateMessageOnConfiguration"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessage}}" stepKey="waitForWarningMessage"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate No Message On Storefront -->
        <comment userInput="Validate No Message On Storefront" stepKey="commentValidateMessageOnStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="dontSeeWarningMessage" stepKey="dontSeeWarningMessageOnStoreFront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
    </test>
    <test name="MapInvalidAPIKeyWarningMessageLink">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Invalid API Key Warning Message Link"/>
            <description value="A user should see a warning message on the configuration panel with a link that takes you to the configuration page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2768"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Warning Message Link -->
        <comment userInput="Validate Warning Message Link" stepKey="commentValidateWarningMessageLink"/>
        <waitForElementVisible selector="{{AddLocationForm.warningMessageLink}}" stepKey="waitForWarningMessageLink"/>
        <click selector="{{AddLocationForm.warningMessageLink}}" stepKey="clickLink"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <seeInCurrentUrl url="{{AdminContentManagementPage.url}}" stepKey="validateURL"/>
        <waitForElementVisible selector="{{ContentManagementSection.PageBuilderOptions}}" stepKey="waitForAdvancedContentTools"/>
    </test>
    <test name="MapDoesNotRenderWithInvalidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Map Does Not Render With Invalid API Key"/>
            <description value="A user should not see a map rendered on the configuration panel, Stage and Storefront."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2755"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Map Does Not Render On Stage -->
        <comment userInput="Validate Map Does Not Render On Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStage"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Map Does Not Render On Stage After Save -->
        <comment userInput="Validate Map Does Not Render On Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStageAfterSave"/>
        <!-- Validate Map Does Not Render On Storefront -->
        <comment userInput="Validate Map Does Not Render On Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="validateEmptyMapStoreFront" stepKey="validateEmptyMapStoreFront"/>
        <dontSeeElementInDOM selector="{{MapOnStorefront.errorContainer('1')}}" stepKey="seeMapErrorContainer"/>
    </test>
    <test name="MapDoesNotRenderWithInvalidAPIKeyOnExistingPage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Map Does Not Render With Invalid API Key On Existing Page"/>
            <description value="A user should not see a map rendered on the configuration panel, Stage and Storefront on existing page."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88225"/>
            <testCaseId value="MC-2536"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Map Does Not Render On Stage -->
        <comment userInput="Validate Map Does Not Render On Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateMapErrorMessageStage" stepKey="validateMapErrorMessageOnStage"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridBase}}" stepKey="waitForGrid"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="waitForGridRow"/>
        <click selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="clickGridRow"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AddLocationForm.form}}" stepKey="waitForForm"/>
        <see userInput="Add Location" selector="{{AddLocationForm.formTitle}}" stepKey="seeFormTitle"/>
        <waitForElementVisible selector="{{AddLocationForm.base}}" stepKey="waitForLocationMap"/>
        <!-- Validate Map Does Not Render On Location Form -->
        <comment userInput="Validate Map Does Not Render On Location Form" stepKey="commentValidateLocationForm"/>
        <actionGroup ref="dontSeeRenderedMapOnLocationForm" stepKey="dontSeeRenderedMapOnLocationForm"/>
        <!-- Validate Map Still Renders On Storefront -->
        <comment userInput="Validate Map Still Renders On Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <!-- Clean Cache & Validate Map Has Google Error -->
        <comment userInput="Validate Map Still Renders On Storefront" stepKey="commentValidateStorefrontAfterCacheClean"/>
        <magentoCLI command="cache:clean" stepKey="cleanCache"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="validateMapErrorMessageStorefront" stepKey="validateMapErrorMessageStorefront"/>
    </test>
    <test name="MapCannotAddNewLocationWithInvalidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Cannot Add New Location With Invalid API Key"/>
            <description value="A user should not be able to add a new location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MC-2462"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Validate Add Location Button Disabled -->
        <comment userInput="Validate Add Location Button Disabled After Save" stepKey="commentValidateLocationButtonDisabled"/>
        <waitForElementVisible selector="{{EditMapForm.addLocationButtonDisabled}}" stepKey="waitForAddLocationButton"/>
    </test>
    <test name="MapCanEditLocationWithInvalidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Can Edit Location With Invalid API Key"/>
            <description value="A user should be able to edit a location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MC-2463"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage1"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm1"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage1"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Verify Can Still Edit Location -->
        <comment userInput="Verify Can Still Edit Location" stepKey="commentEdit"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridBase}}" stepKey="waitForGrid"/>
        <waitForElementVisible selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="waitForGridRow"/>
        <click selector="{{PageBuilderDataGrid.gridRow(PageBuilderMapLocationName_TestLocation.fieldName, PageBuilderMapLocationName_TestLocation.value)}}" stepKey="clickGridRow"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AddLocationForm.form}}" stepKey="waitForForm"/>
        <see userInput="Add Location" selector="{{AddLocationForm.formTitle}}" stepKey="seeFormTitle"/>
        <waitForElementVisible selector="{{AddLocationForm.base}}" stepKey="waitForLocationMap"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName2">
            <argument name="property" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm2"/>
        <actionGroup ref="validateLocationGridData" stepKey="validateLocationGridData">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Set Valid API Key -->
        <comment userInput="Set Valid API Key" stepKey="commentValidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKeyValid"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage1"/>
        <actionGroup ref="openMapPinTooltipWindow" stepKey="openMapPinTooltipWindowStage"/>
        <waitForElementVisible selector="{{MapOnStage.locationName('1', PageBuilderMapLocationName_TestLocationEdit.value)}}" stepKey="waitForLocationNameStage"/>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="validateLocationGridData" stepKey="validateLocationGridData2">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="clickLocationGridRow" stepKey="clickLocationGridRow2">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateEditPanelField">
            <argument name="property" value="PageBuilderMapLocationName_TestLocationEdit"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="openMapPinTooltipWindow" stepKey="openMapPinTooltipWindowStorefront">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <waitForElementVisible selector="{{MapOnStorefront.locationName('1', PageBuilderMapLocationName_TestLocationEdit.value)}}" stepKey="waitForLocationNameStorefront"/>
    </test>
    <test name="MapCanDeleteLocationWithInvalidAPIKey">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps API Key - Can Delete Location With Invalid API Key"/>
            <description value="A user should be able to delete a location with an invalid API key."/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-88132"/>
            <testCaseId value="MC-2439"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsAPIKey"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKey"/>
            <closeTab stepKey="closeTab"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Page With Map -->
        <comment userInput="Save Page With Map" stepKey="commentSavePage1"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>
        <!-- Load Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="validateMapStage">
            <argument name="page" value="MapOnStorefront"/>
        </actionGroup>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <!-- Apply Invalid Google Maps API Key -->
        <comment userInput="Apply Invalid Google Maps API Key" stepKey="commentInvalidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key a" stepKey="setGoogleMapsAPIKey"/>
        <reloadPage stepKey="reloadPage1"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage1"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Verify Can Still Delete Location -->
        <comment userInput="Verify Can Still Delete Location" stepKey="commentDelete"/>
        <actionGroup ref="deleteLocationFromGrid" stepKey="deleteLocationFromGrid">
            <argument name="locationName" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.emptyGridMessage(PageBuilderMapGrid.emptyMessage)}}" stepKey="waitForEmptyGrid1"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Set Valid API Key -->
        <comment userInput="Set Valid API Key" stepKey="commentValidKey"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_api_key AIzaSyCw10cOO31cpxb2bcwnHPHKtxov8oUbxJw" stepKey="setGoogleMapsAPIKeyValid"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage1"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPin"/>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderDataGrid.emptyGridMessage(PageBuilderMapGrid.emptyMessage)}}" stepKey="waitForEmptyGrid2"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage3"/>
        <waitForPageLoad stepKey="waitForPageLoad3"/>
        <actionGroup ref="validateEmptyMapStoreFront" stepKey="validateEmptyMapStoreFront"/>
    </test>
    <test name="MapDoesNotRenderNewGoogleMapsStyleOnStorefrontUntilPageSaveOrCacheRefresh">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps Style - Map Does Not Render New Google Maps Style On Storefront Until Page Save Or Cache Refresh"/>
            <description value="A change to the Google Maps Style should not take affect on the storefront until a page save or a cache refresh"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-89028"/>
            <testCaseId value="MC-2523"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsStyle"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Add Location -->
        <comment userInput="Add Location" stepKey="commentAddLocation"/>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="clickMapToAddOrMovePin" stepKey="addMapPin"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront1">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!--Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle"/>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsStyle" stepKey="inputGoogleMapsStyle">
            <argument name="style" value="{{googleMapsStyle.validShort}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <!-- Storefront: Validate Map Style Unchanged -->
        <comment userInput="Storefront: Validate Map Style Unchanged" stepKey="commentValidate1"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)" stepKey="mapStyle1"/>
        <assertEquals stepKey="assertMapStyle1">
            <actualResult type="variable">$mapStyle1</actualResult>
            <expectedResult type="string">{{googleMapsStyle.empty}}</expectedResult>
        </assertEquals>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Storefront: Validate Map Style Changed -->
        <comment userInput="Storefront: Validate Map Style Changed" stepKey="commentValidate2"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle2"/>
        <assertEquals stepKey="assertMapStyle2">
            <actualResult type="variable">$mapStyle2</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
        <!-- Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle2"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
        <!-- Storefront: Validate Map Style Unchanged -->
        <comment userInput="Storefront: Validate Map Style Unchanged" stepKey="commentValidate3"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront4">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle3"/>
        <assertEquals stepKey="assertMapStyle3">
            <actualResult type="variable">$mapStyle3</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
        <!-- Clean Cache -->
        <comment userInput="Clean Cache" stepKey="commentCleanCache"/>
        <magentoCLI command="cache:clean" stepKey="cleanCache"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront5">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)" stepKey="mapStyle4"/>
        <assertEquals stepKey="assertMapStyle4">
            <actualResult type="variable">$mapStyle4</actualResult>
            <expectedResult type="string">{{googleMapsStyle.empty}}</expectedResult>
        </assertEquals>
    </test>
    <test name="MapRendersNewGoogleMapsStyleOnStageImmediately">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps Style - Map Renders New Google Maps Style On Stage Without Cache Refresh"/>
            <description value="A change to the Google Maps Style should immediately take affect on the stage without a cache refresh"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-89028"/>
            <testCaseId value="MC-2747"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsStyle"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupMedia">
            <argument name="group" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!--Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToAdminContentManagementPage" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsStyle" stepKey="inputGoogleMapsStyle">
            <argument name="style" value="{{googleMapsStyle.validShort}}"/>
        </actionGroup>
        <actionGroup ref="saveStoreConfiguration" stepKey="saveStoreConfiguration"/>
        <!-- Stage: Validate Map Style Changed -->
        <comment userInput="Stage: Validate Map Style Changed" stepKey="commentValidate1"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle1"/>
        <assertEquals stepKey="assertMapStyle1">
            <actualResult type="variable">$mapStyle1</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
    </test>
</tests>
