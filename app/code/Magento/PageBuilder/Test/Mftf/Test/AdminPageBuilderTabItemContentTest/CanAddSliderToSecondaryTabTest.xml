<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CanAddSliderToSecondaryTabTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Tabs"/>
            <title value="Tabs Content - Add Slider to non-default secondary Tab container and view on Admin and Storefront"/>
            <description value="As a Content Manager I want slider in non-default secondary tab to render on Admin and Storefront so that my content is viewable"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-3926"/>
            <testCaseId value="MC-4218"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-tabs-content"/>
            <group value="pagebuilder-slide"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <!-- Add Tabs to Stage -->
        <comment userInput="Add Tabs to Stage" stepKey="addTabsToStage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragTabsIntoStage">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <actionGroup ref="duplicateSmallContentType" stepKey="duplicateSmallContentType">
            <argument name="section" value="TabOnStage"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection2">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragSliderOntoTab">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
            <argument name="containerTargetType" value="PageBuilderTabContentType"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <!-- Edit First Slide -->
        <comment userInput="Edit First Slide" stepKey="EditFirstSlide"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditPanel">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideTitle1">
            <argument name="property" value="PageBuilderSlideItemSlideName_Slide1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="addTextToTinyMCE">
            <argument name="property" value="PageBuilderSlideItemContent_Slide1"/>
            <argument name="section" value="SlideOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkURL1">
            <argument name="property" value="PageBuilderSlideItemLinkURL_External"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideItemLinkNewTab_False"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="PageBuilderSlideItemShowButton_Always">
            <argument name="property" value="PageBuilderSlideItemShowButton_Always"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText1">
            <argument name="property" value="PageBuilderSlideItemButtonText_Slide1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Verify slide looks OK in tab on stage before save -->
        <comment userInput="Verify slide looks OK in tab on stage before save" stepKey="commentVerifySlideBeforeSave"/>
        <scrollTo selector="{{TabOnStage.tabHeader('1')}}" x="0" y="-100" stepKey="scrollToTab"/>
        <click selector="{{TabOnStage.tabHeader('1')}}" stepKey="switchToDefaultTab"/>
        <waitForPageLoad stepKey="waitForTabSwitch"/>
        <click selector="{{TabOnStage.tabHeader('2')}}" stepKey="switchToSecondTabOnStage"/>
        <waitForPageLoad stepKey="waitForTabSwitch2"/>
        <seeElement selector="{{SlideOnBackend.base('1')}}" stepKey="seeSliderOnOnStage"/>
        <seeElement selector="{{SlideOnBackend.messageContent('1', PageBuilderSlideItemContent_Slide1.value)}}" stepKey="seeSlide1ContentDisplayedOnStage"/>
        <seeElement selector="{{SlideOnBackend.buttonText('1', PageBuilderSlideItemButtonText_Slide1.value)}}" stepKey="seeSlide1ButtonTextDisplayedOnStage"/>
        <seeElement selector="{{SlideOnBackend.backgroundColor('1', PageBuilderBackgroundColor_Plaintext_Green.rgb)}}" stepKey="seeSlideBackgroundColorOnStage"/>
        <seeElement selector="{{SlideOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="verifySlide1HasPosterAppearanceOnStage"/>
        <!-- Verify slide looks OK in tab on stage after save -->
        <comment userInput="Verify slide looks OK in tab on stage after save" stepKey="commentVerifySlideAfterSave"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <click selector="{{TabOnStage.tabHeader('2')}}" stepKey="switchToSecondTabOnStageAgainAfterSave"/>
        <waitForPageLoad stepKey="waitForTabSwitch3"/>
        <seeElement selector="{{SlideOnBackend.base('1')}}" stepKey="seeSliderOnOnStageAgainAfterSave"/>
        <seeElement selector="{{SlideOnBackend.messageContent('1', PageBuilderSlideItemContent_Slide1.value)}}" stepKey="seeSlide1ContentDisplayedOnStageAgainAfterSave"/>
        <seeElement selector="{{SlideOnBackend.buttonText('1', PageBuilderSlideItemButtonText_Slide1.value)}}" stepKey="seeSlide1ButtonTextDisplayedOnStageAgainAfterSave"/>
        <seeElement selector="{{SlideOnBackend.backgroundColor('1', PageBuilderBackgroundColor_Plaintext_Green.rgb)}}" stepKey="seeSlideBackgroundColorOnStageAgainAfterSave"/>
        <seeElement selector="{{SlideOnBackend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="verifySlide1HasPosterAppearanceOnStageAgainAfterSave"/>
        <!-- Verify Slider in Secondary Tab on storefront -->
        <comment userInput="View Slider in secondary Tab on storefront" stepKey="viewTabOnStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <click selector="{{TabOnStorefront.tabHeader('2')}}" stepKey="switchToSecondTabOnStorefront"/>
        <waitForPageLoad stepKey="waitForPageLoadAfterClickingTabHeader"/>
        <waitForElementVisible selector="{{SlideOnFrontend.base('1')}}" stepKey="waitForSliderToBeVisible"/>
        <seeElement selector="{{SlideOnFrontend.base('1')}}" stepKey="seeSliderOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.messageContent('1', PageBuilderSlideItemContent_Slide1.value)}}" stepKey="seeSlide1ContentDisplayedOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.buttonText('1', PageBuilderSlideItemButtonText_Slide1.value)}}" stepKey="seeSlide1ButtonTextDisplayedOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.linkUrl('1', PageBuilderSlideItemLinkURL_External.value)}}" stepKey="seeSlide1LinkURLOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.backgroundColor('1', PageBuilderBackgroundColor_Plaintext_Green.rgb)}}" stepKey="seeSlideBackgroundColorOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.appearance('1', PageBuilderAppearance_Poster.value)}}" stepKey="verifySlide1HasPosterAppearanceOnStorefrontOnFrontend"/>
    </test>
</tests>
