<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TabMaintainsDefaultMinimumHeightWithContentTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Tabs"/>
            <title value="Tabs Content - Add Heading to Tabs container and verify minimum height on Admin and Storefront"/>
            <description value="As a Content Manager I want tab to be a container so that I can add any content inside the Tab, not only text"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-4112"/>
            <testCaseId value="MC-4209"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-tabs-content"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <!-- Add Tabs to Stage -->
        <comment userInput="Add Tabs to Stage" stepKey="addTabsToStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragTabsIntoStage">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <!-- Add Heading to Tab -->
        <comment userInput="Add Heading to Tab" stepKey="addHeadingToTab"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeadingOntoTab">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderTabContentType"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStage">
            <argument name="index" value="1"/>
            <argument name="headingType" value="PageBuilderHeadingTypeProperty_H1"/>
            <argument name="headingAlignment" value="PageBuilderHeadingAlignmentProperty_center"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Add Button to Tab -->
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragButtonOntoTab">
            <argument name="contentType" value="PageBuilderButtonsContentType"/>
            <argument name="containerTargetType" value="PageBuilderTabContentType"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>

        <!-- Verify on Stage -->
        <comment userInput="Verify Tab height on stage" stepKey="verifyTabOnStage"/>
        <executeJS function="return {{TabOnStage.tabContentHeightJS('0')}}" stepKey="tabContentHeightStage"/>
        <executeJS function="return {{PageBuilderTabMinimumHeightDefaultProperty.value}}" stepKey="tabExpectedHeight"/>
        <assertEquals stepKey="assertTabHeightStage">
            <expectedResult type="variable">tabExpectedHeight</expectedResult>
            <actualResult type="variable">tabContentHeightStage</actualResult>
        </assertEquals>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>

        <!-- Verify on Storefront -->
        <comment userInput="Verify Tab height on storefront" stepKey="viewTabOnStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{TabOnStorefront.tabContent('1')}}" stepKey="waitForTabContentVisible"/>
        <executeJS function="return {{TabsOnFrontend.tabsContentHeightJS('0')}}" stepKey="tabContentHeightStorefront"/>
        <assertEquals stepKey="assertTabHeightStorefrontEqualsStage">
            <expectedResult type="string">{{PageBuilderTabMinimumHeightDefaultProperty.value}}</expectedResult>
            <actualResult type="variable">tabContentHeightStorefront</actualResult>
        </assertEquals>
    </test>
</tests>
