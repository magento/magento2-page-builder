<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BannerOverlayHasConvertedBorderRadiusAppliedOnPosterAppearanceTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Overlay has converted border radius applied on poster appearance"/>
            <description value="As a content creator I want border radius of banner overlay with poster appearance to have a different border radius than its parent wrapper so that it aligns snugly alongside it without exposing any gaps"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-3870"/>
            <testCaseId value="MC-5237"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeTab"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Open edit panel and apply border radius/width where border radius > border width -->
        <comment userInput="Open edit panel and apply border radius/width where border radius greater than border width" stepKey="commentOpenEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAppearance">
            <argument name="property" value="PageBuilderAppearance_Poster"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBannerShowOverlayAlways">
            <argument name="property" value="PageBuilderBannerShowContentOverlayAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterOverlayColor">
            <argument name="property" value="PageBuilderBannerOverlayColor_Blue_Opaque"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage where border radius > border width -->
        <comment userInput="Validate Stage where border radius greater than border width" stepKey="commentValidateStage"/>
        <seeElement selector="{{BannerOnBackend.overlay('1')}}" stepKey="seeOverlay"/>
        <executeJS function="return parseInt(getComputedStyle(document.evaluate(&quot;{{BannerOnBackend.overlay('1')}}&quot;,document.body).iterateNext()).borderRadius, 10)" stepKey="overlayBorderRadius"/>
        <executeJS function="return Math.max(0, parseInt({{PageBuilderAdvancedBorderRadiusProperty12.value}}, 10) - parseInt({{PageBuilderAdvancedBorderWidthProperty10.value}}, 10))" stepKey="expectedOverlayBorderRadius"/>
        <assertEquals stepKey="assertOverlayBorderRadiusEqualityWhereBorderRadiusGreaterThanBorderWidth">
            <expectedResult type="variable">$expectedOverlayBorderRadius</expectedResult>
            <actualResult type="variable">$overlayBorderRadius</actualResult>
        </assertEquals>
        <!-- Validate Storefront where border radius > border width -->
        <comment userInput="Validate Storefront where border radius greater than border width" stepKey="commentValidateStorefront"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <executeJS function="return parseInt(getComputedStyle(document.evaluate(&quot;{{BannerOnFrontend.overlay('1')}}&quot;,document.body).iterateNext()).borderRadius, 10)" stepKey="overlayBorderRadiusStorefront"/>
        <assertEquals stepKey="assertOverlayBorderRadiusEqualityWhereBorderRadiusGreaterThanBorderWidthOnStorefront">
            <expectedResult type="variable">$expectedOverlayBorderRadius</expectedResult>
            <actualResult type="variable">$overlayBorderRadiusStorefront</actualResult>
        </assertEquals>
        <switchToPreviousTab stepKey="switchBackToAdmin"/>
        <reloadPage stepKey="refreshPage"/>
        <waitForPageLoad stepKey="waitForPageRefresh"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Open edit panel and apply border radius/width where border radius <= border width -->
        <comment userInput="Open edit panel and apply border radius/width where border radius less than or equal to border width" stepKey="commentOpenEditPanel2"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusEditor"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Validate Stage on where border radius <= border width -->
        <comment userInput="Validate Stage where border radius less than or equal to border width" stepKey="commentValidateStagePoster"/>
        <executeJS function="return parseInt(getComputedStyle(document.evaluate(&quot;{{BannerOnBackend.overlay('1')}}&quot;,document.body).iterateNext()).borderRadius, 10)" stepKey="overlayBorderRadius2"/>
        <executeJS function="return Math.max(0, parseInt({{PageBuilderAdvancedBorderRadiusProperty1.value}}, 10) - parseInt({{PageBuilderAdvancedBorderWidthProperty10.value}}, 10))" stepKey="expectedOverlayBorderRadius2"/>
        <assertEquals stepKey="assertOverlayBorderRadiusEqualityWhereBorderRadiusLessThanOrEqualToBorderWidth">
            <expectedResult type="variable">$expectedOverlayBorderRadius2</expectedResult>
            <actualResult type="variable">$overlayBorderRadius2</actualResult>
        </assertEquals>
        <!-- Validate Storefront where border radius <= border width -->
        <comment userInput="Validate Storefront where border radius less than or equal to border width" stepKey="commentValidateStorefront2"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <switchToNextTab stepKey="switchBackToStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront2">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <executeJS function="return parseInt(getComputedStyle(document.evaluate(&quot;{{BannerOnFrontend.overlay('1')}}&quot;,document.body).iterateNext()).borderRadius, 10)" stepKey="overlayBorderRadiusStorefront2"/>
        <assertEquals stepKey="assertOverlayBorderRadiusEqualityWhereBorderRadiusLessThanOrEqualToBorderWidthOnStorefront">
            <expectedResult type="int">$expectedOverlayBorderRadius2</expectedResult>
            <actualResult type="variable">$overlayBorderRadiusStorefront2</actualResult>
        </assertEquals>
    </test>
</tests>
