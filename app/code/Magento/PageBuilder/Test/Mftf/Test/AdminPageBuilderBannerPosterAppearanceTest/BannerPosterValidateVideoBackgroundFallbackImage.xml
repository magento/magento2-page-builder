<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BannerPosterValidateVideoBackgroundFallbackImage">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Validate Video Background Fallback Image Renders When Video Isn't Loaded in Banner with Poster Appearance"/>
            <description value="Set video background fallback image for a banner with poster appearance and validate on stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-265"/>
            <testCaseId value="MC-31627"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
            <group value="pagebuilder-backgroundForm"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery">
                <argument name="enabled" value="0"/>
            </actionGroup>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="disableOldMediaGallery">
                <argument name="enabled" value="1"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Banner Edit Panel -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceProperty">
            <argument name="property" value="PageBuilderAppearance_Poster"/>
        </actionGroup>
        <!-- Update Video Background Fields -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Invalid_VideoDoesNotExit"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButton">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStage1">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="inlineEditWYSIWYGFromStage" stepKey="inlineEdit">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
            <argument name="content" value="{{PageBuilderBannerMessageProperty.value}}"/>
        </actionGroup>
        <actionGroup ref="inlineEditSlideOrBannerButton" stepKey="inlineEditBannerButton">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="text" value="{{PageBuilderBannerButtonTextProperty.value}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStage"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <scrollTo selector="{{CmsNewPagePageContentSection.header}}" stepKey="scrollBanner1Stage"/>
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStage2">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStage2"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStage2"/>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateFallbackImageInVideoBackgroundWithInvalidVideo" stepKey="validateStorefront">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="fallbackImage" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnFrontend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStorefront"/>
        <waitForElementVisible selector="{{BannerOnFrontend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStorefront"/>
    </test>
</tests>
