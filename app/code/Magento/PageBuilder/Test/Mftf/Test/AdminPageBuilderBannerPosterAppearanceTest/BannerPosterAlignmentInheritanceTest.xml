<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BannerPosterAlignmentInheritanceTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Alignment Inherits"/>
            <description value="A user should be able to have a parent container content type pass its alignment to its children"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-4290"/>
            <testCaseId value="MC-6015"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Add Banner To Row -->
        <comment userInput="Add Banner To Row" stepKey="commentAddBannerToRow"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openBannerEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Banner Edit Panel -->
        <comment userInput="Fill Out Banner Edit Panel" stepKey="commentFillBannerEditPanel"/>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceProperty">
            <argument name="property" value="PageBuilderAppearance_Poster"/>
        </actionGroup>
        <actionGroup ref="addTextToTinyMCE" stepKey="enterMessageText">
            <argument name="property" value="PageBuilderBannerMessageProperty"/>
            <argument name="section" value="BannerOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButton">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectButtonType">
            <argument name="property" value="PageBuilderBannerButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAlignmentDefault">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveBannerEditPanelSettings"/>
        <executeJS function="return {{BannerOnBackend.overlayJS('1')}}.getBoundingClientRect().left" stepKey="overlayLeftPosition"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnBackend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().left" stepKey="buttonLeftPosition"/>
        <executeJS function="return Math.abs(Math.round({$buttonLeftPosition}-{$overlayLeftPosition}-{{PageBuilderPaddingProperty40.paddingLeft}}))" stepKey="buttonMinusOverlayMinusPadding"/>
        <assertLessThanOrEqual stepKey="assertButtonLeftAligned">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">buttonMinusOverlayMinusPadding</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnBackend.wrapperJS('1')}}).textAlign" stepKey="grabDefaultComputedTextAlign"/>
        <assertEquals stepKey="assertDefaultComputedTextAlign">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyStart.value}}</expectedResult>
            <actualResult type="variable">grabDefaultComputedTextAlign</actualResult>
        </assertEquals>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusBannerEditor"/>
        <!-- Fill Out Row Edit Panel -->
        <comment userInput="Fill Out Row Edit Panel" stepKey="commentFillRowEditPanel"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openRowEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <comment userInput="Update Values" stepKey="commentUpdateValues"/>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveRowEditPanelSettings"/>
        <click selector="{{PageBuilderPanel.searchPanel}}" stepKey="unFocusRowEditor"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <executeJS function="return {{BannerOnBackend.overlayJS('1')}}.getBoundingClientRect().right" stepKey="overlayRightPosition"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnBackend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().right" stepKey="buttonRightPosition"/>
        <executeJS function="return Math.abs(Math.round({$overlayRightPosition}-{$buttonRightPosition}-{{PageBuilderPaddingProperty40.paddingRight}}))" stepKey="overlayMinusButtonMinusPadding"/>
        <assertLessThanOrEqual stepKey="assertButtonRightAligned">
        <expectedResult type="int">5</expectedResult>
        <actualResult type="variable">overlayMinusButtonMinusPadding</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnBackend.wrapperJS('1')}}).textAlign" stepKey="grabComputedTextAlign"/>
        <assertEquals stepKey="assertComputedTextAlign">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyRight.value}}</expectedResult>
            <actualResult type="variable">grabComputedTextAlign</actualResult>
        </assertEquals>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStageAfterSave"/>
        <executeJS function="return {{BannerOnBackend.overlayJS('1')}}.getBoundingClientRect().right" stepKey="overlayRightPositionAfterSave"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnBackend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().right" stepKey="buttonRightPositionAfterSave"/>
        <executeJS function="return Math.abs(Math.round({$overlayRightPositionAfterSave}-{$buttonRightPositionAfterSave}-{{PageBuilderPaddingProperty40.paddingRight}}))" stepKey="overlayMinusButtonMinusPaddingAfterSave"/>
        <assertLessThanOrEqual stepKey="assertButtonRightAlignedAfterSave">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">overlayMinusButtonMinusPaddingAfterSave</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnBackend.wrapperJS('1')}}).textAlign" stepKey="grabComputedTextAlignAfterSave"/>
        <assertEquals stepKey="assertComputedTextAlignAfterSave">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyRight.value}}</expectedResult>
            <actualResult type="variable">grabComputedTextAlignAfterSave</actualResult>
        </assertEquals>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <executeJS function="return {{BannerOnFrontend.overlayJS('1')}}.getBoundingClientRect().right" stepKey="overlayRightPositionStoreFront"/>
        <executeJS function="return document.evaluate(&quot;{{BannerOnFrontend.button('1')}}&quot;, document.body).iterateNext().getBoundingClientRect().right" stepKey="buttonRightPositionStoreFront"/>
        <executeJS function="return Math.abs(Math.round({$overlayRightPositionStoreFront}-{$buttonRightPositionStoreFront}-{{PageBuilderPaddingProperty40.paddingRight}}))" stepKey="overlayMinusButtonMinusPaddingStoreFront"/>
        <assertLessThanOrEqual stepKey="assertButtonRightAlignedStoreFront">
            <expectedResult type="int">5</expectedResult>
            <actualResult type="variable">overlayMinusButtonMinusPaddingStoreFront</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return window.getComputedStyle({{BannerOnFrontend.wrapperJS('1')}}).textAlign" stepKey="grabComputedTextAlignStoreFront"/>
        <assertEquals stepKey="assertComputedTextAlignStoreFront">
            <expectedResult type="string">{{PageBuilderAdvancedAlignmentPropertyRight.value}}</expectedResult>
            <actualResult type="variable">grabComputedTextAlignStoreFront</actualResult>
        </assertEquals>
    </test>
</tests>
