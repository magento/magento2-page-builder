<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BannerPosterVideoBackgroundNoFallbackImageDisabledLoopAndPlayWhenVisibleAndLazyLoad">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Validate Banner with Poster Appearance with No Fallback Image, Disabled Infinite Loop, Disabled Play Only When Visible, and Disabled Lazy Load"/>
            <description value="Validate video background with no fallback image, disabled infinite loop, disabled play only when visible, and disabled lazy load."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-265"/>
            <testCaseId value="MC-31646"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
            <group value="pagebuilder-backgroundForm"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setAppearance">
            <argument name="property" value="PageBuilderAppearance_Poster"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_300px"/>
        </actionGroup>
        <!-- Set Edit Panel -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrlValid">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disableInfiniteLoop">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disableLazyLoad">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="disablePlayOnlyWhenVisible">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButton">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStage1">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="inlineEditWYSIWYGFromStage" stepKey="inlineEdit">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
            <argument name="content" value="{{PageBuilderBannerMessageProperty.value}}"/>
        </actionGroup>
        <actionGroup ref="inlineEditSlideOrBannerButton" stepKey="inlineEditBannerButton">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="text" value="{{PageBuilderBannerButtonTextProperty.value}}"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStage"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Validate Stage After Save -->
        <scrollTo selector="{{CmsNewPagePageContentSection.header}}" stepKey="scrollBanner1Stage"/>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStage2">
            <argument name="section" value="BannerOnBackend"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnBackend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStage2"/>
        <waitForElementVisible selector="{{BannerOnBackend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStage2"/>
        <!-- Validate Edit Panel After Save -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditPanelAfterSave">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColorEmptyAfterSave">
            <argument name="property" value="PageBuilderBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateVideoUrlAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateOverlayColorEmptyAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundOverlayColor_Empty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateInfiniteLoopAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validateLazyLoadAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="validatePlayOnlyWhenVisibleAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <actionGroup ref="seeNoImageUploadedOnSlideOut" stepKey="validateNoFallbackImageAfterSave">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_Empty"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundWithOnlyVideoUrl" stepKey="validateStorefront">
            <argument name="section" value="BannerOnFrontend"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_YouTube_Embedded"/>
            <argument name="infiniteLoop" value="PageBuilderVideoBackgroundInfiniteLoop_Disabled"/>
            <argument name="lazyLoad" value="PageBuilderVideoBackgroundLazyLoad_Disabled"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundPlayOnlyWhenVisible_Disabled"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnFrontend.messageContent('1', PageBuilderBannerMessageProperty.value)}}" stepKey="waitForMessageContentStorefront"/>
        <waitForElementVisible selector="{{BannerOnFrontend.buttonText('1', PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForButtonTextStorefront"/>
    </test>
</tests>
