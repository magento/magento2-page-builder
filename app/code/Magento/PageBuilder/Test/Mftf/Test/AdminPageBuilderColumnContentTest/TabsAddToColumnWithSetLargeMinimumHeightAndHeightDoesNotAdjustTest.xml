<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TabsAddToColumnWithSetLargeMinimumHeightAndHeightDoesNotAdjustTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Column"/>
            <title value="Add Tabs into Column that has large minimum height and Column Height does not shrink"/>
            <description value="User sees columns adjusting their height to the Tabs height that was dropped to them unless column minimum height is larger"/>
            <severity value="MAJOR"/>
            <useCaseId value="MAGETWO-86953"/>
            <testCaseId value="MC-2899"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-column"/>
            <group value="pagebuilder-tabs"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragColumnIntoStage">
            <argument name="contentType" value="PageBuilderColumnGroupContentType"/>
        </actionGroup>
        <comment userInput="Enter column min height 500 px" stepKey="commentEnterColumnMinHeight"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_500"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <comment userInput="Validate Column Height On Stage With Custom Min Height Matches Expected" stepKey="commentValidateColumnHeight"/>
        <actionGroup ref="validateContentTypeHeightOnStageWithoutPadding" stepKey="assertInitialColumnHeightMatchesExpected">
            <argument name="contentType" value="PageBuilderColumnContentType"/>
            <argument name="index" value="1"/>
            <argument name="containerDefaultHeight" value="PageBuilderMinHeightProperty_500"/>
        </actionGroup>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderColumnContentType.role,'1')}}" stepKey="actualStageInitialColumnHeight"/>
        <comment userInput="Validate Row Height adjusts to Column Height" stepKey="commentValidateRowHeightAdjustToColumn"/>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderRowContentType.role,'1')}}" stepKey="actualStageRowHeightWithColumns"/>
        <executeJS function="return Math.round({$actualStageInitialColumnHeight}+{{PageBuilderPaddingProperty0.paddingTop}}+{{PageBuilderPaddingProperty0.paddingBottom}})" stepKey="expectedRowHeightWithPaddingAndColumns"/>
        <assertGreaterThanOrEqual stepKey="assertRowHeightAdjustsToColumnHeight">
            <expectedResult type="variable">expectedRowHeightWithPaddingAndColumns</expectedResult>
            <actualResult type="variable">actualStageRowHeightWithColumns</actualResult>
        </assertGreaterThanOrEqual>
        <comment userInput="Drag Tabs to Column" stepKey="commentDragTabsToColumn"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragTabsIntoFirstColumn">
            <argument name="contentType" value="PageBuilderTabsContentType"/>
            <argument name="containerTargetType" value="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <comment userInput="Validate Column Height does not shrink to Tabs Height" stepKey="commentValidateColumnHeightWithTabs"/>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderColumnContentType.role,'1')}}" stepKey="actualStageColumnHeightWithTabs"/>
        <assertEquals stepKey="assertColumnHeightDoesNotAdjustToTabsHeight">
            <expectedResult type="variable">actualStageInitialColumnHeight</expectedResult>
            <actualResult type="variable">actualStageColumnHeightWithTabs</actualResult>
        </assertEquals>
        <comment userInput="Validate Row Height does not shrink to Tabs height" stepKey="commentValidateRowHeightWithColumnAndTabs"/>
        <executeJS function="{{PageBuilderStage.computedHeightOnStage(PageBuilderRowContentType.role,'1')}}" stepKey="actualStageRowHeightWithColumnsAndTabs"/>
        <executeJS function="return Math.round({$actualStageInitialColumnHeight}+{{PageBuilderPaddingProperty0.paddingTop}}+{{PageBuilderPaddingProperty0.paddingBottom}})" stepKey="expectedRowHeightWithColumnTabsAndPadding"/>
        <assertGreaterThanOrEqual stepKey="assertRowHeightAdjustsToTabsHeight">
            <expectedResult type="variable">expectedRowHeightWithColumnTabsAndPadding</expectedResult>
            <actualResult type="variable">actualStageRowHeightWithColumnsAndTabs</actualResult>
        </assertGreaterThanOrEqual>
    </test>
</tests>
