<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="MapDoesNotRenderNewGoogleMapsStyleOnStorefrontUntilPageSaveOrCacheRefreshTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps Style - Map Does Not Render New Google Maps Style On Storefront Until Page Save Or Cache Refresh"/>
            <description value="A change to the Google Maps Style should not take affect on the storefront until a page save or a cache refresh"/>
            <severity value="MAJOR"/>
            <useCaseId value="MAGETWO-89028"/>
            <testCaseId value="MC-2523"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsStyle"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionMedia">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!-- Add Location -->
        <comment userInput="Add Location" stepKey="commentAddLocation"/>
        <actionGroup ref="clickAddLocationButton" stepKey="clickAddLocationButton"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLatitude">
            <argument name="property" value="PageBuilderMapLatitude_Positive39_74"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLongitude">
            <argument name="property" value="PageBuilderMapLongitude_Positive9_67"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterLocationName">
            <argument name="property" value="PageBuilderMapLocationName_TestLocation"/>
        </actionGroup>
        <actionGroup ref="saveLocationForm" stepKey="saveLocationForm"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront1">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <!--Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle"/>
        <actionGroup ref="NavigateToAdminContentManagementPageActionGroup" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsStyle" stepKey="inputGoogleMapsStyle">
            <argument name="style" value="{{googleMapsStyle.validShort}}"/>
        </actionGroup>
        <actionGroup ref="SaveStoreConfigurationActionGroup" stepKey="saveStoreConfiguration"/>
        <!-- Storefront: Validate Map Style Unchanged -->
        <comment userInput="Storefront: Validate Map Style Unchanged" stepKey="commentValidate1"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront2">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)" stepKey="mapStyle1"/>
        <assertEquals stepKey="assertMapStyle1">
            <actualResult type="variable">$mapStyle1</actualResult>
            <expectedResult type="string">{{googleMapsStyle.empty}}</expectedResult>
        </assertEquals>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage2"/>
        <!-- Storefront: Validate Map Style Changed -->
        <comment userInput="Storefront: Validate Map Style Changed" stepKey="commentValidate2"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <reloadPage stepKey="reloadPage2"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle2"/>
        <assertEquals stepKey="assertMapStyle2">
            <actualResult type="variable">$mapStyle2</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
        <!-- Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle2"/>
        <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
        <!-- Storefront: Validate Map Style Unchanged -->
        <comment userInput="Storefront: Validate Map Style Unchanged" stepKey="commentValidate3"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront4">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle3"/>
        <assertEquals stepKey="assertMapStyle3">
            <actualResult type="variable">$mapStyle3</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
        <!-- Clean Cache -->
        <comment userInput="Clean Cache" stepKey="commentCleanCache"/>
        <magentoCLI command="cache:clean" stepKey="cleanCache"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront5">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <executeJS function="return document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)" stepKey="mapStyle4"/>
        <assertEquals stepKey="assertMapStyle4">
            <actualResult type="variable">$mapStyle4</actualResult>
            <expectedResult type="string">{{googleMapsStyle.empty}}</expectedResult>
        </assertEquals>
    </test>
</tests>
