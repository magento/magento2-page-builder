<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="MapRendersNewGoogleMapsStyleOnStageImmediatelyTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Map"/>
            <title value="Google Maps Style - Map Renders New Google Maps Style On Stage Without Cache Refresh"/>
            <description value="A change to the Google Maps Style should immediately take affect on the stage without a cache refresh"/>
            <severity value="MAJOR"/>
            <useCaseId value="MAGETWO-89028"/>
            <testCaseId value="MC-2747"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
            <group value="pagebuilder-googleMapsStyle"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <magentoCLI command="config:set cms/pagebuilder/google_maps_style ''" stepKey="setEmptyGoogleMapsStyle"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionMedia">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeIntoStage">
            <argument name="contentType" value="PageBuilderMapContentType"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!--Set Google Maps Style -->
        <comment userInput="Set Google Maps Style" stepKey="commentSetStyle"/>
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="NavigateToAdminContentManagementPageActionGroup" stepKey="navigateToAdminContentManagementPage"/>
        <conditionalClick stepKey="expandAdvancedContentTools" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true"/>
        <actionGroup ref="inputGoogleMapsStyle" stepKey="inputGoogleMapsStyle">
            <argument name="style" value="{{googleMapsStyle.validShort}}"/>
        </actionGroup>
        <actionGroup ref="SaveStoreConfigurationActionGroup" stepKey="saveStoreConfiguration"/>
        <!-- Stage: Validate Map Style Changed -->
        <comment userInput="Stage: Validate Map Style Changed" stepKey="commentValidate1"/>
        <switchToPreviousTab stepKey="switchToPreviousTab"/>
        <reloadPage stepKey="reloadPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <executeJS function="return decodeURIComponent(JSON.parse('&quot;' + document.evaluate('//body//script[contains(.,\'Magento_PageBuilder/js/utils/map\')]', document, null, XPathResult.STRING_TYPE, null).stringValue.match(/(?&lt;=style:\s').+(?=')/)[0].replace(/\\&quot;/g, '\\\\&quot;') + '&quot;'))" stepKey="mapStyle1"/>
        <assertEquals stepKey="assertMapStyle1">
            <actualResult type="variable">$mapStyle1</actualResult>
            <expectedResult type="string">{{googleMapsStyle.validShort}}</expectedResult>
        </assertEquals>
    </test>
</tests>
