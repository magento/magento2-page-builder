<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="HeadingDuplicateTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Heading"/>
            <title value="Duplicate Heading"/>
            <description value="A user should be able to duplicate a heading content type in a row."/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-529"/>
            <testCaseId value="MC-2919"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-heading"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <!-- Fill All General Fields -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeadingText">
            <argument name="property" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterHeadingTypeH3">
            <argument name="property" value="PageBuilderHeadingTypeProperty_H3"/>
        </actionGroup>
        <!-- Fill All Advanced Fields -->
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAlignmentCenter">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="hideContentType" stepKey="hideContentType">
            <argument name="section" value="HeadingOnStage"/>
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <!-- Duplicate and Verify Stage -->
        <actionGroup ref="duplicateContentType" stepKey="duplicateHeading">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <!-- Validate content type is disabled -->
        <comment userInput="Validate content type is disabled" stepKey="commentValidateHiddenStage"/>
        <waitForElementVisible selector="{{HeadingOnStage.hidden('1')}}" stepKey="waitForContentTypeHidden1"/>
        <waitForElementVisible selector="{{HeadingOnStage.hidden('2')}}" stepKey="waitForContentTypeHidden2"/>
        <!-- Show duplicated content type -->
        <comment userInput="Show duplicate content type" stepKey="commentShowContentType"/>
        <actionGroup ref="showContentType" stepKey="showContentType">
            <argument name="section" value="HeadingOnStage"/>
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="showContentType" stepKey="showContentType2">
            <argument name="section" value="HeadingOnStage"/>
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="targetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="verifyHeadingInStage" stepKey="verifyHeadingInStage">
            <argument name="index" value="2"/>
            <argument name="headingType" value="PageBuilderHeadingTypeProperty_H3"/>
            <argument name="headingText" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="verifyHeadingAdvancedConfigurationWithAllUpdated" stepKey="verifyHeadingAdvancedInStage">
            <argument name="page" value="HeadingOnStage"/>
            <argument name="headingType" value="PageBuilderHeadingTypeProperty_H3"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDotted"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Verify Edit Panel Values -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHeadingText">
            <argument name="property" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeHeadingTypeH3">
            <argument name="property" value="PageBuilderHeadingTypeProperty_H3"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAlignmentCenter2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <!-- Verify Storefront -->
        <!-- Validate content type is enabled in Storefront -->
        <comment userInput="Validate content type is enabled in Storefront" stepKey="commentValidateShownStorefront"/>
        <waitForElementVisible selector="{{HeadingOnStorefront.notHidden('1')}}" stepKey="waitForContentTypeShownStorefront1"/>
        <waitForElementVisible selector="{{HeadingOnStorefront.notHidden('2')}}" stepKey="waitForContentTypeShownStorefront2"/>
        <actionGroup ref="verifyHeadingInStorefront" stepKey="verifyHeadingInStorefront">
            <argument name="index" value="2"/>
            <argument name="headingType" value="PageBuilderHeadingTypeProperty_H3"/>
            <argument name="headingText" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <actionGroup ref="verifyHeadingAdvancedConfigurationWithAllUpdated" stepKey="verifyHeadingAdvancedInStorefront">
            <argument name="page" value="HeadingOnStorefront"/>
            <argument name="headingType" value="PageBuilderHeadingTypeProperty_H3"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDotted"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
    </test>
</tests>
