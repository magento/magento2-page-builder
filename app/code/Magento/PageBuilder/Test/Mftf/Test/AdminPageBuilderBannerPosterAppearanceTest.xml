<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="BannerPosterAddWYSIWYGLink">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Verify User Can Add Link To WYSIWYG"/>
            <description value="Verify that a user can add a link to the WYSIWYG for Banner"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-405"/>
            <testCaseId value="MC-3104"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Add Link To WYSIWYG -->
        <comment userInput="Add Link To WYSIWYG" stepKey="commentAddLink"/>
        <actionGroup ref="insertLinkInWYSIWYG" stepKey="insertLinkInWYSIWYG">
            <argument name="url" value="{{ExternalLink.googleUrl}}"/>
            <argument name="textToDisplay" value="{{ExternalLink.googleUrl}}"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible selector="{{BannerOnBackend.linkUrl(ExternalLink.googleUrl)}}" stepKey="waitForBannerStage"/>
        <!-- Save Page -->
        <comment userInput="Save Page" stepKey="commentSavePage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Page Save -->
        <comment userInput="Validate Stage After Page Save" stepKey="commentValidateStage2"/>
        <waitForElementVisible selector="{{BannerOnBackend.linkUrl(ExternalLink.googleUrl)}}" stepKey="waitForBannerStage2"/>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{BannerOnFrontend.linkUrl(ExternalLink.googleUrl)}}" stepKey="waitForBannerStorefront"/>
    </test>
    <test name="BannerPosterButtonNeverShow">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Check poster button never show state works"/>
            <description value="Check poster button never show state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83553"/>
            <testCaseId value="MAGETWO-88319"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <!-- Fill button fields -->
        <comment userInput="Fill button fields" stepKey="commentFillButtons"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterBannerLinkUrl">
            <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectButtonTypeSecondaryProperty">
            <argument name="property" value="PageBuilderBannerButtonTypeSecondaryProperty"/>
        </actionGroup>
        <!-- Disable button fields and check values -->
        <comment userInput="Disable button fields and check values" stepKey="commentDisableButtons"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonDefaultProperty">
            <argument name="property" value="PageBuilderBannerShowButtonDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm">
            <argument name="property" value="PageBuilderBannerLinkUrlPropertyValidate"/>
        </actionGroup>
        <actionGroup ref="seeSlideOutPanelFieldOpenInNewTab" stepKey="seeNewTabOnForm">
            <argument name="property" value="PageBuilderBannerNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBannerButtonTypeProperty">
            <argument name="property" value="PageBuilderBannerButtonTypeSecondaryProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{BannerOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeButtonTextBackend"/>
        <moveMouseOver selector="{{BannerOnBackend.poster}}" stepKey="moveMouseOverBackendBanner"/>
        <dontSeeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <dontSeeInField selector="{{EditPanelForm.panelFieldControl(PageBuilderBannerButtonTextProperty.section, PageBuilderBannerButtonTextProperty.fieldName)}}" userInput="{{PageBuilderBannerButtonTextProperty.value}}" stepKey="dontSeeInFieldProperty"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm2">
            <argument name="property" value="PageBuilderBannerLinkUrlPropertyValidate"/>
        </actionGroup>
        <actionGroup ref="seeSlideOutPanelFieldOpenInNewTab" stepKey="seeNewTabOnForm2">
            <argument name="property" value="PageBuilderBannerNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeBannerButtonTypeProperty2">
            <argument name="property" value="PageBuilderBannerButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.banner}}" stepKey="verifyBannerInFrontend"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBanner"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate Storefront Mobile -->
        <comment userInput="Validate Storefront Mobile" stepKey="commentValidateStorefrontMobile"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBannerMobile"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="BannerPosterButtonOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Check poster button on hover state works"/>
            <description value="Check poster button on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83553"/>
            <testCaseId value="MAGETWO-89605"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectBannerButtonShowOnHover">
            <argument name="property" value="PageBuilderBannerShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeBannerButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterBannerLinkUrl">
            <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeBannerButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderBannerButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBannerShowOverlayAlways">
            <argument name="property" value="PageBuilderBannerShowContentOverlayAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayColor">
            <argument name="property" value="PageBuilderBannerContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayTransparency">
            <argument name="property" value="PageBuilderBannerOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{BannerOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonText"/>
        <seeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifySeeOverlayBackend"/>
        <moveMouseOver selector="{{BannerOnBackend.poster}}" stepKey="moveMouseOverBackendBanner"/>
        <waitForElement time="2" selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.banner}}" stepKey="verifyBannerInFrontend"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontend"/>
        <seeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifySeeOverlayOnFrontend"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBanner"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontend"/>
        <!-- Validate Storefront Mobile -->
        <comment userInput="Validate Storefront Mobile" stepKey="commentValidateStorefrontMobile"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontendMobile"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBannerMobile"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="BannerPosterOverlayNeverShow">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Check poster overlay never show state works"/>
            <description value="Check poster overlay never show state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83553"/>
            <testCaseId value="MAGETWO-89607"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterBannerLinkUrl">
            <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBannerOverlayNeverShow">
            <argument name="property" value="PageBuilderBannerShowContentOverlayNeverShowProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{BannerOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <moveMouseOver selector="{{BannerOnBackend.poster}}" stepKey="moveMouseOverBackendBanner"/>
        <dontSeeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifyStillDontSeeOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.banner}}" stepKey="verifyBannerInFrontend"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend5"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBanner"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate Storefront Mobile -->
        <comment userInput="Validate Storefront Mobile" stepKey="commentValidateStorefrontMobile"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBannerMobile"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend6"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="BannerPosterOverlayOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Check poster overlay on hover state works"/>
            <description value="Check poster overlay on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83553"/>
            <testCaseId value="MAGETWO-89606"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterBannerLinkUrl">
            <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBannerOverlayShowOnHover">
            <argument name="property" value="PageBuilderBannerShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayColor">
            <argument name="property" value="PageBuilderBannerContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayTransparency">
            <argument name="property" value="PageBuilderBannerOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{BannerOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <seeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeButtonTextBackend"/>
        <moveMouseOver selector="{{BannerOnBackend.poster}}" stepKey="moveMouseOverBackendBanner"/>
        <waitForElement time="2" selector="{{BannerOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <seeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.banner}}" stepKey="verifyBannerInFrontend"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend3"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeButtonTextFrontend"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBanner"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyseeOnHoverOverlayOnFrontend7"/>
        <!-- Validate Storefront Mobile -->
        <comment userInput="Validate Storefront Mobile" stepKey="commentValidateStorefrontMobile"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBannerMobile"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend4"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="BannerPosterOverlayAndButtonOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Check poster button and overlay on hover state works"/>
            <description value="Check poster button and overlay on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-83553"/>
            <testCaseId value="MAGETWO-89608"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundMobileImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectBannerButtonShowOnHover">
            <argument name="property" value="PageBuilderBannerShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeBannerButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
            <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterBannerLinkUrl">
            <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeBannerNewTabDefaultIsDisabled">
            <argument name="property" value="PageBuilderBannerNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeBannerButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderBannerButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBannerOverlayShowOnHover">
            <argument name="property" value="PageBuilderBannerShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayColor">
            <argument name="property" value="PageBuilderBannerContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerOverlayTransparency">
            <argument name="property" value="PageBuilderBannerOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{BannerOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <dontSeeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <moveMouseOver selector="{{BannerOnBackend.poster}}" stepKey="moveMouseOverBackendBanner"/>
        <waitForElement time="2" selector="{{BannerOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <waitForElement time="2" selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{BannerOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <seeElement selector="{{BannerOnBackend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.banner}}" stepKey="verifyBannerInFrontend"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend7"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontend"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBanner"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontend" />
        <waitForElement time="2" selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontend8"/>
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontend"/>
        <!-- Validate Storefront Mobile -->
        <comment userInput="Validate Storefront Mobile" stepKey="commentValidateStorefrontMobile"/>
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{BannerOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverLayOnFrontendMobile"/>
        <dontSeeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontendMobile"/>
        <moveMouseOver selector="{{BannerOnFrontend.banner}}" stepKey="moveMouseOverFrontendBannerMobile"/>
        <waitForElement time="2" selector="{{BannerOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontendMobile" />
        <waitForElement time="2" selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{BannerOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{BannerOnFrontend.poster}}" stepKey="waitForPosterInFrontend8"/>
        <seeElement selector="{{BannerOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{BannerOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="BannerPosterButtonsCanBeEditedInline">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Ability to edit a poster banner button inline on the stage"/>
            <description value="A user should be able to edit a poster banner button inline on the stage"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-87988"/>
            <testCaseId value="MAGETWO-89564"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderBannerShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <seeElementInDOM selector="{{BannerOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" stepKey="seeButtonIsEditable"/>
        <click selector="{{BannerOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" stepKey="clickButtonToEdit"/>
        <pressKey selector="{{BannerOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" userInput="{{PageBuilderButtonItemText_Common2.value}}" stepKey="enterButtonText"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm">
            <argument name="property" value="PageBuilderBannerButtonTextProperty2"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{BannerOnFrontend.buttonText(PageBuilderBannerButtonTextProperty2.value)}}" stepKey="seeButtonTextStorefront"/>
    </test>
    <test name="BannerPosterEmptyBannerTakeNoSpaceOnStoreFrontValidation">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Banner"/>
            <title value="Poster - Validate empty banner poster does not take up space on store front"/>
            <description value="Validate empty banner poster does not take up space on store fronts"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-407"/>
            <testCaseId value="MC-2428"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-banner"/>
            <group value="pagebuilder-bannerPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBannerIntoStage">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{BannerOnBackend.emptyPoster}}" stepKey="waitForPoster" />
        <seeElement selector="{{BannerOnBackend.emptyBanner(PageBuilderBannerMessageDefaultProperty.placeholder)}}" stepKey="seeEmptyBannerContent"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <waitForElement selector="{{BannerOnFrontend.banner}}" stepKey="waitForBannerOnStoreFront"/>
        <dontSeeElement selector="{{BannerOnFrontend.banner}}" stepKey="dontSeeBannerOnStoreFront"/>
    </test>
</tests>
