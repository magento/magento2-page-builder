<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowValidateVideoBackgroundInfiniteLoopEnabled">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row: Validate Video Background Infinite Loop Enabled"/>
            <description value="Verify that the video background infinite loop attribute works as intended when enabled."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-95"/>
            <testCaseId value="MC-31417"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowBackground"/>
            <group value="pagebuilder-video-background"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery">
                <argument name="enabled" value="0"/>
            </actionGroup>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToFallbackImageFolder">
                <argument name="FolderName" value="{{PageBuilderVideoBackgroundFallbackImage_JPG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="deleteFallbackImage">
                <argument name="Image" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
            </actionGroup>
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="disableOldMediaGallery">
                <argument name="enabled" value="1"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="setBackgroundType">
            <argument name="property" value="PageBuilderBackgroundType_Video"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterVideoUrl">
            <argument name="property" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="setInfiniteLoopEnabled">
            <argument name="property" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachFallbackImage">
            <argument name="property" value="PageBuilderVideoBackgroundFallbackImage_JPG"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Stage: Validate Video is Playing -->
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage1">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStage"/>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStage2">
            <argument name="section" value="RowOnStage"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Storefront: Validate Video is Playing -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStorefront1">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
        <wait time="5" stepKey="waitForVideoCompleteStorefront"/>
        <actionGroup ref="validateVideoBackgroundPlaying" stepKey="validateVideoPlayingStorefront2">
            <argument name="section" value="RowOnStorefront"/>
            <argument name="playOnlyWhenVisible" value="PageBuilderVideoBackgroundInfiniteLoop_Enabled"/>
            <argument name="videoUrl" value="PageBuilderVideoBackgroundUrl_Mp4_URL"/>
        </actionGroup>
    </test>
</tests>
