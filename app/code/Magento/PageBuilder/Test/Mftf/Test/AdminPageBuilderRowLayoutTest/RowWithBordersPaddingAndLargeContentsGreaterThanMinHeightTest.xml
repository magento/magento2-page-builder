<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowWithBordersPaddingAndLargeContentsGreaterThanMinHeightTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row with borders, padding, and large content is greater than min height"/>
            <description value="A user can see Row height with borders, padding, and large content is greater than min height"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-5079"/>
            <testCaseId value="MC-5802"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-appearance"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Configure content type -->
        <comment userInput="Configure content type" stepKey="commentConfigureContentType"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Add tall content to container -->
        <comment userInput="Add tall content to container" stepKey="commentAddTallContentToContainer"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToContainer">
            <argument name="contentType" value="PageBuilderBannerContentType"/>
        </actionGroup>
        <!-- Validate height on stage before save -->
        <comment userInput="Validate height on stage before save" stepKey="commentValidateHeightOnStageBeforeSave"/>
        <actionGroup ref="validateContentTypeHeightGreaterThanMinHeight" stepKey="validateContentTypeHeightBeforeSave">
            <argument name="content" value="{{RowOnStage.baseCSS}}"/>
            <argument name="border" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="height" value="PageBuilderMinHeightProperty_200"/>
            <argument name="padding" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate height on stage after save -->
        <comment userInput="Validate height on stage after save" stepKey="commentValidateHeightOnStageAfterSave"/>
        <actionGroup ref="validateContentTypeHeightGreaterThanMinHeight" stepKey="validateContentTypeHeightAfterSave">
            <argument name="content" value="{{RowOnStage.baseCSS}}"/>
            <argument name="border" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="height" value="PageBuilderMinHeightProperty_200"/>
            <argument name="padding" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Validate height on storefront -->
        <comment userInput="Validate height on storefront" stepKey="commentValidateHeightOnStorefront"/>
        <actionGroup ref="validateContentTypeHeightGreaterThanMinHeight" stepKey="validateContentTypeHeightStorefront">
            <argument name="content" value="{{RowOnStorefront.baseCSS}}"/>
            <argument name="height" value="PageBuilderMinHeightProperty_200"/>
        </actionGroup>
    </test>
</tests>
