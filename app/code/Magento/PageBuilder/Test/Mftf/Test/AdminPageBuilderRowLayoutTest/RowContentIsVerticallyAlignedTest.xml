<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowContentIsVerticallyAlignedTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row Content Can Be Vertically Aligned"/>
            <description value="A user can vertically align row contents"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-914"/>
            <testCaseId value="MC-2388"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-appearance"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Add two rows to stage -->
        <comment userInput="Add two rows to the stage" stepKey="commentAddTwoRows"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragSecondRowIntoStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragThirdRowIntoStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Configure First Row - Vertical Align Top -->
        <comment userInput="Configure vertical align top" stepKey="commentConfigureVerticalAlignTop"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForFirstRow">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmentTopProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyTop"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsFirstRow"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeadingToFirstRow">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading1">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Configure Second Row - Vertical Align Center -->
        <comment userInput="Configure vertical align center" stepKey="commentConfigureVerticalAlignCenter"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForSecondRow">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmenCenterProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsSecondRow"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeadingToSecondRow">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="2"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading2">
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Configure Third Row - Vertical Align Bottom -->
        <comment userInput="Configure vertical align bottom" stepKey="commentConfigureVerticalAlignBottom"/>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanelForThirdRow">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmentBottomProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyBottom"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsThirdColumn"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeadingToThirdRow">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="3"/>
            <argument name="contentTypeIndex" value="1"/>
        </actionGroup>
        <!-- Verify Vertical Alignment On Stage - Before Save -->
        <comment userInput="Verify vertical alignment on stage before save" stepKey="commentVerifyVerticalAlignmentOnStageBeforeSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstRowVerticalAlignmentTop">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondRowVerticalAlignmentCenter">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdRowVerticalAlignmentBottom">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <!-- Verify Vertical Alignment On Stage - After Save -->
        <comment userInput="Verify vertical alignment on stage after save" stepKey="commentVerifyVerticalAlignmentOnStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstRowVerticalAlignmentTopAfterSave">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeSecondRowVerticalAlignmentCenterAfterSave">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeThirdRowVerticalAlignmentBottomAfterSave">
            <argument name="selector" value="{{RowOnStage.rowChildrenPath('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <!-- Verify Vertical Alignment In Storefront -->
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRow1VerticalAlignmentTopApplied">
            <argument name="selector" value="{{RowOnStorefront.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyTop.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRow2VerticalAlignmentCenterApplied">
            <argument name="selector" value="{{RowOnStorefront.advancedConfigurationPath('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyCenter.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRow3VerticalAlignmentBottomApplied">
            <argument name="selector" value="{{RowOnStorefront.advancedConfigurationPath('3')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
    </test>
</tests>
