<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowMinimumHeightIsObeyedWhenParallaxIsEnabledTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row - Minimum Height Obeyed when Parallax is enabled"/>
            <description value="As a Content Manager I want minimum height of parallax-enabled row to reflect the same value configured by me"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-4128"/>
            <testCaseId value="MC-4304"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowParallax"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="conditionalClickSlideOutPanelFieldGeneral" stepKey="enterParallaxEnabledProperty">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinimumHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_300px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Get value of assigned min height on element -->
        <executeJS function="return window.getComputedStyle(document.evaluate('{{RowOnStage.base('1')}}', document.body).iterateNext()).minHeight.replace(/px/g, &quot;&quot;)" stepKey="assignedHeight"/>
        <assertEquals stepKey="assertEqualToEnteredValue">
            <expectedResult type="string">{{PageBuilderMinHeightProperty_300.value}}</expectedResult>
            <actualResult type="variable">$assignedHeight</actualResult>
        </assertEquals>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinimumHeightProperty2">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Get value of assigned min height on element -->
        <executeJS function="return window.getComputedStyle(document.evaluate('{{RowOnStage.base('1')}}', document.body).iterateNext()).minHeight.replace(/px/g, &quot;&quot;)" stepKey="assignedHeight2"/>
        <assertEquals stepKey="assertEqualToEnteredValue2">
            <expectedResult type="string">{{PageBuilderMinHeightProperty_500.value}}</expectedResult>
            <actualResult type="variable">$assignedHeight2</actualResult>
        </assertEquals>
    </test>
</tests>
