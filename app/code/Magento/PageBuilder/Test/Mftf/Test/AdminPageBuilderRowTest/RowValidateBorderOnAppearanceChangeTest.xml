<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowValidateBorderOnAppearanceChangeTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Row border should change to correct element on appearance change"/>
            <description value="A user should be able to change the appearance on a row and see the border update as expected"/>
            <severity value="MAJOR"/>
            <useCaseId value="MC-4126"/>
            <testCaseId value="MC-4229"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Select full width appearance -->
        <comment userInput="Select full width appearance" stepKey="commentFullWidth"/>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceRowFullWidth">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <!-- I configure border within advanced section -->
        <comment userInput="I configure border within advanced section" stepKey="commentConfigureBorder"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="fillOutColorPicker" stepKey="fillOutColor">
            <argument name="colorCode" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField7">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <seeElement selector="{{RowOnStage.base('1')}}" stepKey="waitForElementVisible"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderVisible">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderPropertyDouble.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderColorVisible">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_green.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderWidthVisible">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <!-- Change appearance to contained -->
        <comment userInput="Change appearance to contained" stepKey="commentContained"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceRowContained">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <seeElement selector="{{RowOnStage.base('1')}}" stepKey="waitForElementVisible1"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderVisible1">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderPropertyDouble.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderColorVisible1">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_green.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="waitForBorderWidthVisible1">
            <argument name="selector" value="{{RowOnStage.advancedConfigurationPath('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
        <!-- Verify the border is not on the outside of the contained row -->
        <comment userInput="Verify the border is not on the outside of the contained row" stepKey="commentVerifyBorder"/>
        <actionGroup ref="ValidateContentTypesStyleDoesNotEqualExpectedStyleActionGroup" stepKey="dontSeeBorderOnOutside">
            <argument name="selector" value="{{RowOnStage_Contained_Invalid.advancedConfigurationPath('1')}}"/>
            <argument name="notExpectedProperty" value="{{PageBuilderAdvancedBorderPropertyDouble.value}}"/>
            <argument name="cssProperty" value="borderStyle"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleDoesNotEqualExpectedStyleActionGroup" stepKey="dontSeeBorderColorOnOutside">
            <argument name="selector" value="{{RowOnStage_Contained_Invalid.advancedConfigurationPath('1')}}"/>
            <argument name="notExpectedProperty" value="{{PageBuilderAdvancedBorderColorProperty_green.rgb}}"/>
            <argument name="cssProperty" value="borderColor"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleDoesNotEqualExpectedStyleActionGroup" stepKey="dontSeeBorderWidthOnOutside">
            <argument name="selector" value="{{RowOnStage_Contained_Invalid.advancedConfigurationPath('1')}}"/>
            <argument name="notExpectedProperty" value="{{PageBuilderAdvancedBorderWidthProperty10.value}}"/>
            <argument name="cssProperty" value="borderWidth"/>
        </actionGroup>
    </test>
</tests>
