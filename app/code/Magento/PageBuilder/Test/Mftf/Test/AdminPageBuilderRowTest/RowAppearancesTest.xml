<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RowAppearancesTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Row"/>
            <title value="Can add row with different appearances"/>
            <description value="Verify that all row appearances can be set and display correctly on the stage and storefront."/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-930"/>
            <testCaseId value="MC-3280"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowAppearances"/>
            <group value="pr_exclude"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
                <argument name="contentType" value="PageBuilderRowContentType"/>
            </actionGroup>
        </before>
        <after>
            <resizeWindow width="1280" height="1024" stepKey="resizeWindowToDesktop"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <!-- Set background color and appearance of row 1 -->
        <comment userInput="Set background color and appearance of row 1" stepKey="commentEdit"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColorRow1">
            <argument name="property" value="PageBuilderBackgroundColor_Hex_Grey"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceRow1">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsRow1"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragHeaderToRow1">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStageRow1"/>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeadingRow1">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Add 2nd row and set appearance to Full Width -->
        <comment userInput="Add 2nd row and set appearance to Full Width" stepKey="commentAdd2ndRow"/>
        <actionGroup ref="dragContentTypeToDropZone" stepKey="dragRow2IntoStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentTypeIndex" value="2"/>
            <argument name="dropZoneIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStageRow2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColorRow2">
            <argument name="property" value="PageBuilderBackgroundColor_Red"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceRow2">
            <argument name="property" value="PageBuilderRowAppearance_FullWidth"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsRow2"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeaderToRow2">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="contentTypeIndex" value="2"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStageRow2">
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeadingRow2">
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Add 3rd row and set appearance to Full Bleed -->
        <comment userInput="Add 3rd row and set appearance to Full Bleed" stepKey="commentAdd3rdRow"/>
        <actionGroup ref="dragContentTypeToDropZone" stepKey="dragRow3IntoStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentTypeIndex" value="3"/>
            <argument name="dropZoneIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStageRow3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColorRow3">
            <argument name="property" value="PageBuilderBackgroundColor_Yellow"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAppearanceRow3">
            <argument name="property" value="PageBuilderRowAppearance_FullBleed"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsRow3"/>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragHeaderToRow3">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
            <argument name="contentTypeIndex" value="3"/>
            <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStageRow3">
            <argument name="index" value="3"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeadingRow3">
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceContained(('1', PageBuilderRowAppearance_Contained.value)}}" stepKey="waitForAppearanceVisible1"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceFullWidthFullBleed(('2', PageBuilderRowAppearance_FullWidth.value)}}" stepKey="waitForAppearanceVisible2"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceFullWidthFullBleed(('3', PageBuilderRowAppearance_FullBleed.value)}}" stepKey="waitForAppearanceVisible3"/>
        <actionGroup ref="validateContainedRowAppearance" stepKey="validateContainedRowAppearanceOnStage"/>
        <actionGroup ref="validateFullWidthRowAppearance" stepKey="validateFullWidthRowAppearanceOnStage">
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="2"/>
            <argument name="affordanceValue" value="{{PageBuilderRowAffordanceWidth.value}}"/>
        </actionGroup>
        <actionGroup ref="validateFullBleedRowAppearance" stepKey="validateFullBleedRowAppearanceOnStage">
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="3"/>
            <argument name="affordanceValue" value="{{PageBuilderRowAffordanceWidth.value}}"/>
        </actionGroup>
        <!-- Validate Stage after save -->
        <comment userInput="Validate Stage after save" stepKey="commentValidateStageAfterSave"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceContained(('1', PageBuilderRowAppearance_Contained.value)}}" stepKey="waitForAppearanceVisible1AfterSave"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceFullWidthFullBleed(('2', PageBuilderRowAppearance_FullWidth.value)}}" stepKey="waitForAppearanceVisible2AfterSave"/>
        <waitForElementVisible selector="{{RowOnStage.appearanceFullWidthFullBleed(('3', PageBuilderRowAppearance_FullBleed.value)}}" stepKey="waitForAppearanceVisible3AfterSave"/>
        <actionGroup ref="validateContainedRowAppearance" stepKey="validateContainedRowAppearanceOnStage2"/>
        <actionGroup ref="validateFullWidthRowAppearance" stepKey="validateFullWidthRowAppearanceOnStage2">
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="2"/>
            <argument name="affordanceValue" value="{{PageBuilderRowAffordanceWidth.value}}"/>
        </actionGroup>
        <actionGroup ref="validateFullBleedRowAppearance" stepKey="validateFullBleedRowAppearanceOnStage2">
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="3"/>
            <argument name="affordanceValue" value="{{PageBuilderRowAffordanceWidth.value}}"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <waitForElementVisible selector="{{RowOnStorefront.appearance(('1', PageBuilderRowAppearance_Contained.value)}}" stepKey="waitForAppearanceVisibleStorefront1"/>
        <waitForElementVisible selector="{{RowOnStorefront.appearance(('2', PageBuilderRowAppearance_FullWidth.value)}}" stepKey="waitForAppearanceVisibleStorefront2"/>
        <waitForElementVisible selector="{{RowOnStorefront.appearance(('3', PageBuilderRowAppearance_FullBleed.value)}}" stepKey="waitForAppearanceVisibleStorefront3"/>
        <actionGroup ref="validateContainedRowAppearance" stepKey="validateContainedRowAppearanceOnStorefront">
            <argument name="pageOrStageWidthJS" value="{{PageBuilderStoreFront.pageWidthJS}}"/>
            <argument name="section" value="RowOnStorefront"/>
        </actionGroup>
        <actionGroup ref="validateFullWidthRowAppearance" stepKey="validateFullWidthRowAppearanceOnStorefront">
            <argument name="pageOrStageWidthJS" value="{{PageBuilderStoreFront.pageWidthJS}}"/>
            <argument name="section" value="RowOnStorefront"/>
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="validateFullBleedRowAppearance" stepKey="validateFullBleedRowAppearanceOnStorefront">
            <argument name="pageOrStageWidthJS" value="{{PageBuilderStoreFront.pageWidthJS}}"/>
            <argument name="section" value="RowOnStorefront"/>
            <argument name="childContentType" value="PageBuilderHeadingContentType"/>
            <argument name="rowIndex" value="3"/>
        </actionGroup>
    </test>
</tests>
