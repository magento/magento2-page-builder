<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AddNewsletterContentBlockToCMSPage">
        <annotations>
            <features value="PageBuilder base functionality MAGETWO-83921"/>
            <stories value="Newsletter MAGETWO-83937"/>
            <title value="Add Newsletter in PageBuilder for new CMS page and view on Storefront"/>
            <description value="The user should be able to add newsletter content types and they should be visible on frontend"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84269"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="waitForElementVisible" />
        <click selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterNewsletterTypePropertyButtonText">
            <argument name="property" value="PageBuilderNewsletterTypeButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterNewsletterTypePropertyLabel">
            <argument name="property" value="PageBuilderNewsletterTypeLabelProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterNewsletterTypePropertyPlaceholder">
            <argument name="property" value="PageBuilderNewsletterTypePlaceholderProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterNewsletterTypePropertyTitle">
            <argument name="property" value="PageBuilderNewsletterTypeTitleProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <waitForElementVisible time="5" selector="{{CmsNewPagePageContentSection.header}}" stepKey="waitForContentHeader" />
        <waitForElementNotVisible time="10" selector="{{CmsNewPagePageActionsSection.spinner}}" stepKey="waitForCmsPageSpinner" />
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <waitForElementVisible time="15" selector="{{NewsletterOnFrontend.form}}" stepKey="waitForNewsletterFormElementVisible" />
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextProperty">
            <argument name="property" value="PageBuilderNewsletterTypeButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeLabelProperty">
            <argument name="property" value="PageBuilderNewsletterTypeLabelProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seePlaceholderProperty">
            <argument name="property" value="PageBuilderNewsletterTypePlaceholderProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeTitleProperty">
            <argument name="property" value="PageBuilderNewsletterTypeTitleProperty"/>
        </actionGroup>
        <amOnPage url="newsletter{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{NewsletterOnFrontend.form}}" stepKey="seeNewsletterForm"/>
        <seeElement selector="{{NewsletterOnFrontend.title('Newsletter title')}}" stepKey="seeNewsletterTitle"/>
        <seeElement selector="{{NewsletterOnFrontend.placeholder('Newsletter placeholder')}}" stepKey="seeNewsletterPlaceholder"/>
        <seeElement selector="{{NewsletterOnFrontend.label('Newsletter label')}}" stepKey="seeNewsletterLabel"/>
        <seeElement selector="{{NewsletterOnFrontend.button('Newsletter button text')}}" stepKey="seeNewsletterButtonText"/>
    </test>
    <test name="RemoveNewsletterFromStage">
        <annotations>
            <features value="PageBuilder base functionality MAGETWO-83921"/>
            <stories value="Newsletter MAGETWO-83937"/>
            <title value="Remove newsletter content block from stage"/>
            <description value="A user should be able to remove newsletter block from a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84919"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <fillField selector="{{PageBuilderActionsSection.searchPanel}}" userInput="news" stepKey="fillSearch"/>
        <see userInput="Newsletter" selector="{{PageBuilderActionsSection.searchResults}}" stepKey="validateSearchResults"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderNewsletterContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
    </test>
    <test name="NewsletterValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Newsletter - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Newsletter."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84275"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-newsletter"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <click selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragNewsletterIntoStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderNewsletterContentBlock"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterNewsletterTitle">
            <argument name="property" value="PageBuilderNewsletterTypeTitleProperty"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <waitForElementVisible selector="{{NewsletterOnStage.default('1', PageBuilderAdvancedBorderPropertyNone.value, PageBuilderAdvancedBorderRadiusDefaultProperty.value, PageBuilderMarginsPropertyDefault.value, PageBuilderPaddingPropertyDefault.value)}}" stepKey="waitForStyle"/>
    </test>
</tests>
