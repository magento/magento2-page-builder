<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="TextAddTextContentBlockToCMSPage">
        <annotations>
            <features value="PageBuilder base functionality MAGETWO-83921"/>
            <stories value="Text MAGETWO-83925"/>
            <title value="Add Text in PageBuilder for new CMS page and view on Storefront"/>
            <description value="A user should be able to add text content block into a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84263"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder1"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <fillField selector="{{CmsNewPagePageActionsSection.pageTitle}}" userInput="{{PageBuilderTextContentBlock.cmsPageLinkName}}" stepKey="enterCmsPageLinkTitle"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPageLink"/>
        <!-- Current implementation does not support string literals and variables. Re-factor once this feature is supported
        <grabFromCurrentUrl url="~/page_id/(\d+)/~" stepKey="grabFromCurrentUrlCmsPageId"/> -->
        <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForEditPanelSpinner"/>
        <waitForElementVisible selector="div.modal-content div[aria-label='Insert Variable']" stepKey="waitForVariableButton"/>
        <click selector="div.modal-content div[aria-label='Insert Variable']" stepKey="clickInsertVariableWidget"/>
        <waitForLoadingMaskToDisappear stepKey="waitForVariablesSpinner"/>
        <checkOption selector="input[value='default:web/unsecure/base_url']" stepKey="checkBaseUrl"/>
        <click selector="#insert_variable" stepKey="clickInsertVariableButton"/>
        <waitForElementNotVisible selector="#insert_variable" stepKey="waitForVariableModalToClose"/>
        <click selector="div.modal-content div[aria-label='Insert Widget']" stepKey="clickInsertWidgetWidget"/>
        <waitForElementVisible selector="#select_widget_type" stepKey="waitForWidgetSelectVisible"/>
        <selectOption selector="#select_widget_type" userInput="Magento\Cms\Block\Widget\Page\Link" stepKey="selectCMSPageLinkWidget"/>
        <waitForLoadingMaskToDisappear stepKey="waitForCMSPageLinkWidgetForm"/>
        <click selector="//button/span[contains(text(), 'Select Page...')]" stepKey="clickSelectPageButton"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSelectPageModal"/>
        <fillField selector="input[name='chooser_title']" userInput="{{PageBuilderTextContentBlock.cmsPageLinkName}}" stepKey="enterPageNameInSearch"/>
        <click selector="button[data-action='grid-filter-apply']" stepKey="clickSearchButton"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSearchResult"/>
        <click selector="//td[contains(@class, 'col-url')][contains(text(), '{{PageBuilderTextContentBlock.cmsPageLinkName}}')]" stepKey="clickCmsPageLinkRow"/>
        <waitForElementNotVisible selector="//td[contains(@class, 'col-url')][contains(text(), '{{PageBuilderTextContentBlock.cmsPageLinkName}}')]" stepKey="waitForPageSelectionModalToClose"/>
        <waitForLoadingMaskToDisappear stepKey="waitForPageSelectionModalToClose2"/>
        <waitForElementVisible selector="#insert_button" stepKey="waitForInsertButtonVisible"/>
        <moveMouseOver selector="#insert_button" stepKey="onMouseOverInsertButton"/>
        <click selector="#insert_button" stepKey="clickInsertWidget"/>
        <waitForElementNotVisible selector="#insert_button" stepKey="waitForInsertWidgetModalToClose"/>
        <executeJS function="tinymce.activeEditor.setContent(tinymce.activeEditor.getContent() + 'This is some text')" stepKey="addTextToWYSIWYG"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <see selector="div.pagebuilder-html" userInput="{{config path=&quot;web/unsecure/base_url&quot;}}" stepKey="seeVariableCodeInStage"/>
        <!-- Current implementation does not support string literals and variables. Re-factor once this feature is supported -->
        <see selector="div.pagebuilder-html"
             userInput="{{widget type=&quot;Magento\\Cms\\Block\\Widget\\Page\\Link&quot; template=&quot;widget/link/link_block.phtml&quot; page_id="
             stepKey="seeWidgetCodeInStage"/>
        <see selector="div.pagebuilder-html" userInput="This is some text" stepKey="seeTypedTextInStage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="{{PageBuilderTextContentBlock.name}}{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="div.block-cms-link a[href*='{{PageBuilderTextContentBlock.cmsPageLinkName}}']" stepKey="seeHomePageWidgetOnStorefront"/>
        <see userInput="This is some text" stepKey="seeTypedTextOnStorefront"/>
    </test>
    <test name="TextRemoveTextFromStage">
        <annotations>
            <features value="PageBuilder base functionality MAGETWO-83921"/>
            <stories value="Text MAGETWO-83925"/>
            <title value="Remove a text content block from stage"/>
            <description value="A user should be able to remove text block from a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84919"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderTextContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
    </test>
    <test name="TextValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Text - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Text."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84275"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragTextIntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <waitForElementVisible selector="{{TextOnStage.default('1', PageBuilderAdvancedBorderPropertyNone.value, PageBuilderAdvancedBorderRadiusDefaultProperty.value, PageBuilderMarginsPropertyDefault.value, PageBuilderPaddingPropertyDefault.value)}}" stepKey="waitForStyle"/>
    </test>
</tests>