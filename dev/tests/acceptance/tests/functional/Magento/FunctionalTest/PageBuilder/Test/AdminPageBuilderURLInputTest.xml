<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AdminPageBuilderURLInputTest">
        <annotations>
            <features value="Pagebuilder: URL Input"/>
            <stories value="MAGETWO-71571: [UI Component] URL Input: External Link"/>
            <title value="Admin are able to add External URL link into PageBuilder content"/>
            <description value="Admin are able to add External URL link into PageBuilder content"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89379"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-urlInput"/>
        </annotations>
        <before>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logout" stepKey="logout"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(PageBuilderButtonsContentBlock.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="seeButtonLinkSelect"/>
        <seeOptionIsSelected selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" userInput="URL" stepKey="seeButtonLinkSelectedByDefault" />
        <actionGroup ref="fillSlideOutPanelDropdownField" stepKey="fillButton1LinkField">
            <argument name="property" value="PageBuilderButtonItemLinkProperty"/>
            <argument name="selection" value="ExternalLink"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>

        <!--Go to storefront to verify External Link-->
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad  stepKey="waitForPageLoad1"/>
        <seeElement selector="{{PageBuilderURLOnStoreFrontSection.ExternalURLInCurrentTab(PageBuilderButtonItemLinkProperty.value)}}" stepKey="seeExternalLinkOnStoreFront" />
        <click selector=".pagebuilder-button-primary" stepKey="clickButton"/>
        <grabFromCurrentUrl stepKey="grabFromCurrentUrl1"/>
        <assertEquals stepKey="assertEquals1" message="pass">
            <expectedResult type="string">{{PageBuilderButtonItemSecureLinkProperty._value}}</expectedResult>
            <actualResult type="variable">grabFromCurrentUrl1</actualResult>
        </assertEquals>
        <waitForPageLoad stepKey="waitForPageLoad2" />

        <!--Go to admin to edit Secure External Link-->
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector=".placeholder-text" stepKey="clickOnEditButton"/>
        <waitForElementVisible selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="waitForSettingBtn" />
        <click selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="clickSelectButtonOnFirstItem"/>
        <actionGroup ref="fillSlideOutPanelDropdownField" stepKey="fillButton1SecureLinkField">
            <argument name="property" value="PageBuilderButtonItemSecureLinkProperty"/>
            <argument name="selection" value="ExternalLink"/>
        </actionGroup>
        <waitForElementVisible selector=".admin__control-checkbox" stepKey="waitForCheckboxVisible" />
        <click selector="//label[text()='Open in new tab']" stepKey="clickOpenNewTabCheckBox" />
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>

        <!--Go to storefront to verify Secure External Link-->
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage2"/>
        <waitForPageLoad  stepKey="waitForPageLoad3"/>
        <seeElement selector="{{PageBuilderURLOnStoreFrontSection.ExternalURLInNewTab(PageBuilderButtonItemSecureLinkProperty.value)}}" stepKey="seeExternalSecureLinkOnStoreFront" />
        <click selector=".pagebuilder-button-primary" stepKey="clickButton2"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <grabFromCurrentUrl stepKey="grabFromCurrentUrl2"/>
        <assertEquals stepKey="assertEquals2" message="pass">
            <expectedResult type="string">{{PageBuilderButtonItemSecureLinkProperty._value}}</expectedResult>
            <actualResult type="variable">grabFromCurrentUrl2</actualResult>
        </assertEquals>
    </test>
    <test name="AdminPageBuilderCategoryButtonLinkTest">
        <annotations>
            <features value="Pagebuilder: URL Input"/>
            <stories value="MAGETWO-88961: [UI Component] URL Input: Category Link"/>
            <title value="Admin are able to add Category link into PageBuilder content"/>
            <description value="Admin are able to add Category link link into PageBuilder content"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89771"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-urlInput"/>
        </annotations>
        <before>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logout" stepKey="logout"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <createData entity="SimpleSubCategory" stepKey="createCategoryB"/>
        <createData entity="NewSubCategoryWithParent" stepKey="createSubCategoryY">
            <requiredEntity createDataKey="createCategoryB"/>
        </createData>
        <createData entity="_defaultCategory" stepKey="createCategoryA"/>
        <createData entity="NewSubCategoryWithParent" stepKey="createSubCategoryX">
            <requiredEntity createDataKey="createCategoryA"/>
        </createData>

        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(PageBuilderButtonsContentBlock.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>

        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStageForButtonItem">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>

        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="seeButtonLinkSelect"/>
        <selectOption selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderButtonItemLinkProperty.section, PageBuilderButtonItemLinkProperty.fieldName)}}" userInput="Category" stepKey="selectOption" />

        <!--See dropdown beside Button Link Select-->
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="waitButtonLinkDropdownInput" />
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="seeButtonLinkDropdownInput" />
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput1" />
        <see userInput="Default Category" stepKey="seeLevel1Category"/>
        <see userInput="$createCategoryA.name$" stepKey="seeLevel2Category"/>
        <dontSee userInput="$createSubCategoryX.name$" stepKey="dontSeeLevel3Category"/>

        <!--Type 2 first letters into Search box-->
        <pressKey selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" parameterArray="['su',\Facebook\WebDriver\WebDriverKeys::ENTER]" stepKey="pressKeyEnter"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.SearchResult($createSubCategoryX.name$)}}" stepKey="waitForSearchResult" />
        <see userInput="$createSubCategoryX.name$" stepKey="seeSubCategoryOnSearchResult"/>
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createSubCategoryX.name$)}}" stepKey="clickSubCategoryXOnSearchResult"/>
        <dontSee selector="{{PageBuilderButtonLinkSection.SearchResultBox}}" stepKey="dropdownCollapses" />
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown1"/>
        <assertEquals stepKey="assertEquals1" message="pass">
            <expectedResult type="string">$createSubCategoryX.name$</expectedResult>
            <actualResult type="variable">textFromDropDown1</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField1" />

        <!--Expand dropdown again to verify highlighted not cleared yet-->
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput3" />
        <seeInField  selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" userInput="su" stepKey="seeSearchNotCleared"/>
        <wait time="3" stepKey="wait"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkItemSelected($createSubCategoryX.name$)}}" stepKey="seeSearchResultHighlighted" />

        <!--Select another category from dropdown-->
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createSubCategoryY.name$)}}" stepKey="clickSubCategoryYOnSearchResult"/>
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown2"/>
        <assertEquals stepKey="assertEquals2" message="pass">
            <expectedResult type="string">$createSubCategoryY.name$</expectedResult>
            <actualResult type="variable">textFromDropDown2</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField2" />
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>

        <!--Go to storefront to verify Category Link-->
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad  stepKey="waitForPageLoad1"/>
        <seeElement selector="{{PageBuilderCatalogOnStoreFrontSection.CategoryLink($createSubCategoryY.name_lwr$)}}" stepKey="seeExternalLinkOnStoreFront" />
        <click selector=".pagebuilder-button-primary" stepKey="clickButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <see userInput="$createSubCategoryY.name$" stepKey="seeCategoryName" />

        <deleteData createDataKey="createSubCategoryY" stepKey="deletePreReqSubCategoryY" />
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector=".placeholder-text" stepKey="clickOnEditButton"/>
        <waitForElementVisible selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="waitForSettingBtn" />
        <click selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="clickSelectButtonOnFirstItem"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect2"/>
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown3"/>
        <assertRegExp stepKey="assertEquals3" message="pass">
            <expectedResult type="string">/Category with ID: [0-9]+ doesn't exist$/</expectedResult>
            <actualResult type="variable">textFromDropDown3</actualResult>
        </assertRegExp>
        <deleteData createDataKey="createCategoryA" stepKey="deletePreReqCatalogA" />
    </test>
    <test name="AdminPageBuilderProductButtonLinkTest">
        <annotations>
            <features value="Pagebuilder: URL Input"/>
            <stories value="MAGETWO-88962: [UI Component] URL Input: Product Link"/>
            <title value="Admin are able to add Product link into PageBuilder content"/>
            <description value="Admin are able to add Product link link into PageBuilder content"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89771"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-urlInput"/>
        </annotations>
        <before>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logout" stepKey="logout"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
        <createData entity="_newDefaultProduct" stepKey="createPreReqProduct1">
            <requiredEntity createDataKey="createPreReqCategory"/>
        </createData>
        <createData entity="_newDefaultProduct" stepKey="createPreReqProduct2">
            <requiredEntity createDataKey="createPreReqCategory"/>
        </createData>
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>

        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(PageBuilderButtonsContentBlock.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>

        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStageForButtonItem">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>

        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="seeButtonLinkSelect"/>
        <selectOption selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderButtonItemLinkProperty.section, PageBuilderButtonItemLinkProperty.fieldName)}}" userInput="Product" stepKey="selectOption" />

        <!--See dropdown beside Button Link Select-->
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="waitButtonLinkDropdownInput" />
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="seeButtonLinkDropdownInput" />
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput1" />
        <dontSee userInput="$createPreReqProduct1.name$" stepKey="dontSeeProduct1"/>
        <dontSee userInput="$createPreReqProduct2.name$" stepKey="dontSeeProduct2"/>

        <!--Type 2 first letters into Search box-->
        <pressKey selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" parameterArray="['te',\Facebook\WebDriver\WebDriverKeys::ENTER]" stepKey="pressKeyEnter"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.SearchResult($createPreReqProduct1.name$)}}" stepKey="waitForSearchResult" />
        <see userInput="$createPreReqProduct1.name$" stepKey="seeProduct1OnSearchResult"/>
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createPreReqProduct1.name$)}}" stepKey="clickProduct1XOnSearchResult"/>
        <dontSee selector="{{PageBuilderButtonLinkSection.SearchResultBox}}" stepKey="dropdownCollapses" />
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown1"/>
        <assertEquals stepKey="assertEquals1" message="pass">
            <expectedResult type="string">$createPreReqProduct1.name$</expectedResult>
            <actualResult type="variable">textFromDropDown1</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField1" />

        <!--Expand dropdown again to verify highlighted not cleared yet-->
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput2" />
        <seeInField  selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" userInput="te" stepKey="seeSearchNotCleared"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkItemSelected($createPreReqProduct1.name$)}}" stepKey="seeSearchResultHighlighted" />

        <!--Select another product from dropdown-->
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createPreReqProduct2.name$)}}" stepKey="clickProduct2OnSearchResult"/>
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown2"/>
        <assertEquals stepKey="assertEquals2" message="pass">
            <expectedResult type="string">$createPreReqProduct2.name$</expectedResult>
            <actualResult type="variable">textFromDropDown2</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField2" />
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>

        <!--Go to storefront to verify Product Link-->
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad  stepKey="waitForPageLoad1"/>
        <seeElement selector="{{PageBuilderCatalogOnStoreFrontSection.ProductLink($createPreReqProduct2.name$)}}" stepKey="seeExternalLinkOnStoreFront" />
        <click selector=".pagebuilder-button-primary" stepKey="clickButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <see userInput="$createPreReqProduct2.name$" stepKey="seeProductName" />

        <deleteData createDataKey="createPreReqProduct2" stepKey="deletePreReqProduct2" />
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector=".placeholder-text" stepKey="clickOnEditButton"/>
        <waitForElementVisible selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="waitForSettingBtn" />
        <click selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="clickSelectButtonOnFirstItem"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading1" />
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown3"/>
        <assertRegExp stepKey="assertEquals3" message="pass">
            <expectedResult type="string">/^Product with ID: [0-9]+ doesn't exist$/</expectedResult>
            <actualResult type="variable">textFromDropDown3</actualResult>
        </assertRegExp>
        <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory" />
        <deleteData createDataKey="createPreReqProduct1" stepKey="deletePreReqProduct1" />
    </test>
    <test name="AdminPageBuilderPageButtonLinkTest">
        <annotations>
            <features value="[CMS] Bluefoot Image MAGETWO-83833"/>
            <stories value="[UI Component] URL Input: CMS Link MAGETWO-MAGETWO-88960"/>
            <title value="Admin are able to add CMS Page link into PageBuilder content"/>
            <description value="Admin are able to add CMS Page link into PageBuilder content"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-90276"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logout" stepKey="logout"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <createData entity="_newDefaultCmsPage" stepKey="createCMSPageA" />
        <createData entity="_newDefaultCmsPage" stepKey="createCMSPageB" />
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage1">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>

        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(PageBuilderButtonsContentBlock.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>

        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStageForButtonItem">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>

        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="seeButtonLinkSelect"/>
        <selectOption selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderButtonItemLinkProperty.section, PageBuilderButtonItemLinkProperty.fieldName)}}" userInput="Page" stepKey="selectOption" />

        <!--See dropdown beside Button Link Select-->
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="waitButtonLinkDropdownInput" />
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="seeButtonLinkDropdownInput" />
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput1" />
        <see userInput="$createCMSPageA.title$" stepKey="seeCMSPageA"/>

        <!--Type 2 first letters into Search box-->
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" stepKey="focusOnField"/>
        <fillField selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" userInput="cm" stepKey="fill2FirstLetters"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.SearchResult($createCMSPageA.title$)}}" stepKey="waitForSearchResult" />
        <seeElement selector="{{PageBuilderButtonLinkSection.SearchResult($createCMSPageA.title$)}}" stepKey="seeCMSPageAOnSearchResult"/>
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createCMSPageA.title$)}}" stepKey="clickCMSPageAXOnSearchResult"/>
        <dontSee selector="{{PageBuilderButtonLinkSection.SearchResultBox}}" stepKey="dropdownCollapses" />
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown1"/>
        <assertEquals stepKey="assertEquals1" message="pass">
            <expectedResult type="string">$createCMSPageA.title$</expectedResult>
            <actualResult type="variable">textFromDropDown1</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField1" />

        <!--Expand dropdown again to verify highlighted not cleared yet-->
        <click selector="{{PageBuilderButtonLinkSection.ButtonLinkDropdown}}" stepKey="expandButtonLinkDropdownInput2" />
        <seeInField  selector="{{PageBuilderButtonLinkSection.ButtonLinkSearch}}" userInput="cm" stepKey="seeSearchNotCleared"/>
        <seeElement selector="{{PageBuilderButtonLinkSection.ButtonLinkItemSelected($createCMSPageA.title$)}}" stepKey="seeSearchResultHighlighted" />

        <!--Select another page from dropdown-->
        <click selector="{{PageBuilderButtonLinkSection.SearchResult($createCMSPageB.title$)}}" stepKey="clickCMSPageBOnSearchResult"/>
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown2"/>
        <assertEquals stepKey="assertEquals2" message="pass">
            <expectedResult type="string">$createCMSPageB.title$</expectedResult>
            <actualResult type="variable">textFromDropDown2</actualResult>
        </assertEquals>
        <seeElement selector="{{PageBuilderButtonLinkSection.RemoveBtn}}" stepKey="seeXButtonInField2" />
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>

        <!--Go to storefront to verify CMS Page Link-->
        <amOnPage url="$$createCMSPage.identifier$$" stepKey="amOnPageTestPage"/>
        <waitForPageLoad  stepKey="waitForPageLoad1"/>
        <seeElement selector="{{PageBuilderPageOnStoreFrontSection.CMSPageLink($createCMSPageB.identifier$)}}" stepKey="seePageLinkOnStoreFront" />
        <click selector=".pagebuilder-button-primary" stepKey="clickButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <see userInput="$createCMSPageB.title$" stepKey="seePageName" />

        <!--Verify Link when Page get deleted -->
        <deleteData createDataKey="createCMSPageB" stepKey="deleteCreatedCMSPageB" />
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <click selector=".placeholder-text" stepKey="clickOnEditButton"/>
        <waitForElementVisible selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="waitForSettingBtn" />
        <click selector="//div[@class='element-children buttons-container ui-sortable']//a[@title='Edit']" stepKey="clickSelectButtonOnFirstItem"/>
        <waitForElementVisible selector="{{PageBuilderButtonLinkSection.ButtonLinkSelect}}" stepKey="waitForButtonLinkSelect2"/>
        <grabTextFrom selector="{{PageBuilderButtonLinkSection.DropdownInput}}" stepKey="textFromDropDown3"/>
        <assertRegExp stepKey="assertEquals3" message="pass">
            <expectedResult type="string">/^Page with ID: [0-9]+ doesn't exist$/</expectedResult>
            <actualResult type="variable">textFromDropDown3</actualResult>
        </assertRegExp>
        <deleteData createDataKey="createCMSPageA" stepKey="deletePreReqCMSPageA" />
    </test>
</tests>
