<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="MapDefaultState">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Default Map State"/>
            <description value="Tests default state of a map content block in the stage and storefront"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88749"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Verify Default Map in Stage -->
        <actionGroup ref="validateDefaultMapStage" stepKey="validateMapStage"/>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtons"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinStage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Verify Default Map in Stage After Page Save -->
        <actionGroup ref="validateDefaultMapStage" stepKey="validateMapStage2"/>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtons2"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinStage2"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <!-- Verify Default Map in Storefront -->
        <actionGroup ref="validateDefaultMapStoreFront" stepKey="validateDefaultMapStoreFront"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinStoreFront">
            <argument name="property" value="MapOnFrontend"/>
        </actionGroup>
    </test>
    <test name="MapEditPanelGeneralSectionDefaultState">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - General Section Default State"/>
            <description value="Tests the following for each attribute under General Section: 1) field exists, 2) field required or not, 3) field enabled/disabled, 4) field default value, 5) drop-down options count if applicable, 6) placeholder text if applicable"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88892"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Position -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seePositionAttribute">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validatePositionAttributeNotRequired">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateMapConfigurationPanel" stepKey="validateMapConfigurationPanel"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPin">
            <argument name="property" value="MapOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="validateMapHelperText" stepKey="validateMapHelperText"/>
        <!-- Width -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeWidthAttribute">
            <argument name="property" value="PageBuilderMapWidthDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateWidthAttributeNotRequired">
            <argument name="property" value="PageBuilderMapWidthDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="validateWidthAttributeNotDisabled">
            <argument name="property" value="PageBuilderMapWidthDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeWidthAttributeValue">
            <argument name="property" value="PageBuilderMapWidthDefaultProperty"/>
        </actionGroup>
        <!-- Height -->
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeHeightAttribute">
            <argument name="property" value="PageBuilderMapHeightDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateHeightAttributeNotRequired">
            <argument name="property" value="PageBuilderMapHeightDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="validateHeightAttributeNotDisabled">
            <argument name="property" value="PageBuilderMapHeightDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHeightAttributeValue">
            <argument name="property" value="PageBuilderMapHeightDefaultProperty"/>
        </actionGroup>
        <!-- Save page and verify fields -->
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Position -->
        <actionGroup ref="validateMapConfigurationPanel" stepKey="validateMapConfigurationPanel2"/>
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPin2">
            <argument name="property" value="MapOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="validateMapHelperText" stepKey="validateMapHelperText2"/>
        <!-- Width -->
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeWidthAttributeValue2">
            <argument name="property" value="PageBuilderMapWidthDefaultProperty"/>
        </actionGroup>
        <!-- Height -->
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHeightAttributeValue2">
            <argument name="property" value="PageBuilderMapHeightDefaultProperty"/>
        </actionGroup>
    </test>
    <test name="MapValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Map - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Map."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88893"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <waitForElementVisible selector="{{MapOnStage.default('1', PageBuilderAdvancedBorderPropertyNone.value, PageBuilderAdvancedBorderRadiusDefaultProperty.value, PageBuilderMarginsPropertyDefault.value, PageBuilderPaddingPropertyDefault.value, PageBuilderMapWidthDefaultProperty.value, PageBuilderMapHeightDefaultProperty.value)}}" stepKey="waitForStyle"/>
    </test>
    <test name="MapVerifyOnHoverOptionMenu">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Verify On Hover Option Menu"/>
            <description value="Test verifies that on hover option menu for Map content block contains all buttons"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88894"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="validateOnHoverOptionMenu" stepKey="validateOnHoverOptionMenu">
            <argument name="contentBlock" value="PageBuilderMapContentBlock"/>
        </actionGroup>
    </test>
    <test name="MapAddPinToMap">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Add Pin To Map"/>
            <description value="A user should be able to add a pin to a map and see the pin on Edit Panel, Stage, and Storefront."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88929"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Add Pin To Map -->
        <actionGroup ref="addMapPin" stepKey="enterMapPositionProperties">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <!-- Edit Panel: Verify Pin Position -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisible"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel"/>
        <assertRegExp expected="{{PageBuilderMapPositionDefaultProperty.position}}" actual="mapPositionEditPanel" actualType="variable" message="actual=$mapPositionEditPanel" stepKey="assertPinPosition"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Stage: Verify Map Has Pin -->
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPin"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Verify Map Has Pin After Save -->
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPin2"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Edit Panel: Verify Pin Position After Save -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisible2"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel2"/>
        <assertRegExp expected="{{PageBuilderMapPositionDefaultProperty.position}}" actual="mapPositionEditPanel" actualType="variable" message="actual=$mapPositionEditPanel" stepKey="assertPinPosition2"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <!-- Storefront: Verify Pin Position -->
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPin3">
            <argument name="property" value="MapOnFrontend"/>
        </actionGroup>
    </test>
    <test name="MapCannotAddPinToMapOnStageOrStoreFront">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Cannot Add Pin To Map In Stage Or Store Front"/>
            <description value="A user should not be able to add a pin to a map from the Stage nor the store front."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88895"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Try To Add Pin From Stage -->
        <waitForElementVisible selector="{{MapOnStage.map('1')}}" stepKey="waitForMapVisible" />
        <click selector="{{MapOnStage.map('1')}}" stepKey="clickMap"/>
        <!-- Check Stage -->
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinStage"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisibleEditPanel"/>
        <!-- Check Edit Panel -->
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinEditPanel">
            <argument name="property" value="MapOnConfigurationPanel"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <actionGroup ref="validateDefaultMapStoreFront" stepKey="validateDefaultMapStoreFront"/>
        <!-- Check Storefront -->
        <actionGroup ref="dontSeeMapPin" stepKey="dontSeeMapPinStoreFront">
            <argument name="property" value="MapOnFrontend"/>
        </actionGroup>
    </test>
    <test name="MapMoveMapPinByClick">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Move Map Pin By Clicking On Map"/>
            <description value="A user should be able to move a map pin by clicking on the map on the Edit Panel"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88930"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Add Pin To Map -->
        <actionGroup ref="addMapPin" stepKey="addMapPin">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <!-- Edit Panel: Get Initial Pin Location -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisibleEditPanel"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Stage: Get Initial Pin Location -->
        <waitForElementVisible selector="{{MapOnStage.mapPinLocation('1')}}" stepKey="waitForPinLocationStage"/>
        <grabAttributeFrom selector="{{MapOnStage.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Storefront: Get Initial Pin Location -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <waitForElementVisible selector="{{MapOnFrontend.mapPinLocation('1')}}" stepKey="waitForPinLocationStoreFront"/>
        <grabAttributeFrom selector="{{MapOnFrontend.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStoreFront"/>
        <!-- Switch Back To Backend -->
        <switchToNextTab stepKey="switchToNextTab"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Move Map Pin -->
        <actionGroup ref="moveMapPinByClick" stepKey="moveMapPinByClick"/>
        <!-- Edit Panel: Verify Pin Location Moved -->
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisibleEditPanel2"/>
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisibleEditPanel2"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel2"/>
        <assertNotEquals expected="mapPositionEditPanel" expectedType="variable" actual="mapPositionEditPanel2" actualType="variable" message="actual=$mapPositionEditPanel2, expected=$mapPositionEditPanel2" stepKey="assertPinLocationChangedEditPanel"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Stage: Verify Pin Location Moved -->
        <waitForElementVisible selector="{{MapOnStage.mapPinLocation('1')}}" stepKey="waitForPinLocationStage2"/>
        <grabAttributeFrom selector="{{MapOnStage.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStage2"/>
        <assertNotEquals expected="grabPinLocationStage" expectedType="variable" actual="grabPinLocationStage2" actualType="variable" message="actual=$grabPinLocationStage2, expected=$grabPinLocationStage2" stepKey="assertPinLocationChangedStage"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage3"/>
        <!-- Stage: Verify Map Pin Still Moved After Save -->
        <waitForElementVisible selector="{{MapOnStage.mapPinLocation('1')}}" stepKey="waitForPinLocationStage3"/>
        <grabAttributeFrom selector="{{MapOnStage.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStage3"/>
        <assertNotEquals expected="grabPinLocationStage" expectedType="variable" actual="grabPinLocationStage3" actualType="variable" message="actual=$grabPinLocationStage3, expected=$grabPinLocationStage" stepKey="assertPinLocationChangedStage2"/>
        <assertEquals expected="grabPinLocationStage2" expectedType="variable" actual="grabPinLocationStage3" actualType="variable" message="actual=$grabPinLocationStage3, expected=$grabPinLocationStage2" stepKey="assertPinLocationChangedStage3"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Edit Panel: Verify Pin Location Moved After Save -->
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisibleEditPanel3"/>
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisibleEditPanel3"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel3"/>
        <assertNotEquals expected="mapPositionEditPanel" expectedType="variable" actual="mapPositionEditPanel3" actualType="variable" message="actual=$mapPositionEditPanel3, expected=$mapPositionEditPanel" stepKey="assertPinLocationChangedEditPanel2"/>
        <assertStringStartsWith expected="mapPositionEditPanel2" expectedType="variable" actual="mapPositionEditPanel3" actualType="variable" message="actual=$mapPositionEditPanel3, expected=$mapPositionEditPanel2" stepKey="assertPinLocationChangedEditPanel3"/>
        <!-- Storefront: Verify Pin Location Moved On Storefront -->
        <switchToNextTab stepKey="switchToNextTab2"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront2">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <waitForElementVisible selector="{{MapOnFrontend.mapPinLocation('1')}}" stepKey="waitForPinLocationStoreFront2"/>
        <grabAttributeFrom selector="{{MapOnFrontend.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStoreFront2"/>
        <assertNotEquals expected="grabPinLocationStoreFront" expectedType="variable" actual="grabPinLocationStoreFront2" actualType="variable" message="actual=$grabPinLocationStoreFront2, expected=$grabPinLocationStoreFront" stepKey="assertPinLocationChangedStoreFront"/>
        <assertEquals expected="grabPinLocationStage2" expectedType="variable" actual="grabPinLocationStoreFront2" actualType="variable" message="actual=$grabPinLocationStoreFront2, expected=$mapPositionEditPanel2" stepKey="assertPinLocationSameOnStageAndStoreFront"/>
    </test>
    <test name="MapAddAllAttributes">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-83935"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Add Map With All Attributes"/>
            <description value="A user should be able to add a map with all attribute fields filled."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84914"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Add Pin To Map -->
        <actionGroup ref="addMapPin" stepKey="enterMapPositionProperties">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <!-- Verify Map Position -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisible"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel"/>
        <assertRegExp expected="{{PageBuilderMapPositionDefaultProperty.position}}" actual="mapPositionEditPanel" actualType="variable" message="actual=$mapPositionEditPanel" stepKey="assertPinPosition"/>
        <!-- Fill Remaining Fields -->
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMapWidthProperty">
            <argument name="property" value="PageBuilderMapWidthProperty75"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMapHeightProperty">
            <argument name="property" value="PageBuilderMapHeightProperty350"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedClassProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMarginsAndPadding" stepKey="enterAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Edit Panel -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinEditPanel">
            <argument name="property" value="MapOnConfigurationPanel"/>
        </actionGroup>
        <!-- Verify Map Position -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisible2"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel2"/>
        <assertRegExp expected="{{PageBuilderMapPositionDefaultProperty.position}}" actual="mapPositionEditPanel" actualType="variable" message="actual=$mapPositionEditPanel" stepKey="assertPinPosition2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMapWidthProperty">
            <argument name="property" value="PageBuilderMapWidthProperty75"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMapHeightProperty">
            <argument name="property" value="PageBuilderMapHeightProperty350"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginsAndPaddingFieldSlideOutPanel" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <!-- Validate Stage -->
        <actionGroup ref="validateMapOnStage" stepKey="validateMapStage">
            <argument name="width" value="PageBuilderMapWidthProperty75"/>
            <argument name="height" value="PageBuilderMapHeightProperty350"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="marginAndPadding" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtonsStage"/>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinStage"/>
        <!-- Validate Storefront -->
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <actionGroup ref="validateMapOnStoreFront" stepKey="validateMapStoreFront">
            <argument name="width" value="PageBuilderMapWidthProperty75"/>
            <argument name="height" value="PageBuilderMapHeightProperty350"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="marginAndPadding" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtonsStoreFront">
            <argument name="property" value="MapOnFrontend"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinStoreFront">
            <argument name="property" value="MapOnFrontend"/>
        </actionGroup>
    </test>
    <test name="MapDuplicate">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Duplicate Map"/>
            <description value="A user should be able to duplicate a map content block. Verify on Stage amd Storefront."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88896"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <!-- Fill All Fields -->
        <actionGroup ref="addMapPin" stepKey="enterMapPositionProperties">
            <argument name="property" value="PageBuilderMapPositionDefaultProperty"/>
        </actionGroup>
        <!-- Move Map Pin -->
        <actionGroup ref="moveMapPinByClick" stepKey="moveMapPinByClick"/>
        <!-- Edit Panel: Get Map Pin Position -->
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisibleEditPanel"/>
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisibleEditPanel"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterWidth">
            <argument name="property" value="PageBuilderMapWidthProperty75"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterHeight">
            <argument name="property" value="PageBuilderMapHeightProperty350"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMarginsAndPadding" stepKey="enterMarginsAndPaddings">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Stage: Get Map Pin Position -->
        <waitForElementVisible selector="{{MapOnStage.mapPinLocation('1')}}" stepKey="waitForPinLocationStage"/>
        <grabAttributeFrom selector="{{MapOnStage.mapPinLocation('1')}}" userInput="style" stepKey="grabPinLocationStage"/>
        <!-- Duplicate and Verify Stage -->
        <actionGroup ref="duplicateContentBlock" stepKey="duplicateContentBlock">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="validateMapOnStage" stepKey="validateDuplicateOnStage">
            <argument name="width" value="PageBuilderMapWidthProperty75"/>
            <argument name="height" value="PageBuilderMapHeightProperty350"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="marginAndPadding" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtonsStage">
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinStage">
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Verify Map Pin Position On Duplicate -->
        <waitForElementVisible selector="{{MapOnStage.mapPinLocation('2')}}" stepKey="waitForPinLocationStage2"/>
        <grabAttributeFrom selector="{{MapOnStage.mapPinLocation('2')}}" userInput="style" stepKey="grabPinLocationStage2"/>
        <assertEquals expected="grabPinLocationStage" expectedType="variable" actual="grabPinLocationStage2" actualType="variable" message="actual=$grabPinLocationStage2, expected=$grabPinLocationStage2" stepKey="assertPinLocationStage"/>
        <!-- Verify Edit Panel -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinEditPanel">
            <argument name="property" value="MapOnConfigurationPanel"/>
        </actionGroup>
        <!-- Edit Panel: Verify Map Pin Position -->
        <executeJS function="document.querySelector('{{MapOnConfigurationPanel.mapPositionJS}}').style.display = 'block'" stepKey="setPositionPropertyVisibleEditPanel2"/>
        <grabValueFrom selector="{{MapOnConfigurationPanel.mapPosition}}" stepKey="mapPositionEditPanel2"/>
        <assertEquals expected="mapPositionEditPanel" expectedType="variable" actual="mapPositionEditPanel2" actualType="variable" message="actual=$mapPositionEditPanel2, expected=$mapPositionEditPanel" stepKey="assertPinLocationEditPanel"/>
        <!-- Edit Panel: Verify Values -->
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMapWidth">
            <argument name="property" value="PageBuilderMapWidthProperty75"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMapHeight">
            <argument name="property" value="PageBuilderMapHeightProperty350"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="seeTextAlignment">
        <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="seeInMarginsAndPaddingFieldSlideOutPanel" stepKey="seeMarginsAndPaddings">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <!-- Verify Storefront -->
        <actionGroup ref="validateMapOnStoreFront" stepKey="validateDuplicateOnStoreFront">
            <argument name="width" value="PageBuilderMapWidthProperty75"/>
            <argument name="height" value="PageBuilderMapHeightProperty350"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="marginAndPadding" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="validateMapButtons" stepKey="validateMapButtonsStoreFront">
            <argument name="property" value="MapOnFrontend"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="verifyMapHasPin" stepKey="verifyMapHasPinStoreFront">
            <argument name="property" value="MapOnFrontend"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Verify Map Pin Position On Duplicate -->
        <waitForElementVisible selector="{{MapOnFrontend.mapPinLocation('2')}}" stepKey="waitForPinLocationStoreFront2"/>
        <grabAttributeFrom selector="{{MapOnFrontend.mapPinLocation('2')}}" userInput="style" stepKey="grabPinLocationStoreFront2"/>
        <assertEquals expected="grabPinLocationStage2" expectedType="variable" actual="grabPinLocationStoreFront2" actualType="variable" message="actual=$grabPinLocationStoreFront2, expected=$mapPositionEditPanel2" stepKey="assertPinLocationSameOnStageAndStoreFront"/>
    </test>
    <test name="MapDelete">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Map"/>
            <stories value="MAGETWO-83935"/>
            <stories value="MAGETWO-87083"/>
            <title value="Map - Delete Map"/>
            <description value="A user should be able to delete a map content block. Verify on Stage amd Storefront."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88897"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-map"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandGroupInteractive">
            <argument name="group" value="PageBuilderPanelGroupInteractive"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragContentBlockIntoStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
            <argument name="contentBlockType" value="PageBuilderMapContentBlock"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage3"/>
        <!-- Verify Map Not In Stage -->
        <dontSeeElementInDOM selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(PageBuilderMapContentBlock.role, '1')}}" stepKey="dontSeeContentBlockInStage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="prefix" value="map"/>
        </actionGroup>
        <!-- Verify Map Not In Storefront -->
        <dontSeeElementInDOM selector="{{MapOnFrontend.map('1')}}" stepKey="dontSeeContentBlockInStorefront"/>
    </test>
</tests>
