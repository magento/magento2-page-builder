<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AdvancedConfigurationEditPanelVisual">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Edit Panel Visual"/>
            <description value="Tests the following for each attribute under Advanced Configuration: 1) field exists, 2) field required or not, 3) field enabled/disabled, 4) field default value, 5) drop-down options count if applicable, 6) placeholder text if applicable"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89330"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragTextIntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Check Field Labels -->
        <comment userInput="Check Field Labels" stepKey="CommentFieldLabels"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="checkLabelMarginsAndPadding">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingDefaultProperty"/>
        </actionGroup>
        <!-- Check Required -->
        <comment userInput="Check Required" stepKey="CommentCheckRequired"/>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="checkRequiredMarginsAndPadding">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingDefaultProperty"/>
        </actionGroup>
        <!-- Check Disabled -->
        <comment userInput="Check Disabled" stepKey="CommentCheckDisabled"/>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="checkDisabledAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="checkDisabledBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="checkDisabledBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="checkDisabledBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="checkDisabledBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="checkDisabledCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <!-- Check Drop Down Counts -->
        <comment userInput="Check Drop Down Counts" stepKey="CommentCheckDropDownCounts"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderAdvancedAlignmentPropertyDefault.section, PageBuilderAdvancedAlignmentPropertyDefault.fieldName)}}" userInput="value" stepKey="getDropDownCountAlignment"/>
        <assertCount actual="getDropDownCountAlignment" actualType="variable" expected="4" expectedType="int" stepKey="assertDropDownCountAlignment"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderAdvancedBorderPropertyDefault.section, PageBuilderAdvancedBorderPropertyDefault.fieldName)}}" userInput="value" stepKey="getDropDownCountBorder"/>
        <assertCount actual="getDropDownCountBorder" actualType="variable" expected="10" expectedType="int" stepKey="assertDropDownCountBorder"/>
        <!-- Check Placeholder Text -->
        <comment userInput="Check Placeholder Text" stepKey="CommentCheckPlaceholderText"/>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="checkPlaceholderTextBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="checkPlaceholderTextBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="checkPlaceholderTextBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldNoPlaceholderText" stepKey="checkPlaceholderTextCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateMarginsAndPaddingPlaceholderTextSlideOutPanel" stepKey="checkPlaceholderTextMarginsAndPadding"/>
        <!-- Check Field After Labels & Field Notes -->
        <comment userInput="Check Field After Labels and Field Notes" stepKey="CommentFieldAfterLabels"/>
        <actionGroup ref="validateSlideOutPanelFieldAfterLabelText" stepKey="validateSlideOutPanelFieldAfterLabelTextBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldAfterLabelText" stepKey="validateSlideOutPanelFieldAfterLabelTextBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldAfterLabelText" stepKey="validateSlideOutPanelFieldAfterLabelTextBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldNoAfterLabelText" stepKey="validateSlideOutPanelFieldNoAfterLabelTextCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateAdvancedConfigurationNotes" stepKey="validateAdvancedConfigurationNotes"/>
        <!-- Enable Border And Check Other Fields Now Enabled -->
        <comment userInput="Enable Border And Check Other Fields Now Enabled" stepKey="CommentEnableBorder"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enableBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="validateBorderColorAttributeNotDisabled">
            <argument name="property" value="PageBuilderAdvancedBorderColorDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="validateBorderWidthAttributeNotDisabled">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <!-- Save page and verify fields (because some of them change) -->
        <comment userInput="Save page and verify fields (because some of them change)" stepKey="CommentSavePage"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <!-- Check Values After Save -->
        <comment userInput="Check Values After Save" stepKey="CommentFieldValues"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="checkAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="checkBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderWidthPropertyDefault.section, PageBuilderAdvancedBorderWidthPropertyDefault.fieldName)}}" stepKey="getBorderWidth"/>
        <assertEmpty actual="getBorderWidth" actualType="variable" message="Text field has text: $getBorderWidth" stepKey="assertBorderWidth"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="checkBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginsAndPaddingFieldSlideOutPanel" stepKey="checkMarginAndPadding">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingPropertyDefault"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalAlignment">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Alignment"/>
            <description value="Tests that the Alignment attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89331"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Alignment Type -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Alignment: Default -->
        <comment userInput="Add Alignment: Default" stepKey="commentAddAlignmentDefault"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectAlignmentDefault1">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Alignment: Left -->
        <comment userInput="Add Alignment: Left" stepKey="commentAddAlignmentLeft"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectAlignmentLeft">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Alignment: Center -->
        <comment userInput="Add Alignment: Center" stepKey="commentAddAlignmentCenter"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectAlignmentCenter">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Alignment: Right -->
        <comment userInput="Add Alignment: Right" stepKey="commentAddAlignmentRight"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectAlignmentRight">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Stage: Check Alignment: Default -->
        <comment userInput="Stage: Check Alignment: Default" stepKey="commentStageCheckDefault"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDefault">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Left -->
        <comment userInput="Stage: Check Alignment: Left" stepKey="commentStageCheckLeft"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageLeft">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Center -->
        <comment userInput="Stage: Check Alignment: Center" stepKey="commentStageCheckCenter"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageCenter">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Right -->
        <comment userInput="Stage: Check Alignment: Right" stepKey="commentStageCheckRight"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageRight">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Alignment: Default -->
        <comment userInput="Stage: Check Alignment: Default" stepKey="commentStageCheckDefault2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDefault2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Left -->
        <comment userInput="Stage: Check Alignment: Left2" stepKey="commentStageCheckLeft2"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageLeft2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Center -->
        <comment userInput="Stage: Check Alignment: Center" stepKey="commentStageCheckCenter2"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageCenter2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Alignment: Right -->
        <comment userInput="Stage: Check Alignment: Right" stepKey="commentStageCheckRight2"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStageRight2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Alignment: Default -->
        <comment userInput="Storefront: Check Alignment: Default" stepKey="commentStorefrontCheckDefault"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontDefault">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Alignment: Left -->
        <comment userInput="Storefront: Check Alignment: Left" stepKey="commentStorefrontCheckLeft"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStorefrontLeft">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyLeft"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Alignment: Center -->
        <comment userInput="Storefront: Check Alignment: Center" stepKey="commentStorefrontCheckCenter"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStorefrontCenter">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Alignment: Right -->
        <comment userInput="Storefront: Check Alignment: Right" stepKey="commentStorefrontCheckRight"/>
        <actionGroup ref="validateTextActiveAlignment" stepKey="validateStorefrontRight">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyRight"/>
            <argument name="index" value="4"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalBorder">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Border"/>
            <description value="Tests that the Border attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89332"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Border Type -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage5">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage6">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage7">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage8">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage9">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Border: None -->
        <comment userInput="Add Border: None" stepKey="commentAddBorderNone"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder1">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Border: Default -->
        <comment userInput="Add Border: Default" stepKey="commentAddBorderDefault"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Border: Dotted -->
        <comment userInput="Add Border: Dotted" stepKey="commentAddBorderDotted"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder3">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth3">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Border: Dashed -->
        <comment userInput="Add Border: Dashed" stepKey="commentAddBorderDashed"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder4">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDashed"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth4">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Border: Solid -->
        <comment userInput="Add Border: Solid" stepKey="commentAddBorderSolid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder5">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth5">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Add Border: Double -->
        <comment userInput="Add Border: Double" stepKey="commentAddBorderDouble"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText6">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection6"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder6">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth6">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings6"/>
        <!-- Add Border: Groove -->
        <comment userInput="Add Border: Groove" stepKey="commentAddBorderGroove"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage7">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="7"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage7">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="7"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText7">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection7"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder7">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyGroove"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth7">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings7"/>
        <!-- Add Border: Ridge -->
        <comment userInput="Add Border: Ridge" stepKey="commentAddBorderRidge"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage8">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="8"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage8">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="8"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText8">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection8"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder8">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyRidge"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth8">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings8"/>
        <!-- Add Border: Inset -->
        <comment userInput="Add Border: Inset" stepKey="commentAddBorderInset"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage9">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="9"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage9">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="9"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText9">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection9"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder9">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyInset"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth9">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings9"/>
        <!-- Add Border: Outset -->
        <comment userInput="Add Border: Outset" stepKey="commentAddBorderOutset"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage10">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="10"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage10">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="10"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText10">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection10"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder10">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyOutset"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth10">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings10"/>
        <!-- Stage: Check Border: None -->
        <comment userInput="Stage: Check Border: None" stepKey="commentStageCheckNone"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageNone">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border: Default -->
        <comment userInput="Stage: Check Border: Default" stepKey="commentStageCheckDefault"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDefault">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border: Dotted -->
        <comment userInput="Stage: Check Border: Dotted" stepKey="commentStageCheckDotted"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDotted">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDotted"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border: Dashed -->
        <comment userInput="Stage: Check Border: Dashed" stepKey="commentStageCheckDashed"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDashed">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDashed"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border: Solid -->
        <comment userInput="Stage: Check Border: Solid" stepKey="commentStageCheckSolid"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageSolid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Border: Double -->
        <comment userInput="Stage: Check Border: Double" stepKey="commentStageCheckDouble"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDouble">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <!-- Stage: Check Border: Groove -->
        <comment userInput="Stage: Check Border: Groove" stepKey="commentStageCheckGroove"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageGroove">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyGroove"/>
            <argument name="index" value="7"/>
        </actionGroup>
        <!-- Stage: Check Border: Ridge -->
        <comment userInput="Stage: Check Border: Ridge" stepKey="commentStageCheckRidge"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageRidge">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyRidge"/>
            <argument name="index" value="8"/>
        </actionGroup>
        <!-- Stage: Check Border: Inset -->
        <comment userInput="Stage: Check Border: Inset" stepKey="commentStageCheckInset"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInset">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyInset"/>
            <argument name="index" value="9"/>
        </actionGroup>
        <!-- Stage: Check Border: Outset -->
        <comment userInput="Stage: Check Border: Outset" stepKey="commentStageCheckOutset"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageOutset">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyOutset"/>
            <argument name="index" value="10"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Border: None -->
        <comment userInput="Stage: Check Border: None" stepKey="commentStageCheckNone2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageNone2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border: Default -->
        <comment userInput="Stage: Check Border: Default" stepKey="commentStageCheckDefault2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDefault2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border: Dotted -->
        <comment userInput="Stage: Check Border: Dotted" stepKey="commentStageCheckDotted2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDotted2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDotted"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border: Dashed -->
        <comment userInput="Stage: Check Border: Dashed" stepKey="commentStageCheckDashed2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDashed2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDashed"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border: Solid -->
        <comment userInput="Stage: Check Border: Solid" stepKey="commentStageCheckSolid2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageSolid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Border: Double -->
        <comment userInput="Stage: Check Border: Double" stepKey="commentStageCheckDouble2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageDouble2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <!-- Stage: Check Border: Groove -->
        <comment userInput="Stage: Check Border: Groove" stepKey="commentStageCheckGroove2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageGroove2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyGroove"/>
            <argument name="index" value="7"/>
        </actionGroup>
        <!-- Stage: Check Border: Ridge -->
        <comment userInput="Stage: Check Border: Ridge" stepKey="commentStageCheckRidge2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageRidge2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyRidge"/>
            <argument name="index" value="8"/>
        </actionGroup>
        <!-- Stage: Check Border: Inset -->
        <comment userInput="Stage: Check Border: Inset" stepKey="commentStageCheckInset2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInset2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyInset"/>
            <argument name="index" value="9"/>
        </actionGroup>
        <!-- Stage: Check Border: Outset -->
        <comment userInput="Stage: Check Border: Outset" stepKey="commentStageCheckOutset2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageOutset2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyOutset"/>
            <argument name="index" value="10"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Border: None -->
        <comment userInput="Storefront: Check Border: None" stepKey="commentStorefrontCheckNone2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontNone2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Border: Default -->
        <comment userInput="Storefront: Check Border: Default" stepKey="commentStorefrontCheckDefault2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontDefault2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Border: Dotted -->
        <comment userInput="Storefront: Check Border: Dotted" stepKey="commentStorefrontCheckDotted2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontDotted2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDotted"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Border: Dashed -->
        <comment userInput="Storefront: Check Border: Dashed" stepKey="commentStorefrontCheckDashed2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontDashed2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDashed"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Border: Solid -->
        <comment userInput="Storefront: Check Border: Solid" stepKey="commentStorefrontCheckSolid2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontSolid2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Storefront: Check Border: Double -->
        <comment userInput="Storefront: Check Border: Double" stepKey="commentStorefrontCheckDouble2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontDouble2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <!-- Storefront: Check Border: Groove -->
        <comment userInput="Storefront: Check Border: Groove" stepKey="commentStorefrontCheckGroove2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontGroove2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyGroove"/>
            <argument name="index" value="7"/>
        </actionGroup>
        <!-- Storefront: Check Border: Ridge -->
        <comment userInput="Storefront: Check Border: Ridge" stepKey="commentStorefrontCheckRidge2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontRidge2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyRidge"/>
            <argument name="index" value="8"/>
        </actionGroup>
        <!-- Storefront: Check Border: Inset -->
        <comment userInput="Storefront: Check Border: Inset" stepKey="commentStorefrontCheckInset2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontInset2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyInset"/>
            <argument name="index" value="9"/>
        </actionGroup>
        <!-- Storefront: Check Border: Outset -->
        <comment userInput="Storefront: Check Border: Outset" stepKey="commentStorefrontCheckOutset2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontOutset2">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyOutset"/>
            <argument name="index" value="10"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalBorderColor">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Border Color"/>
            <description value="Tests that the Border Color attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89333"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Border Color Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Border Color: Empty -->
        <comment userInput="Add Border Color: Empty" stepKey="commentAddBorderColorEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder1">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth1">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderColor1">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Border Color: PlainText -->
        <comment userInput="Add Border Color: PlainText Green" stepKey="commentAddBorderColorPlainText"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderColor2">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Border Color: #FF0000 -->
        <comment userInput="Add Border Color: Hex #FF0000" stepKey="commentAddBorderColorHex"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder3">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth3">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderColor3">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_FF0000"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Border Color: rgb(0,0,255) -->
        <comment userInput="Add Border Color: rgb(0,0,255)" stepKey="commentAddBorderColorRGB"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder4">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth4">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderColor4">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_rgb_0_0_255"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Border Color: Invalid -->
        <comment userInput="Add Border Color: Invalid" stepKey="commentAddBorderColorInvalid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder5">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth5">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderColor5">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_invalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Stage: Check Border Color: Empty -->
        <comment userInput="Stage: Check Border Color: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Plaintext -->
        <comment userInput="Stage: Check Border Color: Plaintext" stepKey="commentStageCheckPlaintext"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStagePlaintext">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Hex -->
        <comment userInput="Stage: Check Border Color: Hex" stepKey="commentStageCheckHex"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStageHex">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_FF0000_rgb"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Color: RGB -->
        <comment userInput="Stage: Check Border Color: RGB" stepKey="commentStageCheckRGB"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStageRGB">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_rgb_0_0_255"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Invalid -->
        <comment userInput="Stage: Check Border Color: Invalid" stepKey="commentStageCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInvalid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Border Color: Empty -->
        <comment userInput="Stage: Check Border Color: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Plaintext -->
        <comment userInput="Stage: Check Border Color: Plaintext" stepKey="commentStageCheckPlaintext2"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStagePlaintext2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Hex -->
        <comment userInput="Stage: Check Border Color: Hex" stepKey="commentStageCheckHex2"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStageHex2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_FF0000_rgb"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Color: RGB -->
        <comment userInput="Stage: Check Border Color: RGB" stepKey="commentStageCheckRGB2"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStageRGB2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_rgb_0_0_255"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Color: Invalid -->
        <comment userInput="Stage: Check Border Color: Invalid" stepKey="commentStageCheckInvalid2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInvalid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Border Color: Empty -->
        <comment userInput="Storefront: Check Border Color: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Border Color: Plaintext -->
        <comment userInput="Storefront: Check Border Color: Plaintext" stepKey="commentStorefrontCheckPlaintext"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStorefrontPlaintext">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Border Color: Hex -->
        <comment userInput="Storefront: Check Border Color: Hex" stepKey="commentStorefrontCheckHex"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStorefrontHex">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_FF0000_rgb"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Border Color: RGB -->
        <comment userInput="Storefront: Check Border Color: RGB" stepKey="commentStorefrontCheckRGB"/>
        <actionGroup ref="validateTextActiveBorderWithColor" stepKey="validateStorefrontRGB">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_rgb_0_0_255"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Border Color: Invalid -->
        <comment userInput="Storefront: Check Border Color: Invalid" stepKey="commentStorefrontCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontInvalid">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalBorderWidth">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Border Width"/>
            <description value="Tests that the Border Width attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89355"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Border Width Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Border Width: Empty -->
        <comment userInput="Add Border Width: Empty" stepKey="commentAddBorderWidthEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder1">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderWidth1">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Border Width: 0 -->
        <comment userInput="Add Border Width: 0" stepKey="commentAddBorderWidth0"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty0"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Border Width: 1 -->
        <comment userInput="Add Border Width: 1" stepKey="commentAddBorderWidth1"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder3">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderWidth3">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Border Width: 500 -->
        <comment userInput="Add Border Width: 500" stepKey="commentAddBorderWidth500"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder4">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderWidth4">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty500"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Border Width: Invalid -->
        <comment userInput="Add Border Width: Invalid" stepKey="commentAddBorderWidthInvalid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder5">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderWidth5">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyInvalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Stage: Check Border Width: Empty -->
        <comment userInput="Stage: Check Border Width: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 0 -->
        <comment userInput="Stage: Check Border Width: 0" stepKey="commentStageCheck0"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage0">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 1 -->
        <comment userInput="Stage: Check Border Width: 1" stepKey="commentStageCheck1"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage1">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 500 -->
        <comment userInput="Stage: Check Border Width: 500" stepKey="commentStageCheck500"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage500">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Width: Invalid -->
        <comment userInput="Stage: Check Border Width: Invalid" stepKey="commentStageCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInvalid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Border Width: Empty -->
        <comment userInput="Stage: Check Border Width: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 0 -->
        <comment userInput="Stage: Check Border Width: 0" stepKey="commentStageCheck02"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage02">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 1 -->
        <comment userInput="Stage: Check Border Width: 1" stepKey="commentStageCheck12"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage12">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Width: 500 -->
        <comment userInput="Stage: Check Border Width: 500" stepKey="commentStageCheck5002"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStage5002">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Width: Invalid -->
        <comment userInput="Stage: Check Border Width: Invalid" stepKey="commentStageCheckInvalid2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageInvalid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Border Width: Empty -->
        <comment userInput="Storefront: Check Border Width: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Border Width: 0 -->
        <comment userInput="Storefront: Check Border Width: 0" stepKey="commentStorefrontCheck0"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStorefront0">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Border Width: 1 -->
        <comment userInput="Storefront: Check Border Width: 1" stepKey="commentStorefrontCheck1"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStorefront1">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Border Width: 500 -->
        <comment userInput="Storefront: Check Border Width: 500" stepKey="commentStorefrontCheck500"/>
        <actionGroup ref="validateTextActiveBorderWithWidth" stepKey="validateStorefront500">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Border Width: Invalid -->
        <comment userInput="Storefront: Check Border Width: Invalid" stepKey="commentStorefrontCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontInvalid">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="index" value="5"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalBorderRadius">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Border Radius"/>
            <description value="Tests that the Border Radius attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89356"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Border Radius Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Border Radius: Empty -->
        <comment userInput="Add Border Radius: Empty" stepKey="commentAddBorderRadiusEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Border Radius: 0 -->
        <comment userInput="Add Border Radius: 0" stepKey="commentAddBorderRadius0"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Border Radius: 1 -->
        <comment userInput="Add Border Radius: 1" stepKey="commentAddBorderRadius1"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderRadius3">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Border Radius: 500 -->
        <comment userInput="Add Border Radius: 1" stepKey="commentAddBorderRadius500"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderRadius4">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty500"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Border Radius: Invalid -->
        <comment userInput="Add Border Radius: Invalid" stepKey="commentAddBorderRadiusInvalid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderRadius5">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusPropertyInvalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Stage: Check Border Radius: Empty -->
        <comment userInput="Stage: Check Border Radius: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 0 -->
        <comment userInput="Stage: Check Border Radius: 0" stepKey="commentStageCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage0">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 1 -->
        <comment userInput="Stage: Check Border Radius: 1" stepKey="commentStageCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage1">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 500 -->
        <comment userInput="Stage: Check Border Radius: 1" stepKey="commentStageCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage500">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: Invalid -->
        <comment userInput="Stage: Check Border Radius: Invalid" stepKey="commentStageCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStageInvalid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Border Radius: Empty -->
        <comment userInput="Stage: Check Border Radius: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 0 -->
        <comment userInput="Stage: Check Border Radius: 0" stepKey="commentStageCheck02"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage02">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 1 -->
        <comment userInput="Stage: Check Border Radius: 1" stepKey="commentStageCheck12"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage12">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: 500 -->
        <comment userInput="Stage: Check Border Radius: 1" stepKey="commentStageCheck5002"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage5002">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Border Radius: Invalid -->
        <comment userInput="Stage: Check Border Radius: Invalid" stepKey="commentStageCheckInvalid2"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStageInvalid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Border Radius: Empty -->
        <comment userInput="Storefront: Check Border Radius: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Border Radius: 0 -->
        <comment userInput="Storefront: Check Border Radius: 0" stepKey="commentStorefrontCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront0">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Border Radius: 1 -->
        <comment userInput="Storefront: Check Border Radius: 1" stepKey="commentStorefrontCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront1">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Border Radius: 500 -->
        <comment userInput="Storefront: Check Border Radius: 500" stepKey="commentStorefrontCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront500">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Border Radius: Invalid -->
        <comment userInput="Storefront: Check Border Radius: Invalid" stepKey="commentStorefrontCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoBorderRadius" stepKey="validateStorefrontInvalid">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="5"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalCSSClasses">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - CSS Classes"/>
            <description value="Tests that the CSS Classes attribute functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89357"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text CSS Classes Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add CSS Classes: Empty -->
        <comment userInput="Add CSS Classes: Empty" stepKey="commentAddCSSClassesEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="clearSlideOutPanelFieldGeneral" stepKey="clearCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add CSS Classes: One Class -->
        <comment userInput="Add CSS Classes: One Class" stepKey="commentAddCSSClassesOneClass"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterCSSClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add CSS Classes: Multiple Classes -->
        <comment userInput="Add CSS Classes: Multiple Classes" stepKey="commentAddCSSClassesMultipleClasses"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterCSSClasses3">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Stage: Check CSS Classes: Empty -->
        <comment userInput="Stage: Check CSS Classes: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: One Class -->
        <comment userInput="Stage: Check CSS Classes: One Class" stepKey="commentStageCheckOneClass"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageOneClass">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: Multiple Classes -->
        <comment userInput="Stage: Check CSS Classes: Multiple Classes" stepKey="commentStageCheckMultipleClasses"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageMultipleClasses">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check CSS Classes: Empty -->
        <comment userInput="Stage: Check CSS Classes: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: One Class -->
        <comment userInput="Stage: Check CSS Classes: One Class" stepKey="commentStageCheckOneClass2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageOneClass2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check CSS Classes: Multiple Classes -->
        <comment userInput="Stage: Check CSS Classes: Multiple Classes" stepKey="commentStageCheckMultipleClasses2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageMultipleClasses2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check CSS Classes: Empty -->
        <comment userInput="Storefront: Check CSS Classes: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check CSS Classes: One Class -->
        <comment userInput="Storefront: Check CSS Classes: One Class" stepKey="commentStorefrontCheckOneClass"/>
        <actionGroup ref="validateTextNoAlignmentActiveCSSClasses" stepKey="validateStorefrontOneClass">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyOneClass"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check CSS Classes: Multiple Classes -->
        <comment userInput="Storefront: Check CSS Classes: Multiple Classes" stepKey="commentStorefrontCheckMultipleClasses"/>
        <actionGroup ref="validateTextNoAlignmentActiveCSSClasses" stepKey="validateStorefrontMultipleClasses">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="index" value="3"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalMargins">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Margins"/>
            <description value="Tests that the Margin attributes functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89358"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Margins Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage5">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Margins: Empty -->
        <comment userInput="Add Margins: Empty" stepKey="commentAddMarginsEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="clearSlideOutPanelFieldMargins" stepKey="clearMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Margins: 0 -->
        <comment userInput="Add Margins: 0" stepKey="commentAddMargins0"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Margins: 1 -->
        <comment userInput="Add Margins: 1" stepKey="commentAddMargins1"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins3">
            <argument name="property" value="PageBuilderMarginsProperty1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Margins: 500 -->
        <comment userInput="Add Margins: 500" stepKey="commentAddMargins500"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins4">
            <argument name="property" value="PageBuilderMarginsProperty500"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Margins: Unique -->
        <comment userInput="Add Margins: Unique" stepKey="commentAddMarginsUnique"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins5">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Add Margins: Invalid -->
        <comment userInput="Add Margins: Invalid" stepKey="commentAddMarginsInvalid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText6">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection6"/>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins6">
            <argument name="property" value="PageBuilderMarginsPropertyInvalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings6"/>
        <!-- Stage: Check Margins: Empty -->
        <comment userInput="Stage: Check Margins: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Margins: 0 -->
        <comment userInput="Stage: Check Margins: 0" stepKey="commentStageCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage0">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Margins: 1 -->
        <comment userInput="Stage: Check Margins: 1" stepKey="commentStageCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage1">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Margins: 500 -->
        <comment userInput="Stage: Check Margins: 500" stepKey="commentStageCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage500">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Margins: Unique -->
        <comment userInput="Stage: Check Margins: Unique" stepKey="commentStageCheckUnique"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageUnique">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Margins: Invalid -->
        <comment userInput="Stage: Check Margins: Invalid" stepKey="commentStageCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStageInvalid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Margins: Empty -->
        <comment userInput="Stage: Check Margins: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Margins: 0 -->
        <comment userInput="Stage: Check Margins: 0" stepKey="commentStageCheck02"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage02">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Margins: 1 -->
        <comment userInput="Stage: Check Margins: 1" stepKey="commentStageCheck12"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage12">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Margins: 500 -->
        <comment userInput="Stage: Check Margins: 500" stepKey="commentStageCheck5002"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage5002">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Margins: Unique -->
        <comment userInput="Stage: Check Margins: Unique" stepKey="commentStageCheckUnique2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageUnique2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Margins: Invalid -->
        <comment userInput="Stage: Check Margins: Invalid" stepKey="commentStageCheckInvalid2"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStageInvalid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Margins: Empty -->
        <comment userInput="Storefront: Check Margins: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Margins: 0 -->
        <comment userInput="Storefront: Check Margins: 0" stepKey="commentStorefrontCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront0">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Margins: 1 -->
        <comment userInput="Storefront: Check Margins: 1" stepKey="commentStorefrontCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront1">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Margins: 500 -->
        <comment userInput="Storefront: Check Margins: 500" stepKey="commentStorefrontCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront500">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Margins: Unique -->
        <comment userInput="Storefront: Check Margins: Unique" stepKey="commentStorefrontCheckUnique"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontUnique">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Storefront: Check Margins: Invalid -->
        <comment userInput="Storefront: Check Margins: Invalid" stepKey="commentStorefrontCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoMargins" stepKey="validateStorefrontInvalid">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalPadding">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - Padding"/>
            <description value="Tests that the Padding attributes functions as expected on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89359"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add A Row For Each Text Padding Test -->
        <comment userInput="Add Rows" stepKey="commentAddRows"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage5">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Add Padding: Empty -->
        <comment userInput="Add Padding: Empty" stepKey="commentAddPaddingEmpty"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText1">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection1"/>
        <actionGroup ref="clearSlideOutPanelFieldPadding" stepKey="clearPadding">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <!-- Add Padding: 0 -->
        <comment userInput="Add Padding: 0" stepKey="commentAddPadding0"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText2">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding2">
            <argument name="property" value="PageBuilderPaddingPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Add Padding: 1 -->
        <comment userInput="Add Padding: 1" stepKey="commentAddPadding1"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText3">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding3">
            <argument name="property" value="PageBuilderPaddingProperty1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Add Padding: 500 -->
        <comment userInput="Add Padding: 500" stepKey="commentAddPadding500"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="4"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText4">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection4"/>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding4">
            <argument name="property" value="PageBuilderPaddingProperty500"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <!-- Add Padding: Unique -->
        <comment userInput="Add Padding: Unique" stepKey="commentAddPaddingUnique"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage5">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="5"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText5">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection5"/>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding5">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings5"/>
        <!-- Add Padding: Invalid -->
        <comment userInput="Add Padding: Invalid" stepKey="commentAddPaddingInvalid"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage6">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="6"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText6">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection6"/>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding6">
            <argument name="property" value="PageBuilderPaddingPropertyInvalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings6"/>
        <!-- Stage: Check Padding: Empty -->
        <comment userInput="Stage: Check Padding: Empty" stepKey="commentStageCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStageEmpty">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Padding: 0 -->
        <comment userInput="Stage: Check Padding: 0" stepKey="commentStageCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage0">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Padding: 1 -->
        <comment userInput="Stage: Check Padding: 1" stepKey="commentStageCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage1">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Padding: 500 -->
        <comment userInput="Stage: Check Padding: 500" stepKey="commentStageCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage500">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Padding: Unique -->
        <comment userInput="Stage: Check Padding: Unique" stepKey="commentStageCheckUnique"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageUnique">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Padding: Invalid -->
        <comment userInput="Stage: Check Padding: Invalid" stepKey="commentStageCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStageInvalid">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check Padding: Empty -->
        <comment userInput="Stage: Check Padding: Empty" stepKey="commentStageCheckEmpty2"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStageEmpty2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Stage: Check Padding: 0 -->
        <comment userInput="Stage: Check Padding: 0" stepKey="commentStageCheck02"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage02">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Stage: Check Padding: 1 -->
        <comment userInput="Stage: Check Padding: 1" stepKey="commentStageCheck12"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage12">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Stage: Check Padding: 500 -->
        <comment userInput="Stage: Check Padding: 500" stepKey="commentStageCheck5002"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStage5002">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Stage: Check Padding: Unique -->
        <comment userInput="Stage: Check Padding: Unique" stepKey="commentStageCheckUnique2"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStageUnique2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Stage: Check Padding: Invalid -->
        <comment userInput="Stage: Check Padding: Invalid" stepKey="commentStageCheckInvalid2"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStageInvalid2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check Padding: Empty -->
        <comment userInput="Storefront: Check Padding: Empty" stepKey="commentStorefrontCheckEmpty"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStorefrontEmpty">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Storefront: Check Padding: 0 -->
        <comment userInput="Storefront: Check Padding: 0" stepKey="commentStorefrontCheck0"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront0">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <!-- Storefront: Check Padding: 1 -->
        <comment userInput="Storefront: Check Padding: 1" stepKey="commentStorefrontCheck1"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront1">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty1"/>
            <argument name="index" value="3"/>
        </actionGroup>
        <!-- Storefront: Check Padding: 500 -->
        <comment userInput="Storefront: Check Padding: 500" stepKey="commentStorefrontCheck500"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefront500">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingProperty500"/>
            <argument name="index" value="4"/>
        </actionGroup>
        <!-- Storefront: Check Padding: Unique -->
        <comment userInput="Storefront: Check Padding: Unique" stepKey="commentStorefrontCheckUnique"/>
        <actionGroup ref="validateTextNoAlignment" stepKey="validateStorefrontUnique">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="5"/>
        </actionGroup>
        <!-- Storefront: Check Padding: Invalid -->
        <comment userInput="Storefront: Check Padding: Invalid" stepKey="commentStorefrontCheckInvalid"/>
        <actionGroup ref="validateTextNoAlignmentNoPadding" stepKey="validateStorefrontInvalid">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="index" value="6"/>
        </actionGroup>
    </test>
    <test name="AdvancedConfigurationFunctionalAllAttributes">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="MAGETWO-83415"/>
            <title value="Advanced Configuration - Functional - All Attributes"/>
            <description value="Tests that all attributes function as expected together on Stage and Storefront for Text"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89360"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-advancedConfig"/>
            <group value="pagebuilder-text"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <!-- Add Text To Stage -->
        <comment userInput="Add Text To Stage" stepKey="commentAddText"/>
        <actionGroup ref="dragContentBlockToContainer" stepKey="dragTextIntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="containerBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
            <argument name="contentBlockIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="fillTextFieldOnTextEditPanel" stepKey="enterText">
            <argument name="property" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectAlignmentCenter">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="selectBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertySolid"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty500"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty500"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterCSSClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Stage: Check All Attributes -->
        <comment userInput="Stage: Check All Attributes" stepKey="commentStageCheck1"/>
        <actionGroup ref="validateTextAllActive" stepKey="validateStage1">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <comment userInput="Validate Stage After Save" stepKey="commentStageAfterSave"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <!-- Stage: Check All Attributes -->
        <comment userInput="Stage: Check All Attributes" stepKey="commentStageCheck2"/>
        <actionGroup ref="validateTextAllActive" stepKey="validateStage2">
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <amOnPage url="text{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <!-- Storefront: Check All Attributes -->
        <comment userInput="Storefront: Check All Attributes" stepKey="commentStorefrontCheck"/>
        <actionGroup ref="validateTextAllActive" stepKey="validateStorefront">
            <argument name="page" value="TextOnStorefront"/>
            <argument name="text" value="PageBuilderTextContentBlock"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertySolid"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty500"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty500"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
    </test>
</tests>
